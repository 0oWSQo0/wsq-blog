import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as l}from"./app-ByvFWdWZ.js";const p={};function o(t,s){return l(),a("div",null,s[0]||(s[0]=[e(`<p>Redis 是一种键值（<code>key-value</code>）型的缓存型数据库，它将数据全部以键值对的形式存储在内存中，并且<code>key</code>与<code>value</code>一一对应。这里的<code>key</code>被形象的称之为密钥，Redis 提供了诸多操作这把“密钥”的命令，从而实现了对存储数据的管理。</p><p>可以把<code>key</code>看成<code>value</code>的变量，通过检索<code>key</code>就可以找到对应的<code>value</code>值。</p><h2 id="key的类型" tabindex="-1"><a class="header-anchor" href="#key的类型"><span>key的类型</span></a></h2><p><code>key</code>的类型对应着<code>value</code>的类型，同样也有五种（<code>string、list、hash、set、zset</code>）。如果<code>key</code>指向的是一个字符串类型的值，那么<code>key</code>的类型就是字符串。我们可以通过<code>TYPE</code>命令来查看<code>key</code>的类型：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 字符串</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SET</span><span style="color:#ADDCFF;"> weather</span><span style="color:#ADDCFF;"> &quot;sunny&quot;</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">TYPE</span><span style="color:#ADDCFF;"> weather</span></span>
<span class="line"><span style="color:#FFB757;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 列表</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">LPUSH</span><span style="color:#ADDCFF;"> book_list</span><span style="color:#ADDCFF;"> &quot;programming in scala&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">1</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">TYPE</span><span style="color:#ADDCFF;"> book_list</span></span>
<span class="line"><span style="color:#FFB757;">list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 集合</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SADD</span><span style="color:#ADDCFF;"> pat</span><span style="color:#ADDCFF;"> &quot;dog&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">1</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">TYPE</span><span style="color:#ADDCFF;"> pat</span></span>
<span class="line"><span style="color:#91CBFF;">set</span></span></code></pre></div><h2 id="key的命名规范" tabindex="-1"><a class="header-anchor" href="#key的命名规范"><span>key的命名规范</span></a></h2><p><code>key</code>的命名需要遵循以下规则：</p><ul><li><code>key</code>取值不可以太长，否则会影响<code>value</code>的查找效率，并且浪费内存空间。</li><li><code>key</code>取值也不能过短，否则会使得<code>key</code>可读性变差。</li></ul><p>在<code>key</code>的取值上， Redis 官方建议使用“见名知意”的字符串格式。比如要现在存放一个用户的姓名：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">set</span><span style="color:#ADDCFF;"> user:id:01:username</span><span style="color:#ADDCFF;"> XiaoHong</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span></code></pre></div><p>上述示例，自定义了<code>uesr:id:01:username</code>这个<code>key</code>，通过<code>key</code>不仅可以知道用户的<code>id</code>，还可以知道这个<code>key</code>是用来存储用户名字的。注意，这里的<code>:</code>只是起到分割符的作用，并不是固定的语法格式。</p><p>对于相同数据类型而言，如果对已经存在的<code>key</code>重新设置了新的<code>value</code>，那么原来的<code>value</code>就会被覆盖掉。因此，您可以用这种方法来修改<code>key</code>存储的值。</p><h2 id="key过期时间" tabindex="-1"><a class="header-anchor" href="#key过期时间"><span>key过期时间</span></a></h2><p>Redis 允许你为<code>key</code>设置一个过期时间（使用<code>EXPIRE</code>等命令），也就是“到点自动删除”，这在实际业务中是非常有用的，一是它可以避免使用频率不高的<code>key</code>长期存在，从而占用内存资源；二是控制缓存的失效时间。</p><p>Redis 会把每个设置了过期时间的<code>key</code>存放到一个独立的字典中，并且会定时遍历这个字典来删除到期的<code>key</code>。除了定时遍历之外，它还会使用“惰性策略”来删除过期的<code>key</code>。所谓“惰性策略”指的是当客户端访问这个<code>key</code>的时候，Redis 对<code>key</code>的过期时间进行检查，如果过期了就立即删除。Redis 使用两种方式相结合的方法来处理过去的<code>key</code>。</p><h2 id="键命令汇总" tabindex="-1"><a class="header-anchor" href="#键命令汇总"><span>键命令汇总</span></a></h2><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>DEL key</td><td>若键存在的情况下，该命令用于删除键</td></tr><tr><td>DUMP key</td><td>序列化给定 key ，并返回被序列化的值</td></tr><tr><td>EXISTS key</td><td>检查键是否存在，若存在则返回 1，否则返回 0</td></tr><tr><td>EXPIRE key</td><td>设置 key 的过期时间，以秒为单位</td></tr><tr><td>EXPIREAT key</td><td>与 EXPIRE 相似，用于为 key 设置过期时间，不同在于，它的时间参数值采用的是时间戳格式</td></tr><tr><td>PEXPIRE key</td><td>设置 key 的过期，以毫秒为单位</td></tr><tr><td>PEXPIREAT key</td><td>与 PEXPIRE 相似，用于为 key 设置过期时间，采用以毫秒为单位的时间戳格式</td></tr><tr><td>KEYS pattern</td><td>查找与指定 pattern 匹配的 key</td></tr><tr><td>MOVE key db</td><td>将当前数据库中的 key 移动至指定的数据库中（默认存储为 0 库，可选 1-15中的任意库）</td></tr><tr><td>PERSIST key</td><td>删除 key 的过期时间，然后 key 将一直存在，不会过期</td></tr><tr><td>PTTL key</td><td>检查 key 还剩多长时间过期，以毫秒为单位</td></tr><tr><td>TTL key</td><td>检查 key 还剩多长时间过期，以秒为单位</td></tr><tr><td>RANDOMKEY</td><td>从当前数据库中随机返回一个 key</td></tr><tr><td>RENAME key newkey</td><td>修改 key 的名称</td></tr><tr><td>RENAMENX key newkey</td><td>如果新键名不重复，则将 key 修改为 newkey</td></tr><tr><td>SCAN cursor</td><td>基于游标的迭代器，用于迭代数据库中存在的所有键，cursor 指的是迭代游标</td></tr><tr><td>TYPE key</td><td>获取 value 的数据类型</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># DUMP序列化</span></span>
<span class="line"><span style="color:#BDC4CC;"># 如果 key 不存在时，则返回 nil</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SET</span><span style="color:#ADDCFF;"> num</span><span style="color:#91CBFF;"> 12</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">DUMP</span><span style="color:#ADDCFF;"> num</span></span>
<span class="line"><span style="color:#FFB757;">&quot;\\x00\\xc0\\x0c\\t\\x00\\xec\\xd8\\xa9\\x9d\\b\\x82\\xdfd&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># EXPIRE设置过期时间</span></span>
<span class="line"><span style="color:#BDC4CC;"># key 过期后将自动被删除</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">set</span><span style="color:#ADDCFF;"> www.biancheng.net</span><span style="color:#ADDCFF;"> Python</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">set</span><span style="color:#ADDCFF;"> www.biancheng.net</span><span style="color:#ADDCFF;"> Python</span><span style="color:#ADDCFF;"> EX</span><span style="color:#91CBFF;"> 60</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">EXPIRE</span><span style="color:#ADDCFF;"> www.biancheng.net</span><span style="color:#91CBFF;"> 120</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># PEXPIREAT设置过期时间</span></span>
<span class="line"><span style="color:#BDC4CC;"># 置成功返回 1，若 key 不存在或者不能为其设置过期时间，则返回 0</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">set</span><span style="color:#ADDCFF;"> www.biancheng.net</span><span style="color:#ADDCFF;"> Python</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">PEXPIREAT</span><span style="color:#ADDCFF;"> www.biancheng.net</span><span style="color:#91CBFF;"> 12000000000</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># KEYS命令查找键</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#ADDCFF;"> 127.0.0.1:637</span><span style="color:#FF9492;">9&gt;</span><span style="color:#ADDCFF;"> SET</span><span style="color:#ADDCFF;"> course1</span><span style="color:#ADDCFF;"> redis</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#ADDCFF;"> 127.0.0.1:637</span><span style="color:#FF9492;">9&gt;</span><span style="color:#ADDCFF;"> SET</span><span style="color:#ADDCFF;"> course2</span><span style="color:#ADDCFF;"> php</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#ADDCFF;"> 127.0.0.1:637</span><span style="color:#FF9492;">9&gt;</span><span style="color:#ADDCFF;"> SET</span><span style="color:#ADDCFF;"> course3</span><span style="color:#ADDCFF;"> python</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">keys</span><span style="color:#ADDCFF;"> course</span><span style="color:#91CBFF;">*</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;course1&quot;</span></span>
<span class="line"><span style="color:#FFB757;">2</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;course2&quot;</span></span>
<span class="line"><span style="color:#FFB757;">3</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;course3&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;">#获取所有key</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">keys</span><span style="color:#91CBFF;"> *</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;course1&quot;</span></span>
<span class="line"><span style="color:#FFB757;">2</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;course2&quot;</span></span>
<span class="line"><span style="color:#FFB757;">3</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;course3&quot;</span></span>
<span class="line"><span style="color:#FFB757;">4</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;num&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># TTL命令</span></span>
<span class="line"><span style="color:#BDC4CC;"># 当键没有设置过期时间，表示是永久有效时，TTL 命令返回 -1；当键过期或者被删除时，TTL 命令返回 -2</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SET</span><span style="color:#ADDCFF;"> www.biancheng.net</span><span style="color:#ADDCFF;"> hello</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">ttl</span><span style="color:#ADDCFF;"> www.biancheng.net</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">-1</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SET</span><span style="color:#ADDCFF;"> user:1</span><span style="color:#ADDCFF;"> Jack</span><span style="color:#ADDCFF;"> EX</span><span style="color:#91CBFF;"> 120</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">TTL</span><span style="color:#ADDCFF;"> user:1</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">108</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">DEL</span><span style="color:#ADDCFF;"> user:1</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">1</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">TTL</span><span style="color:#ADDCFF;"> user:1</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">integer</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">-2</span></span></code></pre></div>`,18)]))}const r=n(p,[["render",o],["__file","Redis的键.html.vue"]]),y=JSON.parse('{"path":"/sql/redis/Redis%E7%9A%84%E9%94%AE.html","title":"","lang":"zh-CN","frontmatter":{"description":"Redis 是一种键值（key-value）型的缓存型数据库，它将数据全部以键值对的形式存储在内存中，并且key与value一一对应。这里的key被形象的称之为密钥，Redis 提供了诸多操作这把“密钥”的命令，从而实现了对存储数据的管理。 可以把key看成value的变量，通过检索key就可以找到对应的value值。 key的类型 key的类型对应着...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/sql/redis/Redis%E7%9A%84%E9%94%AE.html"}],["meta",{"property":"og:description","content":"Redis 是一种键值（key-value）型的缓存型数据库，它将数据全部以键值对的形式存储在内存中，并且key与value一一对应。这里的key被形象的称之为密钥，Redis 提供了诸多操作这把“密钥”的命令，从而实现了对存储数据的管理。 可以把key看成value的变量，通过检索key就可以找到对应的value值。 key的类型 key的类型对应着..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T09:49:11.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T09:49:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-23T09:49:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"key的类型","slug":"key的类型","link":"#key的类型","children":[]},{"level":2,"title":"key的命名规范","slug":"key的命名规范","link":"#key的命名规范","children":[]},{"level":2,"title":"key过期时间","slug":"key过期时间","link":"#key过期时间","children":[]},{"level":2,"title":"键命令汇总","slug":"键命令汇总","link":"#键命令汇总","children":[]}],"git":{"createdTime":1745401751000,"updatedTime":1745401751000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":4.29,"words":1286},"filePathRelative":"sql/redis/Redis的键.md","localizedDate":"2025年4月23日","autoDesc":true}');export{r as comp,y as data};
