import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as n,o as l}from"./app-ByvFWdWZ.js";const o={};function e(p,s){return l(),t("div",null,s[0]||(s[0]=[n(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h2><p>SVG 是一种基于 XML 语法的图像格式，全称是可缩放矢量图（<code>Scalable Vector Graphics</code>）。其他图像格式都是基于像素处理的，SVG 则是属于对图像的形状描述，所以它本质上是文本文件，体积较小，且不管放大多少倍都不会失真。</p><p>SVG 文件可以直接插入网页，成为 DOM 的一部分，然后用 JavaScript 和 CSS 进行操作。</p><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;!</span><span style="color:#72F088;">DOCTYPE</span><span style="color:#91CBFF;"> html</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">html</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">svg</span></span>
<span class="line"><span style="color:#91CBFF;">  id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;mysvg&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">  xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2000/svg&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">  viewBox</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;0 0 800 600&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">  preserveAspectRatio</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;xMidYMid meet&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">  &lt;</span><span style="color:#72F088;">circle</span><span style="color:#91CBFF;"> id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;mycircle&quot;</span><span style="color:#91CBFF;"> cx</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;400&quot;</span><span style="color:#91CBFF;"> cy</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;300&quot;</span><span style="color:#91CBFF;"> r</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;50&quot;</span><span style="color:#F0F3F6;"> /&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">svg</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">html</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>上面是 SVG 代码直接插入网页的例子。</p><p>SVG 代码也可以写在一个独立文件中，然后用<code>&lt;img&gt;、&lt;object&gt;、&lt;embed&gt;、&lt;iframe&gt;</code>等标签插入网页。</p><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">img</span><span style="color:#91CBFF;"> src</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;circle.svg&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">object</span><span style="color:#91CBFF;"> id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;object&quot;</span><span style="color:#91CBFF;"> data</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;circle.svg&quot;</span><span style="color:#91CBFF;"> type</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;image/svg+xml&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">object</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">embed</span><span style="color:#91CBFF;"> id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;embed&quot;</span><span style="color:#91CBFF;"> src</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;icon.svg&quot;</span><span style="color:#91CBFF;"> type</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;image/svg+xml&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">iframe</span><span style="color:#91CBFF;"> id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;iframe&quot;</span><span style="color:#91CBFF;"> src</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;icon.svg&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">iframe</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>CSS 也可以使用 SVG 文件。</p><div class="language-css" data-highlighter="shiki" data-ext="css" data-title="css" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#91CBFF;">.logo</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#91CBFF;">  background</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">url</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">icon.svg</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>SVG 文件还可以转为 BASE64 编码，然后作为 Data URI 写入网页。</p><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">img</span><span style="color:#91CBFF;"> src</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;data:image/svg+xml;base64,[data]&quot;</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><h2 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h2><h3 id="svg-标签" tabindex="-1"><a class="header-anchor" href="#svg-标签"><span><code>&lt;svg&gt;</code>标签</span></a></h3><p>SVG 代码都放在顶层标签<code>&lt;svg&gt;</code>之中。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;100%&quot; height=&quot;100%&quot;&gt;</span></span>
<span class="line"><span>  &lt;circle id=&quot;mycircle&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;svg&gt;</code>的<code>width</code>属性和<code>height</code>属性，指定了 SVG 图像在 HTML 元素中所占据的宽度和高度。除了相对单位，也可以采用绝对单位（单位：像素）。如果不指定这两个属性，SVG 图像的大小默认为300像素（宽）x 150像素（高）。</p><p>如果只想展示 SVG 图像的一部分，就要指定<code>viewBox</code>属性。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;100&quot; height=&quot;100&quot; viewBox=&quot;50 50 50 50&quot;&gt;</span></span>
<span class="line"><span>  &lt;circle id=&quot;mycircle&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;50&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;viewBox&gt;</code>属性的值有四个数字，分别是左上角的横坐标和纵坐标、视口的宽度和高度。上面代码中，SVG 图像是100像素宽 x 100像素高，<code>viewBox</code>属性指定视口从<code>(50, 50)</code>这个点开始。所以，实际看到的是右下角的四分之一圆。</p><p>注意，视口必须适配所在的空间。上面代码中，视口的大小是 50x50，由于 SVG 图像的大小是 100x100，所以视口会放大去适配 SVG 图像的大小，即放大了四倍。</p><p>如果不指定<code>width</code>属性和<code>height</code>属性，只指定<code>viewBox</code>属性，则相当于只给定 SVG 图像的长宽比。这时，SVG 图像的大小默认是所在的 HTML 元素的大小。</p><h3 id="circle-标签" tabindex="-1"><a class="header-anchor" href="#circle-标签"><span><code>&lt;circle&gt;</code>标签</span></a></h3><p><code>&lt;circle&gt;</code>标签代表圆形。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>  &lt;circle cx=&quot;30&quot;  cy=&quot;50&quot; r=&quot;25&quot; /&gt;</span></span>
<span class="line"><span>  &lt;circle cx=&quot;90&quot;  cy=&quot;50&quot; r=&quot;25&quot; class=&quot;red&quot; /&gt;</span></span>
<span class="line"><span>  &lt;circle cx=&quot;150&quot; cy=&quot;50&quot; r=&quot;25&quot; class=&quot;fancy&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p>上面的代码定义了三个圆。<code>&lt;circle&gt;</code>标签的<code>cx、cy、r</code>属性分别为横坐标、纵坐标和半径，单位为像素。坐标都是相对于<code>&lt;svg&gt;</code>画布的左上角原点。</p><p><code>class</code>属性用来指定对应的 CSS 类。</p><div class="language-css" data-highlighter="shiki" data-ext="css" data-title="css" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#91CBFF;">.red</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#91CBFF;">  fill</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">red</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91CBFF;">.fancy</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#91CBFF;">  fill</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">none</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">  stroke</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">black</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">  stroke-width</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">3</span><span style="color:#FF9492;">pt</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>SVG 的 CSS 属性与网页元素有所不同。</p><ul><li><code>fill</code>：填充色</li><li><code>stroke</code>：描边色</li><li><code>stroke-width</code>：边框宽度</li></ul><h3 id="line-标签" tabindex="-1"><a class="header-anchor" href="#line-标签"><span><code>&lt;line&gt;</code>标签</span></a></h3><p><code>&lt;line&gt;</code>标签用来绘制直线。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>  &lt;line x1=&quot;0&quot; y1=&quot;0&quot; x2=&quot;200&quot; y2=&quot;0&quot; style=&quot;stroke:rgb(0,0,0);stroke-width:5&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p>上面代码中，<code>&lt;line&gt;</code>标签的<code>x1</code>属性和<code>y1</code>属性，表示线段起点的横坐标和纵坐标；<code>x2</code>属性和<code>y2</code>属性，表示线段终点的横坐标和纵坐标；<code>style</code>属性表示线段的样式。</p><h3 id="polyline-标签" tabindex="-1"><a class="header-anchor" href="#polyline-标签"><span><code>&lt;polyline&gt;</code>标签</span></a></h3><p><code>&lt;polyline&gt;</code>标签用于绘制一根折线。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>  &lt;polyline points=&quot;3,3 30,28 3,53&quot; fill=&quot;none&quot; stroke=&quot;black&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;polyline&gt;</code>的<code>points</code>属性指定了每个端点的坐标，横坐标与纵坐标之间与逗号分隔，点与点之间用空格分隔。</p><h3 id="rect-标签" tabindex="-1"><a class="header-anchor" href="#rect-标签"><span><code>&lt;rect&gt;</code>标签</span></a></h3><p><code>&lt;rect&gt;</code>标签用于绘制矩形。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>  &lt;rect x=&quot;0&quot; y=&quot;0&quot; height=&quot;100&quot; width=&quot;200&quot; style=&quot;stroke: #70d5dd; fill: #dd524b&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;rect&gt;</code>的<code>x</code>属性和<code>y</code>属性，指定了矩形左上角端点的横坐标和纵坐标；<code>width</code>属性和<code>height</code>属性指定了矩形的宽度和高度（单位像素）。</p><h3 id="ellipse-标签" tabindex="-1"><a class="header-anchor" href="#ellipse-标签"><span><code>&lt;ellipse&gt;</code>标签</span></a></h3><p><code>&lt;ellipse&gt;</code>标签用于绘制椭圆。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>  &lt;ellipse cx=&quot;60&quot; cy=&quot;60&quot; ry=&quot;40&quot; rx=&quot;20&quot; stroke=&quot;black&quot; stroke-width=&quot;5&quot; fill=&quot;silver&quot;/&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;ellipse&gt;</code>的<code>cx</code>属性和<code>cy</code>属性，指定了椭圆中心的横坐标和纵坐标（单位像素）；<code>rx</code>属性和<code>ry</code>属性，指定了椭圆横向轴和纵向轴的半径（单位像素）。</p><h3 id="polygon-标签" tabindex="-1"><a class="header-anchor" href="#polygon-标签"><span><code>&lt;polygon&gt;</code>标签</span></a></h3><p><code>&lt;polygon&gt;</code>标签用于绘制多边形。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>  &lt;polygon fill=&quot;green&quot; stroke=&quot;orange&quot; stroke-width=&quot;1&quot; points=&quot;0,0 100,0 100,100 0,100 0,0&quot;/&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;polygon&gt;</code>的<code>points</code>属性指定了每个端点的坐标，横坐标与纵坐标之间与逗号分隔，点与点之间用空格分隔。</p><h3 id="path-标签" tabindex="-1"><a class="header-anchor" href="#path-标签"><span><code>&lt;path&gt;</code>标签</span></a></h3><p><code>&lt;path&gt;</code>标签用于制路径。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>    &lt;path d=&quot;</span></span>
<span class="line"><span>      M 18,3</span></span>
<span class="line"><span>      L 46,3</span></span>
<span class="line"><span>      L 46,40</span></span>
<span class="line"><span>      L 61,40</span></span>
<span class="line"><span>      L 32,68</span></span>
<span class="line"><span>      L 3,40</span></span>
<span class="line"><span>      L 18,40</span></span>
<span class="line"><span>      Z</span></span>
<span class="line"><span>    &quot;&gt;&lt;/path&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;path&gt;</code>的<code>d</code>属性表示绘制顺序，它的值是一个长字符串，每个字母表示一个绘制动作，后面跟着坐标。</p><ul><li><code>M</code>：移动到（<code>moveto</code>）</li><li><code>L</code>：画直线到（<code>lineto</code>）</li><li><code>Z</code>：闭合路径</li></ul><h3 id="text-标签" tabindex="-1"><a class="header-anchor" href="#text-标签"><span><code>&lt;text&gt;</code>标签</span></a></h3><p><code>&lt;text&gt;</code>标签用于绘制文本。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;180&quot;&gt;</span></span>
<span class="line"><span>  &lt;text x=&quot;50&quot; y=&quot;25&quot;&gt;Hello World&lt;/text&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;text&gt;</code>的<code>x</code>属性和<code>y</code>属性，表示文本区块基线（<code>baseline</code>）起点的横坐标和纵坐标。文字的样式可以用<code>class</code>或<code>style</code>属性指定。</p><h3 id="use-标签" tabindex="-1"><a class="header-anchor" href="#use-标签"><span><code>&lt;use&gt;</code>标签</span></a></h3><p><code>&lt;use&gt;</code>标签用于复制一个形状。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg viewBox=&quot;0 0 30 10&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;</span></span>
<span class="line"><span>  &lt;circle id=&quot;myCircle&quot; cx=&quot;5&quot; cy=&quot;5&quot; r=&quot;4&quot;/&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  &lt;use href=&quot;#myCircle&quot; x=&quot;10&quot; y=&quot;0&quot; fill=&quot;blue&quot; /&gt;</span></span>
<span class="line"><span>  &lt;use href=&quot;#myCircle&quot; x=&quot;20&quot; y=&quot;0&quot; fill=&quot;white&quot; stroke=&quot;blue&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p><code>&lt;use&gt;</code>的<code>href</code>属性指定所要复制的节点，<code>x</code>属性和<code>y</code>属性是<code>&lt;use&gt;</code>左上角的坐标。另外，还可以指定<code>width</code>和<code>height</code>坐标。</p><h3 id="g-标签" tabindex="-1"><a class="header-anchor" href="#g-标签"><span><code>&lt;g&gt;</code>标签</span></a></h3><p><code>&lt;g&gt;</code>标签用于将多个形状组成一个组（<code>group</code>），方便复用。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;100&quot;&gt;</span></span>
<span class="line"><span>  &lt;g id=&quot;myCircle&quot;&gt;</span></span>
<span class="line"><span>    &lt;text x=&quot;25&quot; y=&quot;20&quot;&gt;圆形&lt;/text&gt;</span></span>
<span class="line"><span>    &lt;circle cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;20&quot;/&gt;</span></span>
<span class="line"><span>  &lt;/g&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  &lt;use href=&quot;#myCircle&quot; x=&quot;100&quot; y=&quot;0&quot; fill=&quot;blue&quot; /&gt;</span></span>
<span class="line"><span>  &lt;use href=&quot;#myCircle&quot; x=&quot;200&quot; y=&quot;0&quot; fill=&quot;white&quot; stroke=&quot;blue&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><h3 id="defs-标签" tabindex="-1"><a class="header-anchor" href="#defs-标签"><span><code>&lt;defs&gt;</code>标签</span></a></h3><p><code>&lt;defs&gt;</code>标签用于自定义形状，它内部的代码不会显示，仅供引用。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;300&quot; height=&quot;100&quot;&gt;</span></span>
<span class="line"><span>  &lt;defs&gt;</span></span>
<span class="line"><span>    &lt;g id=&quot;myCircle&quot;&gt;</span></span>
<span class="line"><span>      &lt;text x=&quot;25&quot; y=&quot;20&quot;&gt;圆形&lt;/text&gt;</span></span>
<span class="line"><span>      &lt;circle cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;20&quot;/&gt;</span></span>
<span class="line"><span>    &lt;/g&gt;</span></span>
<span class="line"><span>  &lt;/defs&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  &lt;use href=&quot;#myCircle&quot; x=&quot;0&quot; y=&quot;0&quot; /&gt;</span></span>
<span class="line"><span>  &lt;use href=&quot;#myCircle&quot; x=&quot;100&quot; y=&quot;0&quot; fill=&quot;blue&quot; /&gt;</span></span>
<span class="line"><span>  &lt;use href=&quot;#myCircle&quot; x=&quot;200&quot; y=&quot;0&quot; fill=&quot;white&quot; stroke=&quot;blue&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><h3 id="pattern-标签" tabindex="-1"><a class="header-anchor" href="#pattern-标签"><span><code>&lt;pattern&gt;</code>标签</span></a></h3><p><code>&lt;pattern&gt;</code>标签用于自定义一个形状，该形状可以被引用来平铺一个区域。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;500&quot; height=&quot;500&quot;&gt;</span></span>
<span class="line"><span>  &lt;defs&gt;</span></span>
<span class="line"><span>    &lt;pattern id=&quot;dots&quot; x=&quot;0&quot; y=&quot;0&quot; width=&quot;100&quot; height=&quot;100&quot; patternUnits=&quot;userSpaceOnUse&quot;&gt;</span></span>
<span class="line"><span>      &lt;circle fill=&quot;#bee9e8&quot; cx=&quot;50&quot; cy=&quot;50&quot; r=&quot;35&quot; /&gt;</span></span>
<span class="line"><span>    &lt;/pattern&gt;</span></span>
<span class="line"><span>  &lt;/defs&gt;</span></span>
<span class="line"><span>  &lt;rect x=&quot;0&quot; y=&quot;0&quot; width=&quot;100%&quot; height=&quot;100%&quot; fill=&quot;url(#dots)&quot; /&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p>上面代码中，<code>&lt;pattern&gt;</code>标签将一个圆形定义为<code>dots</code>模式。<code>patternUnits=&quot;userSpaceOnUse&quot;</code>表示<code>&lt;pattern&gt;</code>的宽度和长度是实际的像素值。然后，指定这个模式去填充下面的矩形。</p><h3 id="image-标签" tabindex="-1"><a class="header-anchor" href="#image-标签"><span><code>&lt;image&gt;</code>标签</span></a></h3><p><code>&lt;image&gt;</code>标签用于插入图片文件。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg viewBox=&quot;0 0 100 100&quot; width=&quot;100&quot; height=&quot;100&quot;&gt;</span></span>
<span class="line"><span>  &lt;image xlink:href=&quot;path/to/image.jpg&quot;</span></span>
<span class="line"><span>    width=&quot;50%&quot; height=&quot;50%&quot;/&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p>上面代码中，<code>&lt;image&gt;</code>的<code>xlink:href</code>属性表示图像的来源。</p><h3 id="animate-标签" tabindex="-1"><a class="header-anchor" href="#animate-标签"><span><code>&lt;animate&gt;</code>标签</span></a></h3><p><code>&lt;animate&gt;</code>标签用于产生动画效果。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;500px&quot; height=&quot;500px&quot;&gt;</span></span>
<span class="line"><span>  &lt;rect x=&quot;0&quot; y=&quot;0&quot; width=&quot;100&quot; height=&quot;100&quot; fill=&quot;#feac5e&quot;&gt;</span></span>
<span class="line"><span>    &lt;animate attributeName=&quot;x&quot; from=&quot;0&quot; to=&quot;500&quot; dur=&quot;2s&quot; repeatCount=&quot;indefinite&quot; /&gt;</span></span>
<span class="line"><span>  &lt;/rect&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p>上面代码中，矩形会不断移动，产生动画效果。</p><p><code>&lt;animate&gt;</code>的属性含义：</p><ul><li><code>attributeName</code>：发生动画效果的属性名</li><li><code>from</code>：单次动画的初始值</li><li><code>to</code>：单次动画的结束值</li><li><code>dur</code>：单次动画的持续时间</li><li><code>repeatCount</code>：动画的循环模式</li></ul><p>可以在多个属性上面定义动画。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;animate attributeName=&quot;x&quot; from=&quot;0&quot; to=&quot;500&quot; dur=&quot;2s&quot; repeatCount=&quot;indefinite&quot; /&gt;</span></span>
<span class="line"><span>&lt;animate attributeName=&quot;width&quot; to=&quot;500&quot; dur=&quot;2s&quot; repeatCount=&quot;indefinite&quot; /&gt;</span></span></code></pre></div><h3 id="animatetransform-标签" tabindex="-1"><a class="header-anchor" href="#animatetransform-标签"><span><code>&lt;animateTransform&gt;</code>标签</span></a></h3><p><code>&lt;animate&gt;</code>标签对 CSS 的<code>transform</code>属性不起作用，如果需要变形，就要使用<code>&lt;animateTransform&gt;</code>标签。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;500px&quot; height=&quot;500px&quot;&gt;</span></span>
<span class="line"><span>  &lt;rect x=&quot;250&quot; y=&quot;250&quot; width=&quot;50&quot; height=&quot;50&quot; fill=&quot;#4bc0c8&quot;&gt;</span></span>
<span class="line"><span>    &lt;animateTransform attributeName=&quot;transform&quot; type=&quot;rotate&quot; begin=&quot;0s&quot; dur=&quot;10s&quot; from=&quot;0 200 200&quot; to=&quot;360 400 400&quot; repeatCount=&quot;indefinite&quot; /&gt;</span></span>
<span class="line"><span>  &lt;/rect&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div><p>上面代码中，<code>&lt;animateTransform&gt;</code>的效果为旋转（<code>rotate</code>），这时<code>from</code>和<code>to</code>属性值有三个数字，第一个数字是角度值，第二个值和第三个值是旋转中心的坐标。<code>from=&quot;0 200 200&quot;</code>表示开始时，角度为 0，围绕<code>(200, 200)</code>开始旋转；<code>to=&quot;360 400 400&quot;</code>表示结束时，角度为 360，围绕<code>(400, 400)</code>旋转。</p><h2 id="javascript-操作" tabindex="-1"><a class="header-anchor" href="#javascript-操作"><span>JavaScript 操作</span></a></h2><h3 id="dom-操作" tabindex="-1"><a class="header-anchor" href="#dom-操作"><span>DOM 操作</span></a></h3><p>如果 SVG 代码直接写在 HTML 网页之中，它就成为网页 DOM 的一部分，可以直接用 DOM 操作。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg</span></span>
<span class="line"><span>id=&quot;mysvg&quot;</span></span>
<span class="line"><span>xmlns=&quot;http://www.w3.org/2000/svg&quot;</span></span>
<span class="line"><span>viewBox=&quot;0 0 800 600&quot;</span></span>
<span class="line"><span>preserveAspectRatio=&quot;xMidYMid meet&quot;</span></span>
<span class="line"><span>&gt;</span></span>
<span class="line"><span>  &lt;circle id=&quot;mycircle&quot; cx=&quot;400&quot; cy=&quot;300&quot; r=&quot;50&quot; /&gt;</span></span>
<span class="line"><span>&lt;svg&gt;</span></span></code></pre></div><p>上面代码插入网页之后，就可以用 CSS 定制样式。</p><div class="language-css" data-highlighter="shiki" data-ext="css" data-title="css" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#72F088;">circle</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#91CBFF;">  stroke-width</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">5</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">  stroke</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">#f00</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">  fill</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">#ff0</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#72F088;">circle</span><span style="color:#91CBFF;">:hover</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#91CBFF;">  stroke</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">#090</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">  fill</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">#fff</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>然后，可以用 JavaScript 代码操作 SVG。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> mycircle </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> document.</span><span style="color:#DBB7FF;">getElementById</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;mycircle&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">mycircle.</span><span style="color:#DBB7FF;">addEventListener</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;click&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">function</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">e</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">  console.</span><span style="color:#DBB7FF;">log</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;circle clicked - enlarging&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">  mycircle.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;r&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">60</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">}, </span><span style="color:#91CBFF;">false</span><span style="color:#F0F3F6;">);</span></span></code></pre></div><p>上面代码指定，如果点击图形，就改写<code>circle</code>元素的<code>r</code>属性。</p><h3 id="获取-svg-dom" tabindex="-1"><a class="header-anchor" href="#获取-svg-dom"><span>获取 SVG DOM</span></a></h3><p>使用<code>&lt;object&gt;、&lt;iframe&gt;、&lt;embed&gt;</code>标签插入 SVG 文件，可以获取 SVG DOM。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> svgObject </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> document.</span><span style="color:#DBB7FF;">getElementById</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;object&#39;</span><span style="color:#F0F3F6;">).contentDocument;</span></span>
<span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> svgIframe </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> document.</span><span style="color:#DBB7FF;">getElementById</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;iframe&#39;</span><span style="color:#F0F3F6;">).contentDocument;</span></span>
<span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> svgEmbed </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> document.</span><span style="color:#DBB7FF;">getElementById</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;embed&#39;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">getSVGDocument</span><span style="color:#F0F3F6;">();</span></span></code></pre></div><p>注意，如果使用<code>&lt;img&gt;</code>标签插入 SVG 文件，就无法获取 SVG DOM。</p><h3 id="读取-svg-源码" tabindex="-1"><a class="header-anchor" href="#读取-svg-源码"><span>读取 SVG 源码</span></a></h3><p>由于 SVG 文件就是一段 XML 文本，因此可以通过读取 XML 代码的方式，读取 SVG 源码。</p><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">div</span><span style="color:#91CBFF;"> id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;svg-container&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">  &lt;</span><span style="color:#72F088;">svg</span></span>
<span class="line"><span style="color:#91CBFF;">    xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2000/svg&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xmlns:xlink</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/1999/xlink&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xml:space</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;preserve&quot;</span><span style="color:#91CBFF;"> width</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;500&quot;</span><span style="color:#91CBFF;"> height</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;440&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">  &gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- svg code --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">  &lt;/</span><span style="color:#72F088;">svg</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">div</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>使用<code>XMLSerializer</code>实例的<code>serializeToString()</code>方法，获取 SVG 元素的代码。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> svgString </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> XMLSerializer</span><span style="color:#F0F3F6;">()</span></span>
<span class="line"><span style="color:#F0F3F6;">  .</span><span style="color:#DBB7FF;">serializeToString</span><span style="color:#F0F3F6;">(document.</span><span style="color:#DBB7FF;">querySelector</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;svg&#39;</span><span style="color:#F0F3F6;">));</span></span></code></pre></div><h3 id="svg-图像转为-canvas-图像" tabindex="-1"><a class="header-anchor" href="#svg-图像转为-canvas-图像"><span>SVG 图像转为 Canvas 图像</span></a></h3><p>首先，需要新建一个<code>Image</code>对象，将 SVG 图像指定到该<code>Image</code>对象的<code>src</code>属性。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> img </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> Image</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> svg </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> Blob</span><span style="color:#F0F3F6;">([svgString], {type: </span><span style="color:#ADDCFF;">&quot;image/svg+xml;charset=utf-8&quot;</span><span style="color:#F0F3F6;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">var</span><span style="color:#91CBFF;"> DOMURL</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> self.</span><span style="color:#91CBFF;">URL</span><span style="color:#FF9492;"> ||</span><span style="color:#F0F3F6;"> self.webkitURL </span><span style="color:#FF9492;">||</span><span style="color:#F0F3F6;"> self;</span></span>
<span class="line"><span style="color:#FF9492;">var</span><span style="color:#F0F3F6;"> url </span><span style="color:#FF9492;">=</span><span style="color:#91CBFF;"> DOMURL</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">createObjectURL</span><span style="color:#F0F3F6;">(svg);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">img.src </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> url;</span></span></code></pre></div><p>然后，当图像加载完成后，再将它绘制到<code>&lt;canvas&gt;</code>元素。</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">img.</span><span style="color:#DBB7FF;">onload</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> function</span><span style="color:#F0F3F6;"> () {</span></span>
<span class="line"><span style="color:#FF9492;">  var</span><span style="color:#F0F3F6;"> canvas </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> document.</span><span style="color:#DBB7FF;">getElementById</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;canvas&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">  var</span><span style="color:#F0F3F6;"> ctx </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> canvas.</span><span style="color:#DBB7FF;">getContext</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;2d&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">  ctx.</span><span style="color:#DBB7FF;">drawImage</span><span style="color:#F0F3F6;">(img, </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">};</span></span></code></pre></div><h2 id="实例-折线图" tabindex="-1"><a class="header-anchor" href="#实例-折线图"><span>实例：折线图</span></a></h2><p>下面将一张数据表格画成折线图。</p><table><thead><tr><th style="text-align:center;">Date</th><th style="text-align:center;">Amount</th></tr></thead><tbody><tr><td style="text-align:center;">2014-01-01</td><td style="text-align:center;">$10</td></tr><tr><td style="text-align:center;">2014-02-01</td><td style="text-align:center;">$20</td></tr><tr><td style="text-align:center;">2014-03-01</td><td style="text-align:center;">$40</td></tr><tr><td style="text-align:center;">2014-04-01</td><td style="text-align:center;">$80</td></tr></tbody></table><p>上面的图形，可以画成一个坐标系，<code>Date</code>作为横轴，<code>Amount</code>作为纵轴，四行数据画成一个数据点。</p><div class="language-svg" data-highlighter="shiki" data-ext="svg" data-title="svg" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>&lt;svg width=&quot;350&quot; height=&quot;160&quot;&gt;</span></span>
<span class="line"><span>  &lt;g class=&quot;layer&quot; transform=&quot;translate(60,10)&quot;&gt;</span></span>
<span class="line"><span>    &lt;circle r=&quot;2&quot; cx=&quot;0&quot; cy=&quot;105&quot; /&gt;</span></span>
<span class="line"><span>    &lt;circle r=&quot;2&quot; cx=&quot;90&quot; cy=&quot;90&quot; /&gt;</span></span>
<span class="line"><span>    &lt;circle r=&quot;2&quot; cx=&quot;180&quot; cy=&quot;60&quot; /&gt;</span></span>
<span class="line"><span>    &lt;circle r=&quot;2&quot; cx=&quot;270&quot; cy=&quot;0&quot; /&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    &lt;polyline points=&quot;0,105 90,90 180,60 270,0&quot; fill=&quot;none&quot; stroke=&quot;red&quot; /&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    &lt;g class=&quot;y axis&quot;&gt;</span></span>
<span class="line"><span>      &lt;line x1=&quot;0&quot; y1=&quot;0&quot; x2=&quot;0&quot; y2=&quot;120&quot; style=&quot;stroke:black;stroke-width:1&quot; /&gt;</span></span>
<span class="line"><span>      &lt;text x=&quot;-40&quot; y=&quot;115&quot; dy=&quot;5&quot;&gt;$10&lt;/text&gt;</span></span>
<span class="line"><span>      &lt;text x=&quot;-40&quot; y=&quot;5&quot; dy=&quot;5&quot;&gt;$80&lt;/text&gt;</span></span>
<span class="line"><span>    &lt;/g&gt;</span></span>
<span class="line"><span>    &lt;g class=&quot;x axis&quot; transform=&quot;translate(0, 120)&quot;&gt;</span></span>
<span class="line"><span>      &lt;line x1=&quot;0&quot; y1=&quot;0&quot; x2=&quot;270&quot; y2=&quot;0&quot; style=&quot;stroke:black;stroke-width:1&quot; /&gt;</span></span>
<span class="line"><span>      &lt;text x=&quot;-10&quot; y=&quot;20&quot;&gt;Jan.&lt;/text&gt;</span></span>
<span class="line"><span>      &lt;text x=&quot;255&quot; y=&quot;20&quot;&gt;Apr.&lt;/text&gt;</span></span>
<span class="line"><span>    &lt;/g&gt;</span></span>
<span class="line"><span>  &lt;/g&gt;</span></span>
<span class="line"><span>&lt;/svg&gt;</span></span></code></pre></div>`,116)]))}const r=a(o,[["render",e],["__file","JS-SVG.html.vue"]]),d=JSON.parse('{"path":"/js/%E5%9F%BA%E7%A1%80/JS-SVG.html","title":"JS-SVG","lang":"zh-CN","frontmatter":{"title":"JS-SVG","date":"2023-03-30T00:00:00.000Z","tags":"JS基础","categories":"前端","order":5,"description":"概述 SVG 是一种基于 XML 语法的图像格式，全称是可缩放矢量图（Scalable Vector Graphics）。其他图像格式都是基于像素处理的，SVG 则是属于对图像的形状描述，所以它本质上是文本文件，体积较小，且不管放大多少倍都不会失真。 SVG 文件可以直接插入网页，成为 DOM 的一部分，然后用 JavaScript 和 CSS 进行操...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/js/%E5%9F%BA%E7%A1%80/JS-SVG.html"}],["meta",{"property":"og:title","content":"JS-SVG"}],["meta",{"property":"og:description","content":"概述 SVG 是一种基于 XML 语法的图像格式，全称是可缩放矢量图（Scalable Vector Graphics）。其他图像格式都是基于像素处理的，SVG 则是属于对图像的形状描述，所以它本质上是文本文件，体积较小，且不管放大多少倍都不会失真。 SVG 文件可以直接插入网页，成为 DOM 的一部分，然后用 JavaScript 和 CSS 进行操..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T02:39:10.000Z"}],["meta",{"property":"article:published_time","content":"2023-03-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-27T02:39:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JS-SVG\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-30T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-27T02:39:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[]},{"level":2,"title":"语法","slug":"语法","link":"#语法","children":[{"level":3,"title":"<svg>标签","slug":"svg-标签","link":"#svg-标签","children":[]},{"level":3,"title":"<circle>标签","slug":"circle-标签","link":"#circle-标签","children":[]},{"level":3,"title":"<line>标签","slug":"line-标签","link":"#line-标签","children":[]},{"level":3,"title":"<polyline>标签","slug":"polyline-标签","link":"#polyline-标签","children":[]},{"level":3,"title":"<rect>标签","slug":"rect-标签","link":"#rect-标签","children":[]},{"level":3,"title":"<ellipse>标签","slug":"ellipse-标签","link":"#ellipse-标签","children":[]},{"level":3,"title":"<polygon>标签","slug":"polygon-标签","link":"#polygon-标签","children":[]},{"level":3,"title":"<path>标签","slug":"path-标签","link":"#path-标签","children":[]},{"level":3,"title":"<text>标签","slug":"text-标签","link":"#text-标签","children":[]},{"level":3,"title":"<use>标签","slug":"use-标签","link":"#use-标签","children":[]},{"level":3,"title":"<g>标签","slug":"g-标签","link":"#g-标签","children":[]},{"level":3,"title":"<defs>标签","slug":"defs-标签","link":"#defs-标签","children":[]},{"level":3,"title":"<pattern>标签","slug":"pattern-标签","link":"#pattern-标签","children":[]},{"level":3,"title":"<image>标签","slug":"image-标签","link":"#image-标签","children":[]},{"level":3,"title":"<animate>标签","slug":"animate-标签","link":"#animate-标签","children":[]},{"level":3,"title":"<animateTransform>标签","slug":"animatetransform-标签","link":"#animatetransform-标签","children":[]}]},{"level":2,"title":"JavaScript 操作","slug":"javascript-操作","link":"#javascript-操作","children":[{"level":3,"title":"DOM 操作","slug":"dom-操作","link":"#dom-操作","children":[]},{"level":3,"title":"获取 SVG DOM","slug":"获取-svg-dom","link":"#获取-svg-dom","children":[]},{"level":3,"title":"读取 SVG 源码","slug":"读取-svg-源码","link":"#读取-svg-源码","children":[]},{"level":3,"title":"SVG 图像转为 Canvas 图像","slug":"svg-图像转为-canvas-图像","link":"#svg-图像转为-canvas-图像","children":[]}]},{"level":2,"title":"实例：折线图","slug":"实例-折线图","link":"#实例-折线图","children":[]}],"git":{"createdTime":1726034220000,"updatedTime":1745721550000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":2}]},"readingTime":{"minutes":9.04,"words":2712},"filePathRelative":"js/基础/JS-SVG.md","localizedDate":"2023年3月30日","autoDesc":true}');export{r as comp,d as data};
