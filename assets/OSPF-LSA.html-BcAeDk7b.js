import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as d,d as c,o as S}from"./app-ByvFWdWZ.js";const A="/wsq-blog/assets/lsa-header-2-STcSt6da.png",a={};function p(t,e){return S(),d("div",null,e[0]||(e[0]=[c('<h2 id="lsa" tabindex="-1"><a class="header-anchor" href="#lsa"><span>LSA</span></a></h2><p>OSPF 是链路状态协议，路由器彼此之间通过发送 LSA(<code>LinkState Advertisement</code>，链路状态通告) 来交换并保存整个网络的链路状态信息，构建整个网络的拓扑结构，并生成链路状态数据库 LSDB，然后 OSPF 路由器根据自身的 LSDB，利用 SPF(<code>ShortestPath First</code>最短路径优先)路由算法独立地计算出到达任意目的地的路由信息。</p><p>在 OSPF 网络中，对各 OSPF 路由器根据其用途进行了分类，不同类型的 OSPF 路由器所发送的 LSA 的用途和通告的范围各自不同。</p><h2 id="lsa类型" tabindex="-1"><a class="header-anchor" href="#lsa类型"><span>LSA类型</span></a></h2><table><thead><tr><th>类型</th><th>名称</th><th>宣告路由器</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>路由器LSA<br>Router LSA</td><td>所有路由器</td><td>每台路由器都会生成的LSA，描述了路由器直连接口的状态和Cost值，区域内传播</td></tr><tr><td>2</td><td>网络LSA<br>Network LSA</td><td>DR</td><td>只有DR会生成的LSA，描述MA网络中所有邻接关系的路由器，包括DR本身，区域内传播</td></tr><tr><td>3</td><td>网络汇总LSA<br>Network Summary LSA</td><td>ABR</td><td>由ABR生成，描述到达区域内所有网段的路由，区域间传播(除特殊区域外)</td></tr><tr><td>4</td><td>ASBR汇总LSA<br>ASBR Summary LSA</td><td>ABR</td><td>由ABR生成，描述ASBR，相当于一条到达LSBR的主机路由，OSPF 域内传播(除特殊区域外)</td></tr><tr><td>5</td><td>AS外部LSA<br>AS External LSA</td><td>ASBR</td><td>由ASBR生成，描述AS之外的外部路由，OSPF 域内传播(除特殊区域外)</td></tr><tr><td>7</td><td>非完全末梢区域LSA<br>NSSA LSA</td><td>ASBR</td><td>由ASBR生成，描述AS之外的外部路由，仅在 NSSA 区域内传播</td></tr></tbody></table><p>还有一些类型的 LSA 很少使用：</p><ul><li>第六类 LSA：在 MOSPF 协议中使用的组播 LSA。</li><li>第八类 LSA：在 OSPF 域内传播 BGP 属性时使用的外部属性 LSA。</li><li>第九类 LSA：本地链路范围的透明 LSA。</li><li>第十类 LSA：区域范围内的透明 LSA。</li><li>第十一类 LSA：AS 范围内的透明 LSA。</li></ul><h2 id="lsa头部" tabindex="-1"><a class="header-anchor" href="#lsa头部"><span>LSA头部</span></a></h2><p>除<code>Hello</code>报文外，其他的 OSPF 报文都携带 LSA 头部信息。虽然 LSA 有多种类型，但是这些 LSA 使用相同的 LSA 头部。</p><p><a href="OSPF-LSA/lsa-header-1.png">LSA 头部报文位置</a></p><p>LSA 头部一共 20 字节。</p><figure><img src="'+A+'" alt="LSA 头部信息" tabindex="0" loading="lazy"><figcaption>LSA 头部信息</figcaption></figure><p>LSA 头部信息字段含义：</p><ul><li>链路状态老化时间（<code>Link-State Age</code>）：表示 LSA 的老化时间，也就是说，LSA 存在了多长时间，单位是秒。路由器生成 LSA 时，这个值为 0，随着 LSA 在网络中传输，老化时间逐渐累加。当 LSA 存储到路由器的 LSDB 后，LSA 的老化时间也在递增，当到达<code>MaxAge</code>（最大老化时间）时，这个 LSA 不在用于路由计算。</li><li>可选项(<code>Options</code>)：每一比特位对应 OSPF 的某种特性。</li><li>链路状态类型(<code>Link-State Type</code>)：表示 LSA 的类型。OSPF 有多种类型的 LSA，每个 LSA 类型都有对应的类型编号。</li><li>链路状态 ID(<code>Link-State ID</code>)：LSA 的标识。不同的 LSA 类型，字段的含义不同。</li><li>通告路由器(<code>Advertising Router</code>)：生成这条 LSA 的路由器的<code>Router-ID</code>。</li><li>链路状态序列号(<code>Link-State Sequence Number</code>)：表示这个 LSA 的序列号，用于判断 LSA 的新旧或重复。</li><li>链路状态校验和(<code>Link-State Checksum</code>)：关于 LSA 的全部信息的校验和。因为<code>Age</code>字段，所以校验和会随着老化时间的增大而每次都需要重新进行计算。</li><li>长度(<code>Length</code>)：是一个包含 LSA 头部在内的 LSA 的长度。</li></ul><p>每个 LSA 头部的链路状态类型、链路状态 ID、通告路由器这三个字段唯一标识一个 LSA。如果出现三个字段都相同的多条 LSA，还可以根据链路状态老化时间、链路状态序列号、校验和字段来判断 LSA 的新旧。</p><h2 id="lsa-详解" tabindex="-1"><a class="header-anchor" href="#lsa-详解"><span>LSA 详解</span></a></h2><p><a href="OSPF-LSA/lsa-detail.png">LSA</a></p><p>图中网络部署了 OSPF，R1、R2、R3 都连接在一台二层交换机上，三台路由器的<code>G0/0</code>接口都激活了 OSPF，并且都属于<code>Area0</code>。通过设置，R3 的 <code>G0/0</code> 接口成为 DR。R1 的<code>G0/1</code>连接的网段和 R2 的<code>G0/1</code>连接网段也激活了 OSPF，也属于<code>Area0</code>。R3 和 R4 使用<code>Serial1/0</code>接口连接，接口采用 PPP 封装，激活了 OSPF，且属于<code>Area1</code>。R4 还连接着外部网络，连接的接口没激活 OSPF，并将外部路由引入到了 OSPF 域。R1 的<code>Router-ID</code>是<code>1.1.1.1</code>，R2 的<code>Router-ID</code>是<code>2.2.2.2</code>，R3 的<code>Router-ID</code>是<code>3.3.3.3</code>，R4 的<code>Router-ID</code>是<code>4.4.4.4</code>。</p><p>每种 LSA 都有各自的功能：</p><ul><li><code>Type-1 LSA</code>（<code>Router LSA</code>，路由器 LSA）和<code>Type-2 LSA</code>（<code>Network LSA</code>，网络 LSA）是描述区域内的网络拓扑和 IP 网段信息，只能在区域内泛洪。有了这两种 LSA，区域内的路由器就可以计算出区域内各个网段的路由，这些路由叫做区域内部路由。</li><li><code>Type-3 LSA</code>（<code>Network Summary LSA</code>，网络汇总 LSA）用于描述一个区域内的路由信息，并在其它区域内传递。也就是说，这种 LSA 用来告诉其它区域到达生成 LSA 这个区域的路由，这些路由叫做区域间路由。</li><li><code>Type-4 LSA</code>（<code>ASBR Summary LSA</code>，ASBR 汇总 LSA），用于描述 ASBR 的<code>Router-ID</code>。它不会主动生成，触发条件是 ABR 收到一个<code>Type-5 LSA</code>，目的是让区域内的路由器知道如何到达 ASBR。</li><li><code>Type-5 LSA</code>（<code>AS External LSA</code>，AS 外部 LSA）用来描述 OSPF 域外的路由，它一旦生成，会在整个 OSPF 域内扩散。OSPF 域外的路由信息来源，通常是静态路由或其它路由协议的路由。</li></ul><h3 id="type-1-lsa" tabindex="-1"><a class="header-anchor" href="#type-1-lsa"><span>Type-1 LSA</span></a></h3><p>每一台运行 OSPF 的路由器都会生成 <code>Type-1 LSA</code>，这个 LSA 描述了路由器的直连接口状态和接口<code>Cost</code>，同一个区域的接口共用一个<code>Type-1 LSA</code>描述。当路由器的多个接口属于不同区域，就分别为每个区域单独生成一个<code>Type-1 LSA</code>，LSA 只描述各种区域的接口信息。</p><p><a href="OSPF-LSA/type-1-lsa-1.png">Type-1 LSA</a></p><p>在<code>Type-1 LSA</code>中，LSA 头部的链路状态类型字段值为 1，链路状态 ID 字段值是生成<code>Type-1 LSA</code>的路由器的<code>Router-ID</code>。</p><p>V 位（<code>Virtual Link Endpoint Bit</code>）：如果值为 1，表示路由器是<code>Virtual Link</code>的端点。</p><p>E 位（<code>External Bit</code>）：如果值为 1，表示路由器是 ASBR。</p><p>B 位（<code>Border Bit</code>）：如果值为 1，表示路由器是两个区域的边界路由器。一个路由器连接两个或两个以上的区域，生成的<code>Type-1 LSA</code>的 B 位值为 1。</p><p>链路数量（<code>Links Number</code>）：表示<code>Type-1 LSA</code>的<code>Link</code>数量。<code>Link</code>是描述直连接口的，每条<code>Link</code>都包含链路类型、链路 ID、链路数量、度量值这些关键信息。路由器可能会使用一个或者多个 Link 来描述某个接口。</p><p>链路类型（<code>Link Type</code>）：表示<code>Link</code>的类型。OSPF 中有多种网络类型：P2P、P2MP、Broadcast、NBMA，可以根据接口的协议来判断接口的网络类型。链路类型不同，对应的链路 ID、链路数据也不同。注意：链路类型和网络类型是不同的概念。</p><table><thead><tr><th>链路类型</th><th>描述</th><th>链路ID</th><th>链路数据</th></tr></thead><tbody><tr><td>1</td><td>点对点连接到另一台路由器</td><td>邻居的Router-ID</td><td>生成LSA的路由器的接口IP地址</td></tr><tr><td>2</td><td>连接到一个传输网络</td><td>DR的接口IP地址</td><td>生成LSA的路由器的接口IP地址</td></tr><tr><td>3</td><td>连接到一个传输网络</td><td>网络IP地址</td><td>网络掩码</td></tr><tr><td>4</td><td>虚链路</td><td>邻居的Router-ID</td><td>生成LSA的路由器的接口IP地址</td></tr></tbody></table><p>链路 ID（<code>Link ID</code>）：<code>Link</code>的标识，不同的链路类型，链路 ID 的定义也不同。</p><p>链路数据（<code>Link Data</code>）：不同的链路类型，对链路数据的定义也是不同的。</p><p>度量值（<code>Metric</code>）：<code>Cost</code>值。由于 TOS 和 TOS 度量值在 RFC2328 中不再支持，保留仅仅只是为了兼容早期的 OSPF 版本，可以忽略和 TOS 相关的字段。</p><p><a href="OSPF-LSA/type-1-lsa-2.png"></a></p><p>以 R1 为例，<code>G0/0</code>和<code>G0/1</code>都激活了 OSPF，都接入了<code>Area0</code>，因此路由器会生成一个<code>Type-1 LSA</code>，描述两个接口的状况，并在<code>Area0</code>内泛洪。R1 的<code>G0/1</code>是一个以太网接口，且没有建立 OSPF 邻接关系，这个接口的<code>Link</code>内容是：</p><ul><li><code>Link Type = 3</code>，表示连接到一个末梢网络</li><li><code>Link ID = 192.168.1.0</code>，是接口 IP 地址的网络地址</li><li><code>Link Data = 255.255.255.0</code>，是接口的网络掩码</li><li><code>Metric = 1</code>，是接口的<code>Cost</code>值</li></ul><p>R1 的<code>G0/0</code>和 R3 建立了邻接关系，接口的关键信息是：</p><ul><li><code>Link Type = 2</code>，表示连接到一个传输网络</li><li><code>Link ID = 192.168.123.3</code>，是 DR 的接口 IP 地址，也就是 R3 的接口 IP 地址</li><li><code>Link Data = 192.168.123.1</code>，是自己接口的 IP 地址</li><li><code>Metric = 1</code></li></ul><p>R1 生成的这个<code>Type-1 LSA</code>包含两个<code>Link</code>，在整个<code>Area0</code>内泛洪。</p><p><a href="OSPF-LSA/type-1-lsa-3.png"></a></p><p>R3 的情况比较特殊，两个接口分别连接两个区域，<code>G0/0</code>连接的<code>Area0</code>，<code>Serial1/0</code>连接的<code>Area1</code>，显然是一台 ABR。R3 会生成两个<code>Type-1 LSA</code>，一个在<code>Area0</code>内泛洪，描述的是<code>G0/0</code>接口信息，包含一个描述<code>G0/0</code>接口的<code>Link</code>：</p><ul><li><code>Link Type = 2</code>，表示连接到一个传输网络</li><li><code>Link ID = 192.168.123.3</code></li><li><code>Link Data = 192.168.123.3</code></li><li><code>Metric = 1</code></li></ul><p>R3 生成的另一个<code>Type-1 LSA</code>，在<code>Area1</code>内泛洪，描述的是接口<code>Serial1/0</code>。<code>Serial1/0</code>接口的网络类型是 P2P，描述这种类型的接口时，OSPF 可能会使用多条<code>Link</code>。R3 的<code>Serial1/0</code>，这个 P2P 接口有一个<code>Full</code>的邻居，这样会使用两个<code>Link</code>来描述这个接口和邻居关系。</p><p>其中一个<code>Link</code>：</p><ul><li><code>Link Type = 1</code>，表示点对点连接到另一个路由器</li><li><code>Link ID = 4.4.4.4</code>，是这个邻居的 <code>Router-ID</code>，也就是 R4 的 <code>Router-ID</code></li><li><code>Link Data = 192.168.34.3</code>，是自己接口的 IP 地址</li><li><code>Metric = 48</code></li></ul><p>另一个 <code>Link</code>：</p><ul><li><code>Link Type = 3</code>，表示接入一个末梢网络</li><li><code>Link ID = 192.168.34.0</code></li><li><code>Link Data = 255.255.255.0</code></li><li><code>Metric = 48</code></li></ul><p>为什么要两个<code>Link</code>来描述一个接口？<code>Type-1 LSA</code>的主要用途是帮助其它路由器绘制出网络拓扑和发现网段信息。这两个<code>Link</code>中，前一个是用于绘制拓扑，后一个是描述这段链路的网段信息。</p><p><code>Type-1 LSA</code>在处理<code>Loopback</code>接口时，无论接口的掩码地址是多少位，描述的掩码都是 32 位的。描述接口时，链路类型为 3，接入一个末梢网络，链路 ID 是接口的 IP 地址，链路数据全是 F ，表示掩码是<code>255.255.255.255</code>，会计算出一条 32 位的主机路由。要想把路由的掩码恢复成<code>Loopback</code>接口的真实掩码，可以把<code>Loopback</code>接口的网络类型修改为 Broadcast 或 NBMA。</p><h3 id="type-2-lsa" tabindex="-1"><a class="header-anchor" href="#type-2-lsa"><span>Type-2 LSA</span></a></h3><p>经过<code>Type-1 LSA</code>的泛洪，区域内的路由器已经大致了解自己所在区域内的网络拓扑。但是光有<code>Type-1 LSA</code>是不够的，在一个 MA 网络中，接口<code>Link</code>的链路类型是 2，链路 ID 是 DR 的接口 IP 地址，链路数据是路由器自己的接口 IP 地址，但是不清楚 MA 网络的掩码，也不知道有多少路由器在 MA 网络中，这就需要用到<code>Type-2 LSA</code>了。</p><p>在 MA 网络中，OSPF 会选举 DR 和 BDR，所有<code>DRother</code>路由器只能和 DR 及 BDR 建立邻接关系，<code>DRother</code>路由器之间不会建立<code>Full</code>的 OSPF 邻接关系。在 MA 网络中，DR 会生成<code>Type-2 LSA</code>，在区域内泛洪<code>Type-2 LSA</code>，列出 MA 网络中所有路由器的<code>Router-ID</code>，包括 DR 本身，和这个网络的掩码。</p><p><a href="OSPF-LSA/type-2-lsa-1.png"></a></p><p>在<code>Type-2 LSA</code>中，LSA 头部的 链路状态类型 字段值为 2，链路状态 ID 字段值是生成<code>Type-2 LSA</code>的路由器的<code>Router-ID</code>。</p><p>网络掩码（<code>Network Mask</code>）：这个 MA 网络的网络掩码。<br> 相连的路由器的<code>Router-ID</code>：连接到这个 MA 网络的路由器的<code>Router-ID</code>。和 DR 建立邻接关系的邻居<code>Router-ID</code>，以及 DR 自己的<code>Router-ID</code>。如果有多台路由器接入 MA 网络，就使用多个字段描述。</p><p><a href="OSPF-LSA/type-2-lsa-2.png"></a></p><p>R1、R2、R3 路由器的<code>G0/0</code>接口都接入到同一台二层交换机，另外这三个接口处于同一个 MA 网络，会选举 DR 和 BDR，由于人为把 R3 的<code>G0/0</code>接口的 DR 优先级调高，因此 R3 成为这个 MA 网络的 DR。这样，R3 会在<code>Area0</code>内泛洪一个<code>Type-2 LSA</code>，这个 LSA 中包含 R1、R2、R3 三台路由器的<code>Router-ID</code>，以及这个 MA 网络的掩码：<code>255.255.255.0</code>。<code>Area1</code>内没有 MA 网络，因此不存在<code>Type-2 LSA</code>。</p><p>经过<code>Type-1</code>、<code>Type-2 LSA</code>在区域内泛洪，OSPF 能够描绘出一个区域内的完整拓扑，包括设备每个接口的<code>Cost</code>，并发现各个网段的信息，也就是网络地址和网络掩码。这个区域内的所有路由器的 LSDB 是完全一致的，这样路由器才能准确计算出到达区域各个网段的路由。经过<code>Type-1</code>、<code>Type-2 LSA</code>泛洪和计算得出的路由，叫做区域内部路由（<code>Intra-Area Route</code>）。</p><p><a href="OSPF-LSA/type-2-lsa-3.png"></a></p><p>R3 是一台 ABR，两个接口分别连接<code>Area0</code>和<code>Area1</code>，分别维护这两个区域的 LSDB。然后，R3 以自己为根，运行 SPF 算法，获得到达各个网段的最短路径。</p><p>与 R3 不同，R1 和 R2 是区域内的路由器，只能根据区域内的<code>Type-1</code>、<code>Type-2 LSA</code>计算出到达<code>Area0</code>内各个网段的路由，而<code>Area0</code>之外的路由，却无法知道，不如：<code>192.168.34.0/24</code>网段的路由。要实现区域之间路由的传递，就需要使用<code>Type-3 LSA</code>。</p><h3 id="type-3-lsa" tabindex="-1"><a class="header-anchor" href="#type-3-lsa"><span>Type-3 LSA</span></a></h3><p>前两类 LSA 解决了区域内路由计算的问题，<code>Type-1</code>、<code>Type-2 LSA</code>只能在区域内泛洪，无法泛洪到区域外。区域之间的路由计算，就要使用<code>Type-3 LSA</code>，也就是网络汇总 LSA（ <code>Network Summary LSA</code> ）。</p><p><code>Type-3 LSA</code>是 ABR 生成的，用来解决区域之间的路由传递问题。由于 ABR 同时连接着非骨干区域和骨干区域<code>Area0</code>，它会分别维护不同区域的 LSDB，并且计算出直连区域的区域内部路由，它向某个区域发送<code>Type-3 LSA</code>，是向这个区域通告到达其它区域的区域间路由。</p><p><a href="OSPF-LSA/type-3-lsa-1.png"></a></p><p>在<code>Type-3 LSA</code>中，LSA 头部的链路状态 ID 字段值是区域间路由的目的网络地址。<br> 网络掩码（<code>Netmask</code>）：区域间路由的目的网络掩码。<br> 度量值（<code>Metric</code>）：路由的<code>Cost</code>。</p><p><a href="OSPF-LSA/type-3-lsa-2.png"></a></p><p>R3 已经知道了<code>Area0</code>和<code>Area1</code>内各个网段的区域内部路由，现在为这些区域内的路由生成<code>Type-3 LSA</code>，并通告到另一个区域中。R3 把描述了到达<code>Area1</code>内<code>192.168.34.0/24</code>网段的路由的<code>Type-3</code>通告给<code>Area0</code>。这个<code>Type-3 LSA</code>中：</p><ul><li>链路状态 ID 是目的网络地址<code>192.168.34.0</code>，</li><li>网络掩码是<code>255.255.255.0</code>，</li><li>通告路由器是 R3（ABR）的<code>Router-ID</code>，</li><li><code>Cost = 48</code>，即 R3 自己到达目的网络的<code>Cost</code>，也即 R3 的<code>Serial1/0</code>接口的<code>Cost</code>。</li></ul><p>收到<code>Type-3 LSA</code>后，R1 和 R2 就有到达<code>192.168.34.0/24</code>网段的区域间路由，并且路由的<code>Cost</code>是 49，即 48 + 1，其中 1 是它们<code>G0/0</code>接口的<code>Cost</code>，也就是它们到达目的网段的<code>Cost</code>。</p><p><a href="OSPF-LSA/type-3-lsa-3.png"></a></p><p>另外，R3 也会把描述到达<code>Area0</code>内三个网段的路由的<code>Type-3 LSA</code>通告到<code>Area1</code>。这样，R4 就能够学习到这三条区域间路由。</p><p><a href="OSPF-LSA/type-3-lsa-4.png"></a></p><p>假如新增路由器 R5，R5 分别和 R1、R2 直连，直连网段分别是<code>192.168.1.0/24</code>、<code>192.168.2.0/24</code>，接口都在<code>Area2</code>中，其它内容不变。</p><p>从左到右来看，R1 和 R2 作为 ABR，会为<code>Area0</code>通告两条<code>Type-3 LSA</code>，分别描述到达<code>Area2</code>内的<code>192.168.1.0/24</code>和<code>192.168.2.0/24</code>网段的路由。这样 R3 就能根据<code>Type-3 LSA</code>计算出到达这两个网段的区域间路由。</p><p>在一个区域中泛洪的<code>Type-3 LSA</code>描述的是到达区域之外、但仍属于 OSPF 域的网段路由，并且只能在一个区域内泛洪。因此，R1 和 R2 通告到<code>Area0</code>的<code>Type-3 LSA</code>只能在<code>Area0</code>中泛洪，不能直接进入<code>Area1</code>，R3 会重新生成<code>Type-3 LSA</code>通告到<code>Area1</code>，描述到达相应网络的区域间路由。</p><p>接下来，R3 会生成 3 条<code>Type-3 LSA</code>通告到<code>Area1</code>，也就是<code>Area0</code>的<code>192.168.123.0/24</code>网段的路由，<code>Area2</code>中<code>192.168.1.0/24</code>和<code>192.168.2.0/24</code>网段的路由。这 3 条<code>Type-3 LSA</code>的<code>Cost</code>是 R3 自己到达相应网段的<code>Cost</code>。R4 会收到这些<code>Type-3 LSA</code>，并计算区域间路由，而它到达三个目的网段的<code>Cost</code>，等于 R3 通告的<code>Cost</code>值加上自己到达 R3 的<code>Cost</code>值。</p><p>这时，会发现 OSPF 区域间路由的传播和距离矢量路由协议的路由传播过程类似，非常容易引发路由环路，对于区域间路由的传播，OSPF 也需要一定的防环机制。</p><p>首先，OSPF 区域间路由必须通过 <code>Area0</code> 中转，逻辑上就是以<code>Area0</code>为中心，其它区域为分支的星型逻辑机构，减小环路产生的可能。也就是所有的非骨干区域必须与骨干区域<code>Area0</code>直接相连。</p><p>其次，OSPF 的 ABR 只能把自己直连区域的区域内部路由通告给<code>Area0</code>，ABR 的区域间路由不允许通告给<code>Area0</code>。但是，ABR 可以将直连区域的区域内部路由和到达其它区域的区域间路由通告给非骨干区域。</p><p>这样的话，对于 R3 来说，到达<code>Area0</code>中的<code>192.168.123.0/24</code>网段的路由就是区域内路由，到达<code>Area1</code>中的<code>192.168.34.0/24</code>网段的路由也是区域内路由，到达<code>Area2</code>中的<code>192.168.1.0/24</code>和<code>192.168.2.0/24</code>网段的路由就是区域间路由，R3 会把<code>Area0</code>和<code>Area2</code>的三条路由都通告到<code>Area1</code>中，只把<code>Area1</code>的一条路由通告到<code>Area0</code>中，防止引发路由环路。</p><h3 id="type-4-lsa" tabindex="-1"><a class="header-anchor" href="#type-4-lsa"><span>Type-4 LSA</span></a></h3><p>通过<code>Type-1</code>、<code>Type-2 LSA</code>，路由器能够知道区域内部网络拓扑，并发现区域内的网段信息，单个区域内的路由计算没有问题。通过<code>Type-3 LSA</code>的泛洪，实现区域间的路由传递。这样，<code>Type-1</code>、<code>Type-2</code>和<code>Type-3 LSA</code>这三类 LSA 解决了 OSPF 域内的路由计算问题。</p><p><a href="OSPF-LSA/type-4-lsa-1.png"></a></p><p>然而域外的路由（比如 RIP 路由、静态路由等）如何获得？解决办法就是可以通过 ASBR 把域外的路由引入 OSPF，OSPF 使用<code>Type-5 LSA</code>描述这些外部的路由，<code>Type-5 LSA</code>能在整个 OSPF 域内泛洪，除了一些特殊的区域，这样所有的路由器都知道这些到达外部的路由，但是只知道到达外部路由还不够，还要知道引入这些外部路由的 ASBR 的位置。与 ASBR 同一个区域的路由器通过<code>Type-1</code>、<code>Type-2 LSA</code>计算出到达 ASBR 的路由，然而这两种 LSA 只能在自己区域内泛洪，其它区域的路由器不知道如何到达 ASBR。这就需要用到<code>Type-4 LSA</code>了。<code>Type-4 LSA</code>叫做 ASBR 汇总 LSA（<code>ASBR Summary LSA</code>），由 ABR 生成的，它实际上是一条到达 ASBR 的主机路由。</p><p><a href="OSPF-LSA/type-4-lsa-2.png"></a></p><p><code>Type-4 LSA</code>的格式和<code>Type-3 LSA</code>是一样的。在<code>Type-4 LSA</code>中：</p><ul><li>链路状态 ID 字段值是 ASBR 的<code>Router-ID</code></li><li>网络掩码字段值全是 0</li><li>度量值字段值是 ABR 自己到达 ASBR 的<code>Cost</code>值。</li></ul><p><a href="OSPF-LSA/type-4-lsa-3.png"></a></p><p>R4 作为 ASBR 把外部路由<code>10.0.0.0/8</code>引入到 OSPF 域。R4 生成<code>Type-5 LSA</code>描述这条外部路由。由于 R3 和 R4 在同一个区域，R3 通过<code>Area1</code>内泛洪的<code>Type-1 LSA</code>计算出到达 ASBR R4 的最佳路径。一旦在 R4 上执行引入外部路由的命令（<code>import-route</code>命令），R4 就会在生成的<code>Type-1 LSA</code>中把 E 位值设为 1，宣告自己是 ASBR。然而，<code>Area0</code>的 R1 和 R2 通过<code>Type-5 LSA</code>只知道<code>10.0.0.0/8</code>这个外部网络，但不知道如何到达 ASBR，也就无法进行路由计算。因此，R3 作为和 ASBR 同一个区域的 ABR，会生成<code>Type-4 LSA</code>描述这个 ASBR，并在<code>Area0</code>内泛洪，这样<code>Area0</code>内的 R1 和 R2 才能计算出到达<code>10.0.0.0/8</code>的外部路由，并加载到路由表。</p><p>实际上，<code>Type-4 LSA</code>的主要作用，是帮助和 ASBR 不在同一个区域的路由器计算出到达 ASBR 的路由。另外，路由器并不会把通过<code>Type-4 LSA</code>计算出来的到达 ASBR 的路由加载到全局路由表中，而是存放在一个特殊的数据表里。在路由器上使用<code>display ospf abr-asbr</code>命令，可以看到路由器的 ABR 和 ASBR。</p><h3 id="type-5-lsa" tabindex="-1"><a class="header-anchor" href="#type-5-lsa"><span>Type-5 LSA</span></a></h3><p>当 ASBR 把外部路由引入 OSPF 时，会生成<code>Type-5 LSA</code>，用来描述这些外部路由。这种类型的 LSA 一旦生成后，就会在整个 OSPF 域内传播，除了一些特殊区域。<code>Type-5 LSA</code>，也就是 AS 外部 LSA（<code>AS External LSA</code>）。</p><p><a href="OSPF-LSA/type-5-lsa-1.png"></a></p><p>在<code>Type-5 LSA</code>中，LSA 头部的 链路状态 ID 字段值是外部路由的目的网络地址。</p><p>网络掩码（<code>Netmask</code>）：外部路由的目的网络掩码。</p><p>E 位：用来表示外部路由使用的度量值类型。OSPF 有两种外部路由度量值类型，分别是<code>Metric-Type-1</code>和<code>Metric-Type-2</code>。如果值为 0 ，表示外部路由使用的度量值类型是<code>Metric-Type-1</code>；如果值为 1，表示外部路由使用的度量值类型是<code>Metric-Type-2</code>。</p><p>度量值（<code>Metric</code>）：表示外部路由的<code>Cost</code>。</p><p>转发地址（<code>Forwarding Address，FA</code>）：当 FA 为<code>0.0.0.0</code>时，那么到达这个外部网段的流量会发送到引入外部路由的 ASBR。如果 FA 不是<code>0.0.0.0</code>，那么流量会发送到这个转发地址。FA 这个概念，是为了在 OSPF 的某些特殊场景中，规避次优路径问题。</p><p>外部路由标记（<code>External Route Tag</code>）：外部路由才能携带的标记，常用于部署路由策略。举个栗子，在 OSPF 域外有两种业务：办公和生产，现在 ASBR 把两种业务的路由都引入 OSPF，描述这些外部路由的<code>Type-5 LSA</code>会在整个 OSPF 域内传播。如果需要在域内的某个区域部署路由策略，对办公和生产的路由执行不同的策略，那么先要区分这些路由。如果通过路由的目的网络地址和网络掩码区分，显然是不方便的。而如果在 ASBR 引入这些外部路由是，就分别为生产和办公路由打上相应的标记，那么在域内执行策略的时候，就可以直接对相应的标记进行路由匹配，使得路由策略的部署更加方便。</p><p><a href="OSPF-LSA/type-5-lsa-2.png"></a></p><p>在 ASBR 把外部路由引入 OSPF 时，可以指定路由的外部<code>Cost</code>值，以及度量值类型，这两个值会写入<code>Type-5 LSA</code>的对应字段中。一台路由器收到<code>Type-5 LSA</code>后，需要检查引入这条外部路由的 ASBR 是否可达。如果 ASBR 可达，路由器才会使用<code>Type-5 LSA</code>进行外部路由计算。另外，不同的外部路由度量值类型，路由的<code>Cost</code>值算法是不同的。假如一条<code>Type-5 LSA</code>的外部<code>Cost</code>为 B，而路由器 X 到达生成这条<code>Type-5 LSA</code>的 ASBR 的路由<code>Cost</code>为 A，那么当<code>Type-5 LSA</code>的度量值类型是<code>Metric-Type-1</code>时，X 计算出的这条外部路由的<code>Cost</code>等于 A + B，但如果度量值类型为<code>Metric-Type-2</code>，那么路由的<code>Cost</code>等于 B。</p><h3 id="type-7-lsa" tabindex="-1"><a class="header-anchor" href="#type-7-lsa"><span>Type-7 LSA</span></a></h3><p><code>Type-7 LSA</code>就是非完全末梢区域外部 LSA（<code>Not-So-Stubby Area External LSA</code>）。这是一种特殊的 LSA，也用于描述 OSPF 外部路由，并且报文格式和<code>Type-5 LSA</code>一样，但是它的泛洪范围有严格限制：只能在 NSSA（<code>Not-So-Stubby Area</code>，非完全末梢区域）内泛洪，并且不能进入<code>Area0</code>。</p><p><a href="OSPF-LSA/type-7-lsa-1.png"></a></p><p>OSPF 除了常规区域外，还有几种特殊区域类型，NSSA 就是其中之一。NSSA 禁止<code>Area0</code>的<code>Type-5 LSA</code>进入，让区域内泛洪的 LSA 减少了一点，也减小了 NSSA 中路由器的路由表项，从而减小路由器负担。然而，ABR 为了让 NSSA 内的路由器能够通过骨干区域，访问过滤了的<code>Type-5 LSA</code>描述的外部路由，会向 NSSA 发布一条默认路由，使用<code>Type-7 LSA</code>描述。另外，NSSA 允许自己区域内的路由器引入少量外部路由，这些外部路由引入后，使用<code>Type-7 LSA</code>描述，而且<code>Type-7 LSA</code>只能在这个 NSSA 内泛洪，不允许进入<code>Area0</code>。NSSA 的 ABR 会将 NSSA 内泛洪的<code>Type-7 LSA</code>转换成<code>Type-5 LSA</code>，让这些外部路由能够在 OSPF 域内传播。</p><p><a href="OSPF-LSA/type-7-lsa-2.png"></a></p><p><code>Area1</code>中泛洪了两条<code>Type-7 LSA</code>，其中一条是由 ASBR，即 R4 生成的，用于描述外部路由<code>10.0.0.0/8</code>，另一条是由 ABR，即 R3 自动生成的，是一条默认路由，这条默认路由只在<code>Area1</code>内传播。</p><h3 id="判断-lsa-的新旧" tabindex="-1"><a class="header-anchor" href="#判断-lsa-的新旧"><span>判断 LSA 的新旧</span></a></h3><p>OSPF 会周期性的泛洪 LSA，以 1800 秒为周期。这么长时间的泛洪周期，可避免网络中的 OSPF 流量过大，减少不必要的带宽消耗。另外，当网络拓扑发生变化时，OSPF 会立即执行 LSA 的触发更新，以便网络快速的收敛。</p><p>OSPF 采用链路状态类型、链路状态 ID、通告路由器三元组来标识一个 LSA，其实就是每个 LSA 头部的三个关键字段。</p><p>当路由器收到同一个 LSA 的两个不同实例时，比如路由器收到一个 LSA，并把它加载到自己的 LSDB 中，随后又从网络中再次收到这个 LSA 的另一个实例，即 LSA 的三元组都相同，LSA 的内容可能不同，这时路由器该如何判断两个 LSA 的新旧？从网络中收到的 LSA 是否应该替换 LSDB 中原有的 LSA？OSPF 使用链路状态序列号、老化时间、校验和来判断一个 LSA 的新旧。</p><ol><li>首先，链路状态序列号更大的实例是更新的 LSA，因为路由器每次在刷新 LSA 时，LSA 的链路状态序列号 + 1，链路状态序列号越大，LSA 越新。</li><li>如果 LSA 实例的链路状态序列号相同，那么校验和更大的实例是更新的 LSA。</li><li>如果 LSA 实例的链路状态序列号、校验和都相同，且实例的老化时间设置为<code>MaxAge</code>（最大老化时间，默认 3600 秒），那么这个实例是最新的。</li><li>如果 LSA 实例的链路状态序列号、校验和都相同，且没有实例的老化时间设置为<code>MaxAge</code>，那么当两个实例的老化时间差超过<code>MaxAgeDiff</code>（最大老化时间差额，默认是 900 秒）时，这是两个不同的实例，且老化时间值越小的 LSA 越新。</li><li>如果 LSA 实例的链路状态序列号、校验和都相同，没有实例的老化时间设置为<code>MaxAge</code>，并且两个实例的老化时间相等，或相差不超过<code>MaxAgeDiff</code>，那么它们是相同的实例。</li></ol><p>当设备的 LSDB 中已经存在某个 LSA 时，又从网络中收到这个 LSA 的另一个实例，就通过上面的步骤判断同一个 LSA 的两个不同实例的新旧。如果是两个不同的实例，新的 LSA 实例会覆盖旧实例。如果是两个相同的实例，只保留先收到的 LSA 实例。</p><p>LSDB 中的 LSA 都有老化时间，最大是 3600 秒。如果超过这个值，那么这个 LSA 会从 LSDB 中删除。LSDB 中删除 LSA 的情况有两种：</p><ol><li>老化时间超过<code>MaxAge</code>，路由器自动删除 LSDB 中的 LSA。</li><li>路由器生成<code>MaxAge</code>的 LSA，并在区域中泛洪，收到 LSA 的路由器会用其更新自己 LSDB 中的 LSA。泛洪<code>MaxAge</code>的 LSA，作用相当于毒化路由。</li></ol><h2 id="区域类型" tabindex="-1"><a class="header-anchor" href="#区域类型"><span>区域类型</span></a></h2><p>OSPF 是目前使用最广泛的 IGP 之一，能够支持大规模的网络，在实际的组网中几乎随处可见。我们已经知道 OSPF 是链路状态路由协议，使用 LSA 来描述网络拓扑和网段信息，为了减少 LSA 的泛洪、减小路由器 LSDB 的规模，从而减小路由器的性能损耗，OSPF 引入了多区域的概念。</p><p>把 OSPF 域划分成多个区域，可以有许多好处。每个区域独立维护一套 LSDB，并单独运行 SPF 算法，而且区域内的拓扑变更也不会对整个 OSPF 带来过大的影响，让 OSPF 能够支持更大规模的网络。</p><p>但仅仅这些还不够，当 OSPF 部署在一个大型网络中，实现数据互通的前提是要打通网络中的路由，而将路由信息传递到位只是第一步，还需要考虑如何优化网络、如何进一步减少 LSA 在网络中的泛洪、如何减小路由器路由表的规模。</p><p><a href="OSPF-LSA/area-1.png"></a></p><p>这个网络的规模比较大，网络从逻辑上分成三个区块，分别是省公司、地市公司、区县公司，其中地市和区县公司的网络运行 OSPF 协议，在同一个 OSPF 域。整个 OSPF 网络进行了层次化的设计，地市分公司的核心网络部署在<code>Area0</code>，而每个区县公司规划在非 0 区域，<code>CO-SW1</code>和<code>CO-SW2</code>是地市分公司的两台汇聚设备，用于连接地市分公司和下面的区县分公司，这两台设备同时也是 ABR。每个区县公司规划了一个独立的区域，比如区县公司 1 在<code>Area1</code>，区县公司 2 在<code>Area2</code>，以此类推。地市分公司的出口路由器（<code>OR-R1</code>和<code>OR-R2</code>）与省公司的 PE 路由器（PE1 和 PE2）对接，通过 BGP 交互路由信息，出口路由器<code>OR-R1</code>和<code>OR-R2</code>把从省公司学到的 BGP 路由引入 OSPF，让整个 OSPF 域内的路由器能够学到这些外部路由，从而使得访问省公司的数据流量能够顺利的路由到 PE 路由器。</p><p>开始时，区县公司的路由器能够学到整个 OSPF 域内的路由，也学到 OR 路由器从 BGP 引入的外部路由。随着业务规模逐渐变大，省公司、地市公司的网络变得更加庞大，区县公司可能也会逐渐增多，这都会导致每个区县路由器的路由表变得臃肿，每台路由器将变得不堪重负。实际上，对于每个区县公司而言，不用知道 OSPF 域外，甚至 OSPF 区域外的路由细节，这些信息可以屏蔽掉，因为每个区县公司都是一个末梢网络，它们的外出流量只需送到地市分公司的汇聚设备，就可以顺利路由到目的地，无论这个目的地是域外的，还是其它区县公司的。</p><p>OSPF 设计了多种区域类型，用于满足多种业务需求。</p><h3 id="骨干区域-backbone-area" tabindex="-1"><a class="header-anchor" href="#骨干区域-backbone-area"><span>骨干区域（Backbone Area）</span></a></h3><p>骨干区域是<code>Area0</code>，是整个 OSPF 域的中心枢纽。一个 OSPF 域有且只有一个<code>Area0</code>，所有的区域间路由必须通过<code>Area0</code>中转。</p><h3 id="常规区域-normal-area" tabindex="-1"><a class="header-anchor" href="#常规区域-normal-area"><span>常规区域（Normal Area）</span></a></h3><p>所有的 OSPF 区域，默认情况下都是常规区域。当然，<code>Area0</code>是常规区域中比较特殊的一个。OSPF 所有的非骨干区域（非 0 常规区域）必须和<code>Area0</code>直接相连。常规区域中允许<code>Type-1</code>、<code>Type-2</code>、<code>Type-3</code>、<code>Type-4</code> 和<code>Type-5 LSA</code>泛洪，禁止<code>Type-7 LSA</code>出现在常规区域内。</p><p><a href="OSPF-LSA/area-2.png"></a></p><p><code>Area1</code>是一个非 0 常规区域，<code>CO-SW1</code>和<code>CO-SW2</code>作为这个区域的 ABR，会将<code>Type-3</code>、<code>Type-4</code>和<code>Type-5 LSA</code>都传入<code>Area1</code>。</p><h3 id="末梢区域-stub-area" tabindex="-1"><a class="header-anchor" href="#末梢区域-stub-area"><span>末梢区域（Stub Area）</span></a></h3><p>末梢区域也叫做<code>Stub</code>区域，当一个非 0 常规区域只有一个出口，比如这个区域只有一个 ABR，这个区域可以配置成 <code>Stub</code>区域。当一个区域配置成<code>Stub</code>区域后，区域内的 ABR 会阻挡<code>Type-5 LSA</code>进入区域，也就是说，禁止外部路由发布到这个区域。通过这种方式可以减少区域内泛洪的 LSA 数量，同时区域内的 ABR 自动下发一条使用<code>Type-3 LSA</code>描述的默认路由，让区域内的路由器能够路由到域外，这样既减小了区域内网络设备的路由表规模，又保证了正常的访问外部网络，还降低了设备的资源消耗。另外，ABR 依然会把描述区域间路由的<code>Type-3 LSA</code>传输到<code>Stub</code>区域中。</p><p><a href="OSPF-LSA/area-3.png"></a></p><p><code>Area1</code>配置为<code>Stub</code>区域，这样<code>Area1</code>的 ABR（即<code>CO-SW1</code>和<code>CO-SW2</code>）不再把<code>Type-5 LSA</code>传播到这个区域。由于<code>Type-5 LSA</code>无法进入这个区域，<code>Type-4 LSA</code>也没必要在这个区域泛洪，所以<code>CO-SW1</code>和<code>CO-SW2</code>也不会向区域内传播 <code>Type-4 LSA</code>。这样，<code>Router-X</code>的路由表不会出现到达省公司（即 OSPF 域外）的具体路由，路由表的规模减小，设备的资源消耗也降低。当然，<code>Router-X</code>还是需要访问省公司的，为了让 <code>Router-X</code>的发往省公司的路由到达目的地，ABR 会自动向<code>Area1</code>导入默认路由，这条默认路由使用<code>Type-3 LSA</code>描述，<code>CO-SW1</code>和<code>CO-SW2</code>都会下发默认路由。<code>Router-X</code>发往省公司的流量，通过默认路由，先到达<code>CO-SW1</code>或<code>CO-SW2</code>，再转发到省公司。</p><p>我们还能在<code>Stub</code>区域的基础上，进一步进一步减少 LSA 泛洪，即在<code>Stub</code>区域的 ABR 上，阻挡描述区域间路由的<code>Type-3 LSA</code>进入区域，区域内的路由器通过 ABR 下发的默认路由到达其它区域和域外的网络。这个特殊区域内，只有<code>Type-1</code>、<code>Type-2 LSA</code>和描述默认路由的<code>Type-3 LSA</code>存在，意味区域内路由器的路由表只有到达区域内部的路由，以及指向 ABR 的默认路由，路由器的路由表被极度的精简了。这个特殊的区域，叫做完全末梢网络（<code>Totally Stub Area</code>）。</p><p><a href="OSPF-LSA/area-4.png"></a></p><p>在<code>CO-SW1</code>和<code>CO-SW2</code>上，进一步阻挡<code>Type-3 LSA</code>进入<code>Area1</code>，这样<code>Router-X</code>不会学习到<code>Area1</code>之外的区域间路由，也学不到到达省公司的外部路由，<code>Router-X</code>的路由表会极大程度的简化。当然，<code>Router-X</code>可以通过 ABR 下发的默认路由把外出的数据包转发出去。</p><h3 id="非完全末梢区域-not-so-stubby-area" tabindex="-1"><a class="header-anchor" href="#非完全末梢区域-not-so-stubby-area"><span>非完全末梢区域（Not-So-Stubby Area）</span></a></h3><p><code>Stub</code> 区域的 ABR 能够阻挡<code>Type-4 LSA</code>和<code>Type-5 LSA</code>进入区域内，并且禁止区域内的路由器把外部路由引入到区域。<code>Area1</code>一旦配置成<code>Stub</code>区域，那么<code>CO-SW1</code>、<code>CO-SW2</code>和<code>Router-X</code>都不能把外部路由引入到这个区域。</p><p>假如<code>Router-X</code>路由器下挂了一个小型区县网络，这个网络的路由器采用静态路由实现路由的交互。现在这个小型网络需要访问地市公司和省公司的网络资源，那么我们要把两个路由域打通，在<code>Router-X</code>上执行路由重分发是一种解决方案，但是<code>Area1</code>已经是<code>Stub</code>区域，<code>Router-X</code>不允许引入外部路由，如果把<code>Area1</code>恢复成常规区域，又丢失了<code>Stub</code>区域的优势，到达省公司的外部路由又传到<code>Area1</code>。这时，可以使用另一个特殊区域：NSSA。</p><p>NSSA（<code>Not-So-Stubby Area</code>），也就是非完全末梢区域，可以看成是<code>Stub</code>区域的扩展，它有<code>Stub</code>区域的特点：阻挡<code>Type-4</code>和<code>Type-5 LSA</code>进入，减少区域内泛洪的 LSA 数量。同时，允许区域内的路由器把少量外部路由引入 OSPF。引入的外部路由，用<code>Type-7 LSA</code>描述，这些<code>Type-7 LSA</code>只能在自己的 NSSA 内泛洪，不允许直接进入<code>Area0</code>。为了让 OSPF 域内其它区域学习到 NSSA 引入的外部路由，NSSA 的 ABR 会把<code>Type-7 LSA</code>转换成<code>Type-5 LSA</code>，然后传入<code>Area0</code>，从而泛洪到整个 OSPF 域。</p><p><a href="OSPF-LSA/area-5.png"></a></p><p><code>Area1</code>配置成 NSSA，这样<code>Area1</code>的 ABR 会阻挡<code>Type-5 LSA</code>进入区域内。另外，<code>Router-X</code>连接到一个静态路由网络，他将路由表中的静态路由引入 OSPF，这些引入的外部路由使用<code>Type-7 LSA</code>描述，这些 LSA 在<code>Area1</code>内泛洪，并且禁止进入<code>Area0</code>。<code>CO-SW1</code>和<code>CO-SW2</code>作为 NSSA 的 ABR，也能收到<code>Type-7 LSA</code>，根据这些 LSA 计算出到达静态路由网络的路由。另外，<code>CO-SW1</code>和<code>CO-SW2</code>把<code>Type-7 LSA</code>转换成<code>Type-5 LSA</code>，并把转换后的<code>Type-5 LSA</code>传入<code>Area0</code>，这样外部路由就可以被整个 OSPF 域中的路由器学习到。同时，<code>CO-SW1</code>和<code>CO-SW2</code>会向 NSSA 内下发一条<code>Type-7 LSA</code>的默认路由，让<code>Router-X</code>能够通过这条默认路由到达省公司。</p><p>我们还可以在 NSSA 的基础上，进一步减少 LSA 的泛洪。在 NSSA 的 ABR 上，可以进一步把<code>Type-3 LSA</code>阻挡掉，从而把区域间的路由都过滤掉，NSSA 的 ABR 会自动下发一条默认路由到区域内，默认路由使用<code>Type-3 LSA</code>描述，让区域内的路由器能够通过默认路由访问 OSPF 域内的其它区域，和域外的网络。这种类型的特殊区域也叫做<code>Totally NSSA</code>。</p><h3 id="各种区域类型允许出现的-lsa" tabindex="-1"><a class="header-anchor" href="#各种区域类型允许出现的-lsa"><span>各种区域类型允许出现的 LSA</span></a></h3><p><a href="OSPF-LSA/area-6.png"></a></p>',146)]))}const l=o(a,[["render",p],["__file","OSPF-LSA.html.vue"]]),i=JSON.parse('{"path":"/network/OSPF-LSA.html","title":"OSPF-LSA","lang":"zh-CN","frontmatter":{"title":"OSPF-LSA","date":"2025-05-10T00:00:00.000Z","tags":"network","categories":"计算机网络","order":27,"description":"LSA OSPF 是链路状态协议，路由器彼此之间通过发送 LSA(LinkState Advertisement，链路状态通告) 来交换并保存整个网络的链路状态信息，构建整个网络的拓扑结构，并生成链路状态数据库 LSDB，然后 OSPF 路由器根据自身的 LSDB，利用 SPF(ShortestPath First最短路径优先)路由算法独立地计算出到达...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/network/OSPF-LSA.html"}],["meta",{"property":"og:title","content":"OSPF-LSA"}],["meta",{"property":"og:description","content":"LSA OSPF 是链路状态协议，路由器彼此之间通过发送 LSA(LinkState Advertisement，链路状态通告) 来交换并保存整个网络的链路状态信息，构建整个网络的拓扑结构，并生成链路状态数据库 LSDB，然后 OSPF 路由器根据自身的 LSDB，利用 SPF(ShortestPath First最短路径优先)路由算法独立地计算出到达..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-14T10:35:45.000Z"}],["meta",{"property":"article:published_time","content":"2025-05-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-14T10:35:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OSPF-LSA\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-05-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-14T10:35:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"LSA","slug":"lsa","link":"#lsa","children":[]},{"level":2,"title":"LSA类型","slug":"lsa类型","link":"#lsa类型","children":[]},{"level":2,"title":"LSA头部","slug":"lsa头部","link":"#lsa头部","children":[]},{"level":2,"title":"LSA 详解","slug":"lsa-详解","link":"#lsa-详解","children":[{"level":3,"title":"Type-1 LSA","slug":"type-1-lsa","link":"#type-1-lsa","children":[]},{"level":3,"title":"Type-2 LSA","slug":"type-2-lsa","link":"#type-2-lsa","children":[]},{"level":3,"title":"Type-3 LSA","slug":"type-3-lsa","link":"#type-3-lsa","children":[]},{"level":3,"title":"Type-4 LSA","slug":"type-4-lsa","link":"#type-4-lsa","children":[]},{"level":3,"title":"Type-5 LSA","slug":"type-5-lsa","link":"#type-5-lsa","children":[]},{"level":3,"title":"Type-7 LSA","slug":"type-7-lsa","link":"#type-7-lsa","children":[]},{"level":3,"title":"判断 LSA 的新旧","slug":"判断-lsa-的新旧","link":"#判断-lsa-的新旧","children":[]}]},{"level":2,"title":"区域类型","slug":"区域类型","link":"#区域类型","children":[{"level":3,"title":"骨干区域（Backbone Area）","slug":"骨干区域-backbone-area","link":"#骨干区域-backbone-area","children":[]},{"level":3,"title":"常规区域（Normal Area）","slug":"常规区域-normal-area","link":"#常规区域-normal-area","children":[]},{"level":3,"title":"末梢区域（Stub Area）","slug":"末梢区域-stub-area","link":"#末梢区域-stub-area","children":[]},{"level":3,"title":"非完全末梢区域（Not-So-Stubby Area）","slug":"非完全末梢区域-not-so-stubby-area","link":"#非完全末梢区域-not-so-stubby-area","children":[]},{"level":3,"title":"各种区域类型允许出现的 LSA","slug":"各种区域类型允许出现的-lsa","link":"#各种区域类型允许出现的-lsa","children":[]}]}],"git":{"createdTime":1745721550000,"updatedTime":1747218945000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":2},{"name":"WSQ-LK","email":"592786982@qq.com","commits":2}]},"readingTime":{"minutes":32.15,"words":9644},"filePathRelative":"network/OSPF-LSA.md","localizedDate":"2025年5月10日","autoDesc":true}');export{l as comp,i as data};
