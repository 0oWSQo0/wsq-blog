import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as o,o as t}from"./app-Coac0FJ0.js";const n={};function e(p,s){return t(),a("div",null,s[0]||(s[0]=[o(`<h2 id="cd-切换目录" tabindex="-1"><a class="header-anchor" href="#cd-切换目录"><span>cd：切换目录</span></a></h2><p><code>cd(change directory)</code>：更改当前所处的工作目录，路径可以是绝对路径，也可以是相对路径，若省略不写则会跳转至当前登录者的家目‍录。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#91CBFF;">cd</span><span style="color:#F0F3F6;"> [相对路径或绝对路径]</span></span></code></pre></div><p><code>cd</code>命令后面可以跟一些特殊符号，表达固定的含义：</p><table><thead><tr><th style="text-align:center;">特殊符号</th><th style="text-align:left;">作 用</th></tr></thead><tbody><tr><td style="text-align:center;">~</td><td style="text-align:left;">当前登录用户的家目录</td></tr><tr><td style="text-align:center;">-</td><td style="text-align:left;">上次所在目录</td></tr><tr><td style="text-align:center;">.</td><td style="text-align:left;">当前目录</td></tr><tr><td style="text-align:center;">..</td><td style="text-align:left;">上级目录</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 表示回到自己的主目录，对于 root 用户，其主目录为 /root</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost vbird]# cd </span><span style="color:#FF9492;">~</span></span>
<span class="line"><span style="color:#BDC4CC;"># 没有加上任何路径，也代表回到当前登录用户的主目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cd</span></span>
<span class="line"><span style="color:#BDC4CC;"># 表示切换到当前目录的上一级目录；</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cd ..</span></span>
<span class="line"><span style="color:#BDC4CC;"># 表示回到刚刚的那个目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost /]# cd -</span></span>
<span class="line"><span style="color:#BDC4CC;"># 进入/usr/local/src目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cd /usr/local/src  </span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost src]# cd -</span></span>
<span class="line"><span style="color:#FFB757;">/root</span></span></code></pre></div><h2 id="pwd-显示当前路径" tabindex="-1"><a class="header-anchor" href="#pwd-显示当前路径"><span>pwd：显示当前路径</span></a></h2><p><code>pwd(Print Working Directory)</code>（打印工作目录）：显示用户当前所处的工作目录的绝对路径。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# pwd</span></span>
<span class="line"><span style="color:#FFB757;">/root</span></span></code></pre></div><p>注意，在<code>[demo@localhost ~]#</code>这一部分中，虽然也显示出当前所在的目录（例如<code>~</code>表示主目录），但此位置只会列出整个路径中最后的那一个目录。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cd /var/mail</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost mail]# pwd</span></span>
<span class="line"><span style="color:#FFB757;">/var/mail</span></span></code></pre></div><p>不同的目录中，目录名是可以重复的，因此，仅通过<code>[root@localhost mail]</code>中的<code>mail</code>，根本无法判断其所在的具体位置，而使用<code>pwd</code>命令，可以输出当前所在目录的完整路径。</p><h2 id="ls-查看目录下文件" tabindex="-1"><a class="header-anchor" href="#ls-查看目录下文件"><span>ls：查看目录下文件</span></a></h2><p><code>ls(list)</code>：显示当前目录下的内容。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ls [选项] 目录名称</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">-a, --all</td><td style="text-align:left;">显示全部的文件，包括隐藏文件（开头为 . 的文件）也一起罗列出来，这是最常用的选项之一。</td></tr><tr><td style="text-align:center;">-A</td><td style="text-align:left;">显示全部的文件，连同隐藏文件，但不包括 . 与 .. 这两个目录。</td></tr><tr><td style="text-align:center;">-d, --directory</td><td style="text-align:left;">仅列出目录本身，而不是列出目录内的文件数据。</td></tr><tr><td style="text-align:center;">-h, --human-readable</td><td style="text-align:left;">以人们易读的方式显示文件或目录大小，如 1KB、234MB、2GB 等。</td></tr><tr><td style="text-align:center;">-i, --inode</td><td style="text-align:left;">显示 inode 节点信息。</td></tr><tr><td style="text-align:center;">-l</td><td style="text-align:left;">使用长格式列出文件和目录信息。</td></tr><tr><td style="text-align:center;">-r, --reverse</td><td style="text-align:left;">将排序结果反向输出，比如，若原本文件名由小到大，反向则为由大到小。</td></tr><tr><td style="text-align:center;">-R, --recursive</td><td style="text-align:left;">连同子目录内容一起列出来，等於将该目录下的所有文件都显示出来。</td></tr><tr><td style="text-align:center;">-t</td><td style="text-align:left;">以时间排序，而不是以文件名排序。</td></tr></tbody></table><p>当<code>ls</code>命令不使用任何选项时，默认只会显示非隐藏文件的名称，并以文件名进行排序，同时会根据文件的具体类型给文件名配色（蓝色显示目录，白色显示一般文件）。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@www </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ls -al </span><span style="color:#FF9492;">~</span></span>
<span class="line"><span style="color:#FFB757;">total</span><span style="color:#91CBFF;"> 156</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-x---</span><span style="color:#91CBFF;">  4</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">  4096</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;"> 24</span><span style="color:#ADDCFF;"> 00:07</span><span style="color:#ADDCFF;"> .</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x</span><span style="color:#91CBFF;"> 23</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">  4096</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;"> 22</span><span style="color:#ADDCFF;"> 12:09</span><span style="color:#ADDCFF;"> ..</span></span>
<span class="line"><span style="color:#FFB757;">-rw-------</span><span style="color:#91CBFF;">  1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">  1474</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;">  4</span><span style="color:#ADDCFF;"> 18:27</span><span style="color:#ADDCFF;"> anaconda-ks.cfg</span></span>
<span class="line"><span style="color:#FFB757;">-rw-------</span><span style="color:#91CBFF;">  1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">   955</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;"> 24</span><span style="color:#ADDCFF;"> 00:08</span><span style="color:#ADDCFF;"> .bash_history</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;">  1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">    24</span><span style="color:#ADDCFF;"> Jan</span><span style="color:#91CBFF;">  6</span><span style="color:#91CBFF;">  2007</span><span style="color:#ADDCFF;"> .bash_logout</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;">  1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">   191</span><span style="color:#ADDCFF;"> Jan</span><span style="color:#91CBFF;">  6</span><span style="color:#91CBFF;">  2007</span><span style="color:#ADDCFF;"> .bash_profile</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;">  1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">   176</span><span style="color:#ADDCFF;"> Jan</span><span style="color:#91CBFF;">  6</span><span style="color:#91CBFF;">  2007</span><span style="color:#ADDCFF;"> .bashrc</span></span>
<span class="line"><span style="color:#FFB757;">drwx------</span><span style="color:#91CBFF;">  3</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">  4096</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;">  5</span><span style="color:#ADDCFF;"> 10:37</span><span style="color:#ADDCFF;"> .gconf</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;">  1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> 42304</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;">  4</span><span style="color:#ADDCFF;"> 18:26</span><span style="color:#ADDCFF;"> install.log</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;">  1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">  5661</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;">  4</span><span style="color:#ADDCFF;"> 18:25</span><span style="color:#ADDCFF;"> install.log.syslog</span></span></code></pre></div><p>通过使用<code>-a</code>，你会看到以<code>.</code>为开头的几个文件，以及目录文件<code>（.）、（..）、.gconf</code>等等，这些都是隐藏的目录和文件。</p><p>不仅如此，这里的<code>ls</code>命令还使用了<code>-l</code>选项，因此才显示出了文件的详细信息，此选项显示的这 7 列的含义分别是：</p><ul><li>第一列：规定了不同的用户对文件所拥有的权限。</li><li>第二列：引用计数，文件的引用计数代表该文件的硬链接个数，而目录的引用计数代表该目录有多少个一级子目录。</li><li>第三列：所有者，也就是这个文件属于哪个用户。默认所有者是文件的建立用户。</li><li>第四列：所属组，默认所属组是文件建立用户的有效组，一般情况下就是建立用户的所在组。</li><li>第五列：大小，默认单位是字节。</li><li>第六列：文件修改时间，文件状态修改时间或文件数据修改时间都会更改这个时间，注意这个时间不是文件的创建时间。</li><li>第七列：文件名或目录名。</li></ul><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost usr]# ls -l /usr/</span></span>
<span class="line"><span style="color:#FFB757;">总用量44</span></span>
<span class="line"><span style="color:#FFB757;">dr-xr-xr-x.</span><span style="color:#91CBFF;">  2</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> 20480</span><span style="color:#ADDCFF;"> 8月</span><span style="color:#91CBFF;">   4</span><span style="color:#ADDCFF;"> 19:11</span><span style="color:#ADDCFF;"> bin</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x.</span><span style="color:#91CBFF;">  2</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">     6</span><span style="color:#ADDCFF;"> 4月</span><span style="color:#91CBFF;">  11</span><span style="color:#91CBFF;"> 2018</span><span style="color:#ADDCFF;"> etc</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x.</span><span style="color:#91CBFF;">  2</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">     6</span><span style="color:#ADDCFF;"> 4月</span><span style="color:#91CBFF;">  11</span><span style="color:#91CBFF;"> 2018</span><span style="color:#ADDCFF;"> games</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x.</span><span style="color:#91CBFF;"> 34</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">  8192</span><span style="color:#ADDCFF;"> 8月</span><span style="color:#91CBFF;">   4</span><span style="color:#ADDCFF;"> 19:11</span><span style="color:#ADDCFF;"> include</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x.</span><span style="color:#91CBFF;">  3</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">    60</span><span style="color:#ADDCFF;"> 8月</span><span style="color:#91CBFF;">   3</span><span style="color:#ADDCFF;"> 17:27</span><span style="color:#ADDCFF;"> java</span></span>
<span class="line"><span style="color:#FFB757;">dr-xr-xr-x.</span><span style="color:#91CBFF;"> 28</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;">  4096</span><span style="color:#ADDCFF;"> 8月</span><span style="color:#91CBFF;">   4</span><span style="color:#ADDCFF;"> 19:11</span><span style="color:#ADDCFF;"> lib</span></span>
<span class="line"><span style="color:#FFB757;">dr-xr-xr-x.</span><span style="color:#91CBFF;"> 41</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> 28672</span><span style="color:#ADDCFF;"> 8月</span><span style="color:#91CBFF;">   4</span><span style="color:#ADDCFF;"> 19:11</span><span style="color:#ADDCFF;"> lib64</span></span>
<span class="line"><span style="color:#91CBFF;">...</span></span></code></pre></div><p>这个命令会显示目录下的内容，而不会显示这个目录本身的详细信息。如果想显示目录本身的信息，就必须加入<code>-d</code>选项。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ls -ld /root/</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x.</span><span style="color:#91CBFF;"> 15</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> 180</span><span style="color:#ADDCFF;"> 8月</span><span style="color:#91CBFF;">   3</span><span style="color:#ADDCFF;"> 17:58</span><span style="color:#ADDCFF;"> /usr/</span></span></code></pre></div><h2 id="mkdir-创建目录" tabindex="-1"><a class="header-anchor" href="#mkdir-创建目录"><span>mkdir：创建目录</span></a></h2><p><code>mkdir(make directories)</code>：创建新目录。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mkdir</span><span style="color:#F0F3F6;"> [选项] 目录名</span></span></code></pre></div><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td><code>-m, --mode=&lt;MODE&gt;</code></td><td>建立目录时同时设置目录的权限</td></tr><tr><td><code>-p, --parents </code></td><td>递归创建所有目录</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir lm/movie/jp/cangls</span></span>
<span class="line"><span style="color:#FFB757;">mkdir:无法创建目录</span><span style="color:#FFB757;">&quot;lm/movie/jp/cangls&quot;</span><span style="color:#FFB757;">:没有那个文件或目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir -p lm/movie/jp/cangls</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ls</span></span>
<span class="line"><span style="color:#FFB757;">anaconda-ks.cfg</span><span style="color:#ADDCFF;"> cangls</span><span style="color:#ADDCFF;"> install.log</span><span style="color:#ADDCFF;"> install.log.syslog</span><span style="color:#ADDCFF;"> lm</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ls lm/</span></span>
<span class="line"><span style="color:#FFB757;">movie</span></span>
<span class="line"><span style="color:#BDC4CC;">#这里只查看一级子目录，其实后续的jp目录、cangls目录都已经建立</span></span></code></pre></div><p>使用<code>-m</code>选项自定义目录权限。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir -m 711 test2</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ls -l</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x</span><span style="color:#91CBFF;">  3</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;">  root</span><span style="color:#91CBFF;"> 4096</span><span style="color:#ADDCFF;"> Jul</span><span style="color:#91CBFF;"> 18</span><span style="color:#ADDCFF;"> 12:50</span><span style="color:#ADDCFF;"> test</span></span>
<span class="line"><span style="color:#FFB757;">drwxr-xr-x</span><span style="color:#91CBFF;">  3</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;">  root</span><span style="color:#91CBFF;"> 4096</span><span style="color:#ADDCFF;"> Jul</span><span style="color:#91CBFF;"> 18</span><span style="color:#ADDCFF;"> 12:53</span><span style="color:#ADDCFF;"> test1</span></span>
<span class="line"><span style="color:#FFB757;">drwx--x--x</span><span style="color:#91CBFF;">  2</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;">  root</span><span style="color:#91CBFF;"> 4096</span><span style="color:#ADDCFF;"> Jul</span><span style="color:#91CBFF;"> 18</span><span style="color:#ADDCFF;"> 12:54</span><span style="color:#ADDCFF;"> test2</span></span></code></pre></div><h2 id="rmdir-删除空目录" tabindex="-1"><a class="header-anchor" href="#rmdir-删除空目录"><span>rmdir：删除空目录</span></a></h2><p><code>rmdir(remove empty directories)</code>：删除空目录，只能删除空目录。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">rmdir</span><span style="color:#F0F3F6;"> [选项] 目录</span></span></code></pre></div><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-p, --parents</td><td>递归删除空目录</td></tr></tbody></table><p><code>rmdir</code>命令的作用十分有限，因为只能刪除空目录，所以一旦目录中有内容，就会报错。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 命令后面加目录名称即可，但命令执行成功与否，取决于要删除目录是否是空目录，因为\`rmdir\`命令只能删除空目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# rmdir cangls</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 注意，此方式先删除最低一层地目录</span></span>
<span class="line"><span style="color:#BDC4CC;"># 然后逐层删除上级目录，删除时也需要保证各级目录是空目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# rmdir -p lm/movie/jp/cangls</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir test </span><span style="color:#BDC4CC;">#建立测试目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# touch test/boduo</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# touch test/longze</span></span>
<span class="line"><span style="color:#BDC4CC;">#在测试目录中建立两个文件</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# rmdir test</span></span>
<span class="line"><span style="color:#FFB757;">rmdir:删除</span><span style="color:#FFB757;">&quot;test&quot;</span><span style="color:#FFB757;">失败：目录非空</span></span></code></pre></div><h2 id="touch-创建文件及修改文件时间戳" tabindex="-1"><a class="header-anchor" href="#touch-创建文件及修改文件时间戳"><span>touch：创建文件及修改文件时间戳</span></a></h2><p><code>touch</code>命令不光可以用来创建文件（当指定操作文件不存在时，该命令会在当前位置建立一个空文件），此命令更重要的功能是修改文件的时间参数（但当文件存在时，会修改此文件的时间参数）。</p><p>Linux 系统中，每个文件主要拥有 3 个时间参数（通过<code>stat</code>命令进行查看），分别是文件的访问时间、数据修改时间以及状态修改时间：</p><ul><li>访问时间（<code>Access Time</code>，简称<code>atime</code>）：只要文件的内容被读取，访问时间就会更新。例如，使用<code>cat</code>命令可以查看文件的内容，此时文件的访问时间就会发生改变。</li><li>数据修改时间（<code>Modify Time</code>，简称<code>mtime</code>）：当文件的内容数据发生改变，此文件的数据修改时间就会跟着相应改变。</li><li>状态修改时间（<code>Change Time</code>，简称<code>ctime</code>）：当文件的状态发生变化，就会相应改变这个时间。比如说，如果文件的权限或者属性发生改变，此时间就会相应改变。</li></ul><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">touch</span><span style="color:#F0F3F6;"> [选项] 文件名</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;"><code>-a</code></td><td style="text-align:left;">只修改文件的访问时间</td></tr><tr><td style="text-align:center;"><code>-c, --no-create</code></td><td style="text-align:left;">仅修改文件的时间参数（3 个时间参数都改变），如果文件不存在，则不建立新文件</td></tr><tr><td style="text-align:center;"><code>-d, --date=&lt;字符串&gt;</code></td><td style="text-align:left;">后面可以跟欲修订的日期，而不用当前的日期，即把文件的<code>atime</code>和<code>mtime</code>时间改为指定的时间</td></tr><tr><td style="text-align:center;"><code>-m</code></td><td style="text-align:left;">只修改文件的数据修改时间</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;">#建立名为 bols 的空文件</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]#touch bols</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# touch -d </span><span style="color:#ADDCFF;">&quot;2017-05-04 15:44&quot;</span><span style="color:#F0F3F6;"> bols</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ll bols; </span><span style="color:#FFB757;">ll</span><span style="color:#91CBFF;"> --time=atime</span><span style="color:#ADDCFF;"> bols</span><span style="color:#F0F3F6;">; </span><span style="color:#FFB757;">ll</span><span style="color:#91CBFF;"> --time=ctime</span><span style="color:#ADDCFF;"> bols</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> May</span><span style="color:#91CBFF;"> 4</span><span style="color:#91CBFF;"> 2017</span><span style="color:#ADDCFF;"> bols</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> May</span><span style="color:#91CBFF;"> 4</span><span style="color:#91CBFF;"> 2017</span><span style="color:#ADDCFF;"> bols</span></span>
<span class="line"><span style="color:#FFB757;">-rw-r--r--</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> root</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> Sep</span><span style="color:#91CBFF;"> 25</span><span style="color:#ADDCFF;"> 21:40</span><span style="color:#ADDCFF;"> bols</span></span>
<span class="line"><span style="color:#BDC4CC;">#ctime不会变为设定时间，但更新为当前服务器的时间</span></span></code></pre></div><h2 id="cp-复制文件或目录" tabindex="-1"><a class="header-anchor" href="#cp-复制文件或目录"><span>cp：复制文件或目录</span></a></h2><p><code>cp(copy)</code>：复制文件或目录。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">cp</span><span style="color:#F0F3F6;"> [选项] 源文件 目标文件</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">-a</td><td style="text-align:left;">相当于<code>-d、-p、-r</code>选项的集合</td></tr><tr><td style="text-align:center;">-d</td><td style="text-align:left;">如果源文件为软链接（对硬链接无效），则复制出的目标文件也为软链接</td></tr><tr><td style="text-align:center;">-l</td><td style="text-align:left;">把目标文件建立为源文件的硬链接文件，而不是复制源文件</td></tr><tr><td style="text-align:center;">-s</td><td style="text-align:left;">把目标文件建立为源文件的软链接文件，而不是复制源文件</td></tr><tr><td style="text-align:center;">-p</td><td style="text-align:left;">复制后目标文件保留源文件的属性（包括所有者、所属组、权限和时间）</td></tr><tr><td style="text-align:center;">-r</td><td style="text-align:left;">递归复制，用于复制目录</td></tr></tbody></table><p>需要注意的是，源文件可以有多个，但这种情况下，目标文件必须是目录才可以。</p><p>这里的软链接，类似于 Windows 系统中的快捷方式，而硬链接则是透过文件系统的<code>inode</code>号产生一个新的文件名。无论是复制软链接还是硬链接，都不是复制源文件。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;">#建立源文件</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# touch cangls</span></span>
<span class="line"><span style="color:#BDC4CC;">#把源文件不改名复制到 /tmp/ 目录下</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cp cangls /tmp/</span></span>
<span class="line"><span style="color:#BDC4CC;">#改名复制</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cp cangls /tmp/bols</span></span></code></pre></div><p>复制目录只需使用<code>-r</code>选项即可：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;">#建立测试目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir movie</span></span>
<span class="line"><span style="color:#BDC4CC;">#目录原名复制</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cp -r /root/movie/ /tmp/</span></span></code></pre></div><h2 id="rm-删除文件或目录" tabindex="-1"><a class="header-anchor" href="#rm-删除文件或目录"><span>rm：删除文件或目录</span></a></h2><p><code>rm</code>是强大的删除命令，它可以永久性地删除文件系统中指定的文件或目录。在使用<code>rm</code>命令删除文件或目录时，系统不会产生任何提示信息。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">rm</span><span style="color:#F0F3F6;"> [选项] 文件或目录</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">-f, --force</td><td style="text-align:left;">强制删除（<code>force</code>），和<code>-i</code>选项相反，使用<code>-f</code>，系统将不再询问，而是直接删除目标文件或目录</td></tr><tr><td style="text-align:center;">-i</td><td style="text-align:left;">和<code>-f</code>正好相反，在删除文件或目录之前，系统会给出提示信息，使用<code>-i</code>可以有效防止不小心删除有用的文件或目录</td></tr><tr><td style="text-align:center;">-r, -R, --recursive</td><td style="text-align:left;">递归删除，主要用于删除目录，可删除指定目录及包含的所有内容，包括所有的子目录和文件</td></tr><tr><td style="text-align:center;">-d, --dir</td><td style="text-align:left;">删除空目录</td></tr></tbody></table><p><code>rm</code>命令如果任何选项都不加，则默认执行的是&quot;<code>rm -i</code>文件名&quot;，也就是在删除一个文件之前会先询问是否删除。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# touch cangls</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# rm cangls</span></span>
<span class="line"><span style="color:#FFB757;">rm:是否删除普通空文件</span><span style="color:#FFB757;">&quot;cangls&quot;</span><span style="color:#FFB757;">?y</span></span>
<span class="line"><span style="color:#BDC4CC;">#删除前会询问是否删除</span></span></code></pre></div><p>如果需要删除目录，则需要使用<code>-r</code>选项。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir -p /test/lm/movie/jp</span></span>
<span class="line"><span style="color:#BDC4CC;">#递归建立测试目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# rm /test</span></span>
<span class="line"><span style="color:#FFB757;">rm:无法删除</span><span style="color:#FFB757;">&quot;/test/&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 是一个目录</span></span>
<span class="line"><span style="color:#BDC4CC;">#如果不加&quot;-r&quot;选项，则会报错</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# rm -r /test</span></span>
<span class="line"><span style="color:#FFB757;">rm:是否进入目录</span><span style="color:#FFB757;">&quot;/test&quot;</span><span style="color:#FFB757;">?y</span></span>
<span class="line"><span style="color:#FFB757;">rm:是否进入目录</span><span style="color:#FFB757;">&quot;/test/lm/movie&quot;</span><span style="color:#FFB757;">?y</span></span>
<span class="line"><span style="color:#FFB757;">rm:是否删除目录</span><span style="color:#FFB757;">&quot;/test/lm/movie/jp&quot;</span><span style="color:#FFB757;">?y</span></span>
<span class="line"><span style="color:#FFB757;">rm:是否删除目录</span><span style="color:#FFB757;">&quot;/test/lm/movie&quot;</span><span style="color:#FFB757;">?y</span></span>
<span class="line"><span style="color:#FFB757;">rm:是否删除目录</span><span style="color:#FFB757;">&quot;/test/lm&quot;</span><span style="color:#FFB757;">?y</span></span>
<span class="line"><span style="color:#FFB757;">rm:是否删除目录</span><span style="color:#FFB757;">&quot;/test&quot;</span><span style="color:#FFB757;">?y</span></span>
<span class="line"><span style="color:#BDC4CC;">#会分别询问是否进入子目录、是否删除子目录</span></span></code></pre></div><p>强制删除。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir -p /test/lm/movie/jp</span></span>
<span class="line"><span style="color:#BDC4CC;">#重新建立测试目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# rm -rf /test</span></span>
<span class="line"><span style="color:#BDC4CC;">#强制删除，一了百了</span></span></code></pre></div><p>加入了强制功能之后，删除就会变得很简单，但是需要注意，数据强制删除之后无法恢复。</p><p>虽然<code>-rf</code>选项是用来删除目录的，但是删除文件也不会报错。所以，为了使用方便，一般不论是删除文件还是删除目录，都会直接使用<code>-rf</code>选项。</p><h2 id="mv-移动文件或改名" tabindex="-1"><a class="header-anchor" href="#mv-移动文件或改名"><span>mv：移动文件或改名</span></a></h2><p><code>mv(move)</code>命令，既可以在不同的目录之间移动文件或目录，也可以对文件和目录进行重命名。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mv</span><span style="color:#F0F3F6;"> [选项] 源文件 目标文件</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">-f, --force</td><td style="text-align:left;">强制覆盖，如果目标文件已经存在，则不询问，直接强制覆盖</td></tr><tr><td style="text-align:center;">-i, --interactive</td><td style="text-align:left;">交互移动，如果目标文件已经存在，则询问用户是否覆盖（默认选项）</td></tr><tr><td style="text-align:center;">-n， --clobber</td><td style="text-align:left;">如果目标文件已经存在，则不会覆盖移动，而且不询问用户</td></tr><tr><td style="text-align:center;">-u, --update</td><td style="text-align:left;">若目标文件已经存在，但两者相比，源文件更新，则会对目标文件进行升级</td></tr><tr><td style="text-align:center;">-b, --black</td><td style="text-align:left;">覆盖前先进行备份</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mv cangls /tmp</span></span>
<span class="line"><span style="color:#BDC4CC;">#移动之后，源文件会被删除，类似剪切</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mkdir movie</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mv movie/ /tmp</span></span>
<span class="line"><span style="color:#BDC4CC;">#也可以移动目录。和 rm、cp 不同的是，mv 移动目录不需要加入 &quot;-r&quot; 选项</span></span></code></pre></div><p>如果移动的目标位置已经存在同名的文件，则同样会提示是否覆盖，因为<code>mv</code>命令默认执行的也是<code>mv -i</code>的别名。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# touch cangls</span></span>
<span class="line"><span style="color:#BDC4CC;">#重新建立文件</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mv cangls /tmp</span></span>
<span class="line"><span style="color:#FFB757;">mv:是否覆盖</span><span style="color:#FFB757;">&quot;tmp/cangls&quot;</span><span style="color:#FFB757;">？y</span></span>
<span class="line"><span style="color:#BDC4CC;">#由于 /tmp 目录下已经存在 cangls 文件，所以会提示是否覆盖，需要手工输入 y 覆盖移动</span></span></code></pre></div><p>如果源文件和目标文件在同一目录中，那就是改名。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;">#把 bols 改名为 lmls</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# mv bols lmls</span></span></code></pre></div><p>目录也可以按照同样的方法改名。</p><h2 id="find-查找命令" tabindex="-1"><a class="header-anchor" href="#find-查找命令"><span>find：查找命令</span></a></h2><p>在指定目录中搜索文件。</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>find &lt; path &gt; &lt;expression&gt; &lt;cmd&gt;</span></span>
<span class="line"><span>find &lt;指定目录&gt; &lt;指定条件&gt; &lt;指定动作&gt;</span></span></code></pre></div><ul><li><code>path</code>：所要搜索的目录及其所有子目录。默认为当前目录</li><li><code>expression</code>：所要搜索的文件的特征</li><li><code>cmd</code>：对搜索结果进行特定的处理</li></ul><p>如果什么参数也不加，<code>find</code>默认搜索当前目录及其子目录，并且不过滤任何结果（也就是返回所有文件），将它们全都显示在屏幕上。</p><table><thead><tr><th>指定条件</th><th>说明</th></tr></thead><tbody><tr><td>-name</td><td>指定文件名，支持通配符<code>*</code>和<code>?</code></td></tr><tr><td>-user</td><td>指定属主</td></tr><tr><td>-type</td><td>指定类型</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 按扩展名查找文件</span></span>
<span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> /home</span><span style="color:#91CBFF;"> -name</span><span style="color:#ADDCFF;"> &quot;*.txt&quot;</span></span></code></pre></div><p>在不区分大小写的模式下，查找与给定名称匹配的目录</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 语法</span></span>
<span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> root_path</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> d</span><span style="color:#91CBFF;"> -iname</span><span style="color:#ADDCFF;"> &#39;*lib*&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 示例</span></span>
<span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> /home</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> d</span><span style="color:#91CBFF;"> -name</span><span style="color:#ADDCFF;"> &quot;*service*&quot;</span></span></code></pre></div><p>通过匹配多个模式查找文件</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 语法</span></span>
<span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> root_path</span><span style="color:#91CBFF;"> -name</span><span style="color:#ADDCFF;"> &#39;*pattern_1*&#39;</span><span style="color:#91CBFF;"> -or</span><span style="color:#91CBFF;"> -name</span><span style="color:#ADDCFF;"> &#39;*pattern_2*&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 示例</span></span>
<span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -name</span><span style="color:#ADDCFF;"> &quot;*.txt&quot;</span><span style="color:#91CBFF;"> -o</span><span style="color:#91CBFF;"> -name</span><span style="color:#ADDCFF;"> &quot;*.pdf&quot;</span></span></code></pre></div><p>查找与路径模式匹配的文件</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 语法</span></span>
<span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> root_path</span><span style="color:#91CBFF;"> -path</span><span style="color:#ADDCFF;"> &#39;**/lib/**/*.ext&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 示例</span></span>
<span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> /usr/</span><span style="color:#91CBFF;"> -path</span><span style="color:#ADDCFF;"> &quot;*local*&quot;</span></span></code></pre></div><p>查找与给定大小范围匹配的文件:</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> root_path</span><span style="color:#91CBFF;"> -size</span><span style="color:#ADDCFF;"> +500k</span><span style="color:#91CBFF;"> -size</span><span style="color:#91CBFF;"> -10M</span></span></code></pre></div><p>找到最近7天修改过的文件，并删除它们:</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> root_path</span><span style="color:#91CBFF;"> -mtime</span><span style="color:#91CBFF;"> -7</span><span style="color:#91CBFF;"> -delete</span></span></code></pre></div><p>根据文件类型进行搜索</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> 类型参数</span></span></code></pre></div><p>类型参数列表：</p><ul><li><code>f</code>普通文件</li><li><code>l</code>符号连接</li><li><code>d</code>目录</li><li><code>c</code>字符设备</li><li><code>b</code>块设备</li><li><code>s</code>套接字</li><li><code>p\`\`Fifo</code></li></ul><p>根据文件时间戳进行搜索</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> f</span><span style="color:#ADDCFF;"> 时间戳</span></span></code></pre></div><p>UNIX/Linux 文件系统每个文件都有三种时间戳：</p><ul><li>访问时间（<code>-atime</code>/天，<code>-amin</code>/分钟）：用户最近一次访问时间。</li><li>修改时间（<code>-mtime</code>/天，<code>-mmin</code>/分钟）：文件最后一次修改时间。</li><li>变化时间（<code>-ctime</code>/天，<code>-cmin</code>/分钟）：文件数据元（例如权限等）最后一次修改时间。</li></ul><p>搜索最近七天内被访问过的所有文件</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> f</span><span style="color:#91CBFF;"> -atime</span><span style="color:#91CBFF;"> -7</span></span></code></pre></div><p>搜索恰好在七天前被访问过的所有文件</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> f</span><span style="color:#91CBFF;"> -atime</span><span style="color:#91CBFF;"> 7</span></span></code></pre></div><p>搜索超过七天内被访问过的所有文件</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> f</span><span style="color:#91CBFF;"> -atime</span><span style="color:#ADDCFF;"> +7</span></span></code></pre></div><p>搜索访问时间超过10分钟的所有文件</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> f</span><span style="color:#91CBFF;"> -amin</span><span style="color:#ADDCFF;"> +10</span></span></code></pre></div><p>找出比<code>file.log</code>修改时间更长的所有文件</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">find</span><span style="color:#ADDCFF;"> .</span><span style="color:#91CBFF;"> -type</span><span style="color:#ADDCFF;"> f</span><span style="color:#91CBFF;"> -newer</span><span style="color:#ADDCFF;"> file.log</span></span></code></pre></div>`,110)]))}const F=l(n,[["render",e],["__file","Linux文件目录相关命令.html.vue"]]),i=JSON.parse('{"path":"/linux/linux%E5%9F%BA%E7%A1%80/Linux%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html","title":"Linux文件目录相关命令","lang":"zh-CN","frontmatter":{"title":"Linux文件目录相关命令","date":"2024-02-15T00:00:00.000Z","tags":"linux基础","categories":"linux","order":3,"description":"cd：切换目录 cd(change directory)：更改当前所处的工作目录，路径可以是绝对路径，也可以是相对路径，若省略不写则会跳转至当前登录者的家目‍录。 cd命令后面可以跟一些特殊符号，表达固定的含义： pwd：显示当前路径 pwd(Print Working Directory)（打印工作目录）：显示用户当前所处的工作目录的绝对路径。 注意...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/linux/linux%E5%9F%BA%E7%A1%80/Linux%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:title","content":"Linux文件目录相关命令"}],["meta",{"property":"og:description","content":"cd：切换目录 cd(change directory)：更改当前所处的工作目录，路径可以是绝对路径，也可以是相对路径，若省略不写则会跳转至当前登录者的家目‍录。 cd命令后面可以跟一些特殊符号，表达固定的含义： pwd：显示当前路径 pwd(Print Working Directory)（打印工作目录）：显示用户当前所处的工作目录的绝对路径。 注意..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T05:57:00.000Z"}],["meta",{"property":"article:published_time","content":"2024-02-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T05:57:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux文件目录相关命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T05:57:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"cd：切换目录","slug":"cd-切换目录","link":"#cd-切换目录","children":[]},{"level":2,"title":"pwd：显示当前路径","slug":"pwd-显示当前路径","link":"#pwd-显示当前路径","children":[]},{"level":2,"title":"ls：查看目录下文件","slug":"ls-查看目录下文件","link":"#ls-查看目录下文件","children":[]},{"level":2,"title":"mkdir：创建目录","slug":"mkdir-创建目录","link":"#mkdir-创建目录","children":[]},{"level":2,"title":"rmdir：删除空目录","slug":"rmdir-删除空目录","link":"#rmdir-删除空目录","children":[]},{"level":2,"title":"touch：创建文件及修改文件时间戳","slug":"touch-创建文件及修改文件时间戳","link":"#touch-创建文件及修改文件时间戳","children":[]},{"level":2,"title":"cp：复制文件或目录","slug":"cp-复制文件或目录","link":"#cp-复制文件或目录","children":[]},{"level":2,"title":"rm：删除文件或目录","slug":"rm-删除文件或目录","link":"#rm-删除文件或目录","children":[]},{"level":2,"title":"mv：移动文件或改名","slug":"mv-移动文件或改名","link":"#mv-移动文件或改名","children":[]},{"level":2,"title":"find：查找命令","slug":"find-查找命令","link":"#find-查找命令","children":[]}],"git":{"createdTime":1723619297000,"updatedTime":1726034220000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":13.8,"words":4141},"filePathRelative":"linux/linux基础/Linux文件目录相关命令.md","localizedDate":"2024年2月15日","autoDesc":true}');export{F as comp,i as data};
