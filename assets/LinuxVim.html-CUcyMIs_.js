import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as a,o as d}from"./app-Coac0FJ0.js";const i="/wsq-blog/assets/1-Bb5GG2_4.jpg",n={};function r(s,t){return d(),l("div",null,t[0]||(t[0]=[a('<h1 id="vim三种工作模式" tabindex="-1"><a class="header-anchor" href="#vim三种工作模式"><span>Vim三种工作模式</span></a></h1><p>使用 Vim 编辑文件时，存在 3 种工作模式，分别是命令模式、输入模式和编辑模式，这 3 种工作模式可随意切换。</p><figure><img src="'+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="命令模式" tabindex="-1"><a class="header-anchor" href="#命令模式"><span>命令模式</span></a></h2><p>使用 Vim 编辑文件时，默认处于命令模式。此模式下，可使用方向键（上、下、左、右键）或<code>k、j、h、i</code>移动光标的位置，还可以对文件内容进行复制、粘贴、替换、删除等操作。</p><h2 id="输入模式" tabindex="-1"><a class="header-anchor" href="#输入模式"><span>输入模式</span></a></h2><p>在输入模式下，Vim 可以对文件执行写操作。</p><p>使 Vim 进行输入模式的方式是在命令模式状态下输入<code>i、I、a、A、o、O</code>等插入命令，当编辑文件完成后按 Esc 键即可返回命令模式。</p><h2 id="编辑模式" tabindex="-1"><a class="header-anchor" href="#编辑模式"><span>编辑模式</span></a></h2><p>编辑模式用于对文件中的指定内容执行保存、查找或替换等操作。</p><p>使 Vim 切换到编辑模式的方法是在命令模式状态下按<code>:</code>键，此时 Vim 窗口的左下方出现一个<code>:</code>符号，这是就可以输入相关指令进行操作了。</p><p>指令执行后 Vim 会自动返回命令模式。如想直接返回命令模式，按 Esc 即可。</p><h1 id="vim基本操作" tabindex="-1"><a class="header-anchor" href="#vim基本操作"><span>Vim基本操作</span></a></h1><h2 id="打开文件" tabindex="-1"><a class="header-anchor" href="#打开文件"><span>打开文件</span></a></h2><p>使用 Vim 打开文件很简单，例如在命令行模式下打开一个自己编写的文件<code>/test/vi.test</code>，打开方法如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>[root@itxdl ~]# vim /test/vi.test</span></span></code></pre></div><p>刚打开文件时 Vim 处于命令模式，此时文件的下方会显示文件的一些信息，包括文件的总行数和字符数，以及当前光标所在的位置等，此时可以使用插入命令进入输入模式对文件进行编辑。</p><h2 id="使用-vim-进行编辑" tabindex="-1"><a class="header-anchor" href="#使用-vim-进行编辑"><span>使用 Vim 进行编辑</span></a></h2><p>同样，Vim 提供了大量的编辑快捷键，主要可分为以下几类。</p><h3 id="插入文本" tabindex="-1"><a class="header-anchor" href="#插入文本"><span>插入文本</span></a></h3><p>从命令模式进入输入模式进行编辑，可以按下<code>I、i、O、o、A、a</code>等键来完成，使用不同的键，光标所处的位置不同。</p><table><thead><tr><th style="text-align:center;">快捷键</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">i</td><td style="text-align:left;">在当前光标所在位置插入随后输入的文本，光标后的文本相应向右移动</td></tr><tr><td style="text-align:center;">I</td><td style="text-align:left;">在光标所在行的行首插入随后输入的文本，行首是该行的第一个非空白字符，相当于光标移动到行首执行 i 命令</td></tr><tr><td style="text-align:center;">o</td><td style="text-align:left;">在光标所在行的下面插入新的一行。光标停在空行首，等待输入文本</td></tr><tr><td style="text-align:center;">O</td><td style="text-align:left;">在光标所在行的上面插入新的一行。光标停在空行的行首，等待输入文本</td></tr><tr><td style="text-align:center;">a</td><td style="text-align:left;">在当前光标所在位置之后插入随后输入的文本</td></tr><tr><td style="text-align:center;">A</td><td style="text-align:left;">在光标所在行的行尾插入随后输入的文本，相当于光标移动到行尾再执行a命令</td></tr></tbody></table><h3 id="查找文本" tabindex="-1"><a class="header-anchor" href="#查找文本"><span>查找文本</span></a></h3><table><thead><tr><th style="text-align:center;">快捷键</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">/abc</td><td style="text-align:left;">从光标所在位置向前查找字符串 abc</td></tr><tr><td style="text-align:center;">/^abc</td><td style="text-align:left;">查找以 abc 为行首的行</td></tr><tr><td style="text-align:center;">/abc$</td><td style="text-align:left;">查找以 abc 为行尾的行</td></tr><tr><td style="text-align:center;">?abc</td><td style="text-align:left;">从光标所在位置向后查找字符串 abc</td></tr><tr><td style="text-align:center;">n</td><td style="text-align:left;">向同一方向重复上次的查找指令</td></tr><tr><td style="text-align:center;">N</td><td style="text-align:left;">向相反方向重复上次的查找指定</td></tr></tbody></table><p>如果在文件中并没有找到所要查找的字符串，则在文件底部会出现<code>Pattern not found</code>提示。</p><p>在查找过程中需要注意的是，要查找的字符串是严格区分大小写的。如果想忽略大小写，则输入命令<code>:set ic</code>；调整回来输入<code>:set noic</code>。</p><p>如果在字符串中出现特殊符号，则需要加上转义字符<code>\\</code>。常见的特殊符号有<code>\\、*、?、$</code>等。如果出现这些字符，例如，要查找字符串<code>10$</code>，则需要在命令模式中输入<code>/10\\$</code>。</p><h3 id="替换文本" tabindex="-1"><a class="header-anchor" href="#替换文本"><span>替换文本</span></a></h3><table><thead><tr><th style="text-align:center;">快捷键</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">r</td><td style="text-align:left;">替换光标所在位置的字符</td></tr><tr><td style="text-align:center;">R</td><td style="text-align:left;">从光标所在位置开始替换字符，其输入内容会覆盖掉后面等长的文本内容，按“Esc”可以结束</td></tr><tr><td style="text-align:center;">😒/a1/a2/g</td><td style="text-align:left;">将当前光标所在行中的所有 a1 用 a2 替换</td></tr><tr><td style="text-align:center;">:n1,n2s/a1/a2/g</td><td style="text-align:left;">将文件中 n1 到 n2 行中所有 a1 都用 a2 替换</td></tr><tr><td style="text-align:center;">:g/a1/a2/g</td><td style="text-align:left;">将文件中所有的 a1 都用 a2 替换</td></tr></tbody></table><p>例如，要将某文件中所有的<code>root</code>替换为<code>liudehua</code>，则有两种输入命令，分别为：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>:1, $s/root/liudehua/g</span></span>
<span class="line"><span>或</span></span>
<span class="line"><span>:%s/root/liudehua/g</span></span></code></pre></div><p>上述命令是在编辑模式下操作的，表示的是从第一行到最后一行，即全文查找<code>root</code>，然后替换成<code>liudehua</code>。</p><p>如果刚才的命令变成<code>:10,20 s/root/liudehua/g</code>，则只替换从第 10 行到第 20 行的<code>root</code>。</p><h3 id="删除文本" tabindex="-1"><a class="header-anchor" href="#删除文本"><span>删除文本</span></a></h3><table><thead><tr><th style="text-align:center;">快捷键</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">x</td><td style="text-align:left;">删除光标所在位置的字符</td></tr><tr><td style="text-align:center;">dd</td><td style="text-align:left;">删除光标所在行</td></tr><tr><td style="text-align:center;">ndd</td><td style="text-align:left;">删除当前行（包括此行）后 n 行文本</td></tr><tr><td style="text-align:center;">dG</td><td style="text-align:left;">删除光标所在行一直到文件末尾的所有内容</td></tr><tr><td style="text-align:center;">D</td><td style="text-align:left;">删除光标位置到行尾的内容</td></tr><tr><td style="text-align:center;">:a1,a2d</td><td style="text-align:left;">函数从 a1 行到 a2 行的文本内容</td></tr></tbody></table><p>注意，被删除的内容并没有真正删除，都放在了剪贴板中。将光标移动到指定位置处，按下 &quot;p&quot; 键，就可以将刚才删除的内容又粘贴到此处。</p><h3 id="复制和粘贴文本" tabindex="-1"><a class="header-anchor" href="#复制和粘贴文本"><span>复制和粘贴文本</span></a></h3><table><thead><tr><th style="text-align:center;">快捷键</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">p</td><td style="text-align:left;">将剪贴板中的内容粘贴到光标后</td></tr><tr><td style="text-align:center;">P</td><td style="text-align:left;">将剪贴板中的内容粘贴到光标前</td></tr><tr><td style="text-align:center;">y</td><td style="text-align:left;">复制已选中的文本到剪贴板</td></tr><tr><td style="text-align:center;">yy</td><td style="text-align:left;">将光标所在行复制到剪贴板，此命令前可以加数字 n，可复制多行</td></tr><tr><td style="text-align:center;">yw</td><td style="text-align:left;">将光标位置的单词复制到剪贴板</td></tr></tbody></table><h2 id="保存退出文本" tabindex="-1"><a class="header-anchor" href="#保存退出文本"><span>保存退出文本</span></a></h2><p>Vim 的保存和退出是在编辑模式中进行的，其常用命令：</p><table><thead><tr><th style="text-align:center;">命令</th><th style="text-align:left;">功能描述</th></tr></thead><tbody><tr><td style="text-align:center;">:wq</td><td style="text-align:left;">保存并退出 Vim 编辑器</td></tr><tr><td style="text-align:center;">:wq!</td><td style="text-align:left;">保存并强制退出 Vim 编辑器</td></tr><tr><td style="text-align:center;">:q</td><td style="text-align:left;">不保存就退出 Vim 编辑器</td></tr><tr><td style="text-align:center;">:q!</td><td style="text-align:left;">不保存，且强制退出 Vim 编辑器</td></tr><tr><td style="text-align:center;">:w</td><td style="text-align:left;">保存但是不退出 Vim 编辑器</td></tr><tr><td style="text-align:center;">:w!</td><td style="text-align:left;">强制保存文本</td></tr><tr><td style="text-align:center;">:w filename</td><td style="text-align:left;">另存到 filename 文件</td></tr><tr><td style="text-align:center;">x!</td><td style="text-align:left;">保存文本，并退出 Vim 编辑器，更通用的一个 vim 命令</td></tr><tr><td style="text-align:center;">ZZ</td><td style="text-align:left;">直接退出 Vim 编辑器</td></tr></tbody></table><h1 id="撤销和恢复" tabindex="-1"><a class="header-anchor" href="#撤销和恢复"><span>撤销和恢复</span></a></h1><table><thead><tr><th style="text-align:center;">快捷键</th><th style="text-align:left;">功能</th></tr></thead><tbody><tr><td style="text-align:center;">u（小写）</td><td style="text-align:left;">undo 的第 1 个字母，功能是撤销最近一次对文本做的修改操作。</td></tr><tr><td style="text-align:center;">Ctrl+R</td><td style="text-align:left;">Redo 的第 1 个字母，功能是恢复最近一次所做的撤销操作。</td></tr><tr><td style="text-align:center;">U（大写）</td><td style="text-align:left;">第一次会撤销对一行文本（光标所在行）做过的全部操作，第二次使用该命令会恢复对该行文本做过的所有操作。</td></tr></tbody></table><h1 id="多窗口编辑模式" tabindex="-1"><a class="header-anchor" href="#多窗口编辑模式"><span>多窗口编辑模式</span></a></h1><p>在编辑文件时，有时需要参考另一个文件，如果在两个文件之间进行切换则比较麻烦。可以使用 Vim 同时打开两个文件，每个文件分别占用一个窗口。</p><p>例如，在査看<code>/etc/passwd</code>时需要参考<code>/etc/shadow</code>，有两种办法可以实现：</p><ul><li>先使用 Vim 打开第一个文件，接着输入命令<code>:sp/etc/shadow</code>水平切分窗口，然后按回车键；如果想垂直切分窗口则可以输入<code>:vs/etc/shadow</code>;</li><li>可以直接执行命令<code>vim -o 第一个文件名 第二个文件名</code>，也就是<code>vim -o /etc/passwd /etc/shadow</code>。</li></ul><p>切换到另一个文件窗口，可以按<code>Ctrl+WW</code>快捷键。</p>`,48)]))}const h=e(n,[["render",r],["__file","LinuxVim.html.vue"]]),g=JSON.parse('{"path":"/linux/linux%E5%9F%BA%E7%A1%80/LinuxVim.html","title":"LinuxVim","lang":"zh-CN","frontmatter":{"title":"LinuxVim","date":"2024-04-20T00:00:00.000Z","tags":"linux基础","categories":"linux","order":16,"description":"Vim三种工作模式 使用 Vim 编辑文件时，存在 3 种工作模式，分别是命令模式、输入模式和编辑模式，这 3 种工作模式可随意切换。 命令模式 使用 Vim 编辑文件时，默认处于命令模式。此模式下，可使用方向键（上、下、左、右键）或k、j、h、i移动光标的位置，还可以对文件内容进行复制、粘贴、替换、删除等操作。 输入模式 在输入模式下，Vim 可以对...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/linux/linux%E5%9F%BA%E7%A1%80/LinuxVim.html"}],["meta",{"property":"og:title","content":"LinuxVim"}],["meta",{"property":"og:description","content":"Vim三种工作模式 使用 Vim 编辑文件时，存在 3 种工作模式，分别是命令模式、输入模式和编辑模式，这 3 种工作模式可随意切换。 命令模式 使用 Vim 编辑文件时，默认处于命令模式。此模式下，可使用方向键（上、下、左、右键）或k、j、h、i移动光标的位置，还可以对文件内容进行复制、粘贴、替换、删除等操作。 输入模式 在输入模式下，Vim 可以对..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T05:57:00.000Z"}],["meta",{"property":"article:published_time","content":"2024-04-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T05:57:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LinuxVim\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T05:57:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"命令模式","slug":"命令模式","link":"#命令模式","children":[]},{"level":2,"title":"输入模式","slug":"输入模式","link":"#输入模式","children":[]},{"level":2,"title":"编辑模式","slug":"编辑模式","link":"#编辑模式","children":[]},{"level":2,"title":"打开文件","slug":"打开文件","link":"#打开文件","children":[]},{"level":2,"title":"使用 Vim 进行编辑","slug":"使用-vim-进行编辑","link":"#使用-vim-进行编辑","children":[{"level":3,"title":"插入文本","slug":"插入文本","link":"#插入文本","children":[]},{"level":3,"title":"查找文本","slug":"查找文本","link":"#查找文本","children":[]},{"level":3,"title":"替换文本","slug":"替换文本","link":"#替换文本","children":[]},{"level":3,"title":"删除文本","slug":"删除文本","link":"#删除文本","children":[]},{"level":3,"title":"复制和粘贴文本","slug":"复制和粘贴文本","link":"#复制和粘贴文本","children":[]}]},{"level":2,"title":"保存退出文本","slug":"保存退出文本","link":"#保存退出文本","children":[]}],"git":{"createdTime":1726034220000,"updatedTime":1726034220000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":6.17,"words":1852},"filePathRelative":"linux/linux基础/LinuxVim.md","localizedDate":"2024年4月20日","autoDesc":true}');export{h as comp,g as data};
