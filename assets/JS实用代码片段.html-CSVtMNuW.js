import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,d as l,o as n}from"./app-BAoNGAQX.js";const p={};function F(t,s){return n(),o("div",null,s[0]||(s[0]=[l(`<p>检测数组是否包含任何重复项</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> hasDuplicates</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">array</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> Set</span><span style="color:#F0F3F6;">(array).size </span><span style="color:#FF9492;">!==</span><span style="color:#F0F3F6;"> array.</span><span style="color:#91CBFF;">length</span></span></code></pre></div><p>快速确定数组是否包含特定值</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#91CBFF;"> hasValue</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> arr.</span><span style="color:#DBB7FF;">includes</span><span style="color:#F0F3F6;">(value)</span></span></code></pre></div><p>将字符串的首字母转换为大写</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#91CBFF;"> capitalized</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> str.</span><span style="color:#DBB7FF;">charAt</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">toUpperCase</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">+</span><span style="color:#F0F3F6;"> str.</span><span style="color:#DBB7FF;">slice</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>交换两个变量的值</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">let</span><span style="color:#F0F3F6;"> a </span><span style="color:#FF9492;">=</span><span style="color:#91CBFF;"> 1</span><span style="color:#F0F3F6;">, b </span><span style="color:#FF9492;">=</span><span style="color:#91CBFF;"> 2</span></span>
<span class="line"><span style="color:#F0F3F6;">[b, a] </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> [a, b]</span></span></code></pre></div><p>将任何字符串转换为驼峰式大小写格式</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#91CBFF;"> str</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &#39;hello world&#39;</span></span>
<span class="line"><span style="color:#FF9492;">const</span><span style="color:#91CBFF;"> camelCase</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> str.</span><span style="color:#DBB7FF;">replace</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">/</span><span style="color:#91CBFF;">\\s</span><span style="color:#ADDCFF;">(</span><span style="color:#91CBFF;">.</span><span style="color:#ADDCFF;">)/</span><span style="color:#FF9492;">g</span><span style="color:#F0F3F6;">, (</span><span style="color:#FFB757;">$1</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> $1.</span><span style="color:#DBB7FF;">toUpperCase</span><span style="color:#F0F3F6;">()).</span><span style="color:#DBB7FF;">replace</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">/</span><span style="color:#91CBFF;">\\s</span><span style="color:#ADDCFF;">/</span><span style="color:#FF9492;">g</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">replace</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">/</span><span style="color:#FF9492;">^</span><span style="color:#ADDCFF;">(</span><span style="color:#91CBFF;">.</span><span style="color:#ADDCFF;">)/</span><span style="color:#F0F3F6;">, (</span><span style="color:#FFB757;">$1</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> $1.</span><span style="color:#DBB7FF;">toLowerCase</span><span style="color:#F0F3F6;">())</span></span>
<span class="line"><span style="color:#F0F3F6;">console.</span><span style="color:#DBB7FF;">log</span><span style="color:#F0F3F6;">(camelCase); </span><span style="color:#BDC4CC;">// &quot;helloWorld&quot;</span></span></code></pre></div><p>查找数组中的最大值</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> maxNumber</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">arr</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> Math.</span><span style="color:#DBB7FF;">max</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">...</span><span style="color:#F0F3F6;">arr)</span></span></code></pre></div><p>检查字符串是否为回文</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> isPalindrome</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">str</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> str </span><span style="color:#FF9492;">===</span><span style="color:#F0F3F6;"> str.</span><span style="color:#DBB7FF;">split</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">reverse</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">join</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>从数组中删除重复项</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> uniqueArray</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">arr</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> [</span><span style="color:#FF9492;">...new</span><span style="color:#DBB7FF;"> Set</span><span style="color:#F0F3F6;">(arr)]</span></span></code></pre></div><p>生成随机十六进制颜色</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> randomHexColor</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> () </span><span style="color:#FF9492;">=&gt;</span><span style="color:#ADDCFF;"> \`#\${</span><span style="color:#F0F3F6;">Math</span><span style="color:#ADDCFF;">.</span><span style="color:#DBB7FF;">floor</span><span style="color:#ADDCFF;">(</span><span style="color:#F0F3F6;">Math</span><span style="color:#ADDCFF;">.</span><span style="color:#DBB7FF;">random</span><span style="color:#ADDCFF;">()</span><span style="color:#FF9492;">*</span><span style="color:#91CBFF;">16777215</span><span style="color:#ADDCFF;">).</span><span style="color:#DBB7FF;">toString</span><span style="color:#ADDCFF;">(</span><span style="color:#91CBFF;">16</span><span style="color:#ADDCFF;">)</span><span style="color:#ADDCFF;">}\`</span></span></code></pre></div><p>展平数组</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> flattenArray</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">arr</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> arr.</span><span style="color:#DBB7FF;">flat</span><span style="color:#F0F3F6;">()</span></span></code></pre></div><p>将字符串中每个单词的首字母大写</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> capitalizeWords</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">str</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> str.</span><span style="color:#DBB7FF;">replace</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">/</span><span style="color:#FF9492;">\\b</span><span style="color:#91CBFF;">\\w</span><span style="color:#ADDCFF;">/</span><span style="color:#FF9492;">g</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">char</span><span style="color:#FF9492;"> =&gt;</span><span style="color:#F0F3F6;"> char.</span><span style="color:#DBB7FF;">toUpperCase</span><span style="color:#F0F3F6;">())</span></span></code></pre></div><p>查找两个数组的交集</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> arrayIntersection</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">arr1</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">arr2</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> arr1.</span><span style="color:#DBB7FF;">filter</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">value</span><span style="color:#FF9492;"> =&gt;</span><span style="color:#F0F3F6;"> arr2.</span><span style="color:#DBB7FF;">includes</span><span style="color:#F0F3F6;">(value))</span></span></code></pre></div><p>获取数组中的最后一项</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> getLastItem</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">arr</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> arr.</span><span style="color:#DBB7FF;">slice</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">-</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">)[</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">]</span></span></code></pre></div><p>计算数组中某个值的出现次数</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> countOccurrences</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">arr</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">value</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> arr.</span><span style="color:#DBB7FF;">reduce</span><span style="color:#F0F3F6;">((</span><span style="color:#FFB757;">acc</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">cur</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> (cur </span><span style="color:#FF9492;">===</span><span style="color:#F0F3F6;"> value </span><span style="color:#FF9492;">?</span><span style="color:#F0F3F6;"> acc </span><span style="color:#FF9492;">+</span><span style="color:#91CBFF;"> 1</span><span style="color:#FF9492;"> :</span><span style="color:#F0F3F6;"> acc), </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>反转字符串</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> reverseString</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">str</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> str.</span><span style="color:#DBB7FF;">split</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">reverse</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">join</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>从数组中删除假值</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> removeFalsyValues</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">arr</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> arr.</span><span style="color:#DBB7FF;">filter</span><span style="color:#F0F3F6;">(Boolean)</span></span></code></pre></div><p>计算数字的阶乘</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> factorial</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">num</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> num </span><span style="color:#FF9492;">&lt;=</span><span style="color:#91CBFF;"> 1</span><span style="color:#FF9492;"> ?</span><span style="color:#91CBFF;"> 1</span><span style="color:#FF9492;"> :</span><span style="color:#F0F3F6;"> num </span><span style="color:#FF9492;">*</span><span style="color:#DBB7FF;"> factorial</span><span style="color:#F0F3F6;">(num </span><span style="color:#FF9492;">-</span><span style="color:#91CBFF;"> 1</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>检查对象是否为空</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> isObjectEmpty</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">obj</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> Object.</span><span style="color:#DBB7FF;">keys</span><span style="color:#F0F3F6;">(obj).</span><span style="color:#91CBFF;">length</span><span style="color:#FF9492;"> ===</span><span style="color:#91CBFF;"> 0</span></span></code></pre></div><p>深度克隆对象</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> deepClone</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">obj</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#91CBFF;"> JSON</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">parse</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">JSON</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">stringify</span><span style="color:#F0F3F6;">(obj))</span></span></code></pre></div><p>将 rgba 转换为十六进制</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> rgbaToHex</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">r</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">g</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">b</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#ADDCFF;"> &quot;#&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> [r, g, b].</span><span style="color:#DBB7FF;">map</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">num</span><span style="color:#FF9492;"> =&gt;</span><span style="color:#DBB7FF;"> parseInt</span><span style="color:#F0F3F6;">(num).</span><span style="color:#DBB7FF;">toString</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">16</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">padStart</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">2</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;0&#39;</span><span style="color:#F0F3F6;">)).</span><span style="color:#DBB7FF;">join</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#DBB7FF;">rgbaToHex</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;"> ,</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">// #000000</span></span>
<span class="line"><span style="color:#DBB7FF;">rgbaToHex</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">255</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">127</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">//#ff007f</span></span></code></pre></div><p>将十六进制转换为 rgba</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> hexToRgba</span><span style="color:#FF9492;"> =</span><span style="color:#FFB757;"> hex</span><span style="color:#FF9492;"> =&gt;</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    const</span><span style="color:#F0F3F6;"> [</span><span style="color:#91CBFF;">r</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">g</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">b</span><span style="color:#F0F3F6;">] </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> hex.</span><span style="color:#DBB7FF;">match</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">/</span><span style="color:#91CBFF;">\\w\\w</span><span style="color:#ADDCFF;">/</span><span style="color:#FF9492;">g</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">map</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">val</span><span style="color:#FF9492;"> =&gt;</span><span style="color:#DBB7FF;"> parseInt</span><span style="color:#F0F3F6;">(val, </span><span style="color:#91CBFF;">16</span><span style="color:#F0F3F6;">))</span></span>
<span class="line"><span style="color:#FF9492;">		return</span><span style="color:#ADDCFF;"> \`rgba(\${</span><span style="color:#F0F3F6;">r</span><span style="color:#ADDCFF;">}, \${</span><span style="color:#F0F3F6;">g</span><span style="color:#ADDCFF;">}, \${</span><span style="color:#F0F3F6;">b</span><span style="color:#ADDCFF;">}, 1)\`</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"><span style="color:#DBB7FF;">hexToRgba</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;#000000&#39;</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">// rgba(0, 0, 0, 1)</span></span>
<span class="line"><span style="color:#DBB7FF;">hexToRgba</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;#ff007f&#39;</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">// rgba(255, 0, 127, 1)</span></span></code></pre></div><p>获取多个数字的平均值</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> average</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FF9492;">...</span><span style="color:#FFB757;">args</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> args.</span><span style="color:#DBB7FF;">reduce</span><span style="color:#F0F3F6;">((</span><span style="color:#FFB757;">a</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">b</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> a </span><span style="color:#FF9492;">+</span><span style="color:#F0F3F6;"> b, </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">/</span><span style="color:#F0F3F6;"> args.</span><span style="color:#91CBFF;">length</span></span>
<span class="line"><span style="color:#DBB7FF;">average</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">2</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">-</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">9</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">10</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">// 3.5</span></span></code></pre></div><p>获取两个整数之间的随机整数</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> random</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> (</span><span style="color:#FFB757;">min</span><span style="color:#F0F3F6;">, </span><span style="color:#FFB757;">max</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> Math.</span><span style="color:#DBB7FF;">floor</span><span style="color:#F0F3F6;">(Math.</span><span style="color:#DBB7FF;">random</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">*</span><span style="color:#F0F3F6;"> (max </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;"> min </span><span style="color:#FF9492;">+</span><span style="color:#91CBFF;"> 1</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">+</span><span style="color:#F0F3F6;"> min)</span></span>
<span class="line"><span style="color:#DBB7FF;">random</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">100</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">// 27</span></span>
<span class="line"><span style="color:#DBB7FF;">random</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">100</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">// 84</span></span>
<span class="line"><span style="color:#DBB7FF;">random</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">100</span><span style="color:#F0F3F6;">) </span><span style="color:#BDC4CC;">// 55</span></span></code></pre></div><p>清除所有 cookie</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#91CBFF;"> clearCookies</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> document.cookie.</span><span style="color:#DBB7FF;">split</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;;&#39;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">forEach</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">cookie</span><span style="color:#FF9492;"> =&gt;</span><span style="color:#F0F3F6;"> document.cookie </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> cookie.</span><span style="color:#DBB7FF;">replace</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">/</span><span style="color:#FF9492;">^</span><span style="color:#FF9492;"> +</span><span style="color:#ADDCFF;">/</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">replace</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">/=</span><span style="color:#91CBFF;">.</span><span style="color:#FF9492;">*</span><span style="color:#ADDCFF;">/</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">\`=;expires=\${</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> Date</span><span style="color:#ADDCFF;">(</span><span style="color:#91CBFF;">0</span><span style="color:#ADDCFF;">).</span><span style="color:#DBB7FF;">toUTCString</span><span style="color:#ADDCFF;">()</span><span style="color:#ADDCFF;">};path=/\`</span><span style="color:#F0F3F6;">))</span></span></code></pre></div><p>滚动到页面顶部</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> goToTop</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> () </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> window.</span><span style="color:#DBB7FF;">scrollTo</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#DBB7FF;">goToTop</span><span style="color:#F0F3F6;">()</span></span></code></pre></div><p>随机 IP</p><div class="language-js" data-highlighter="shiki" data-ext="js" data-title="js" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">const</span><span style="color:#DBB7FF;"> generateRandomIP</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> () </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#F0F3F6;"> Array.</span><span style="color:#DBB7FF;">from</span><span style="color:#F0F3F6;">({length: </span><span style="color:#91CBFF;">4</span><span style="color:#F0F3F6;">}, () </span><span style="color:#FF9492;">=&gt;</span><span style="color:#F0F3F6;"> Math.</span><span style="color:#DBB7FF;">floor</span><span style="color:#F0F3F6;">(Math.</span><span style="color:#DBB7FF;">random</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">*</span><span style="color:#91CBFF;"> 256</span><span style="color:#F0F3F6;">)).</span><span style="color:#DBB7FF;">join</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;.&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBB7FF;">generateRandomIP</span><span style="color:#F0F3F6;">() </span><span style="color:#BDC4CC;">// 220.187.184.113</span></span>
<span class="line"><span style="color:#DBB7FF;">generateRandomIP</span><span style="color:#F0F3F6;">() </span><span style="color:#BDC4CC;">// 254.24.179.151</span></span></code></pre></div>`,52)]))}const r=a(p,[["render",F],["__file","JS实用代码片段.html.vue"]]),y=JSON.parse('{"path":"/js/%E5%9F%BA%E7%A1%80/JS%E5%AE%9E%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html","title":"","lang":"zh-CN","frontmatter":{"description":"检测数组是否包含任何重复项 快速确定数组是否包含特定值 将字符串的首字母转换为大写 交换两个变量的值 将任何字符串转换为驼峰式大小写格式 查找数组中的最大值 检查字符串是否为回文 从数组中删除重复项 生成随机十六进制颜色 展平数组 将字符串中每个单词的首字母大写 查找两个数组的交集 获取数组中的最后一项 计算数组中某个值的出现次数 反转字符串 从数组中...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/js/%E5%9F%BA%E7%A1%80/JS%E5%AE%9E%E7%94%A8%E4%BB%A3%E7%A0%81%E7%89%87%E6%AE%B5.html"}],["meta",{"property":"og:description","content":"检测数组是否包含任何重复项 快速确定数组是否包含特定值 将字符串的首字母转换为大写 交换两个变量的值 将任何字符串转换为驼峰式大小写格式 查找数组中的最大值 检查字符串是否为回文 从数组中删除重复项 生成随机十六进制颜色 展平数组 将字符串中每个单词的首字母大写 查找两个数组的交集 获取数组中的最后一项 计算数组中某个值的出现次数 反转字符串 从数组中..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T05:57:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T05:57:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-11T05:57:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[],"git":{"createdTime":1726034220000,"updatedTime":1726034220000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":1.93,"words":578},"filePathRelative":"js/基础/JS实用代码片段.md","localizedDate":"2024年9月11日","autoDesc":true}');export{r as comp,y as data};
