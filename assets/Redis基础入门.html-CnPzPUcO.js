import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as t}from"./app-BAoNGAQX.js";const n={};function o(d,s){return t(),a("div",null,s[0]||(s[0]=[l(`<h2 id="redis是什么" tabindex="-1"><a class="header-anchor" href="#redis是什么"><span>Redis是什么</span></a></h2><p><a href="https://redis.io/" target="_blank" rel="noopener noreferrer">Redis</a> 全称 Remote Dictionary Server（即远程字典服务），它是一个基于内存实现的键值型非关系（NoSQL）数据库，由意大利人 Salvatore Sanfilippo 使用 C 语言编写。</p><p>与 SQL 型数据库截然不同，Redis 没有提供新建数据库的操作，因为它自带了 16（0—15）个数据库（默认使用 0 库）。在同一个库中，<code>key</code>是唯一存在的、不允许重复的，它就像一把“密钥”，只能打开一把“锁”。键值存储的本质就是使用<code>key</code>来标识<code>value</code>，当想要检索<code>value</code>时，必须使用与<code>value</code>相对应的<code>key</code>进行查找。</p><h2 id="redis架构" tabindex="-1"><a class="header-anchor" href="#redis架构"><span>Redis架构</span></a></h2><p>Redis体系架构主要分为两个部分：</p><ul><li>Redis服务端</li><li>Redis客户端</li></ul><p>客户端和服务端可以位于同一台计算机上，也可以位于不同的计算机上。服务端是整个架构的“大脑”，能够把数据存储到内存中，并且起到管理数据的作用。</p><h2 id="redis优势" tabindex="-1"><a class="header-anchor" href="#redis优势"><span>Redis优势</span></a></h2><p>下面对 Redis 的优势进行了简单总结：</p><ul><li>性能极高：Redis 基于内存实现数据存储，它的读取速度是 110000次/s，写速度是 81000次/s；</li><li>多用途工具：Redis 有很多的用途，比如可以用作缓存、消息队列、搭建 Redis 集群等；</li><li>命令提示功能：Redis 客户端拥有强大的命令提示功能，使用起来非常的方便，降低了学习门槛；</li><li>可移植性：Redis 使用用标准 C语言编写的，能够在大多数操作系统上运行，比如 Linux，Mac，Solaris 等。</li></ul><h2 id="redis应用场景" tabindex="-1"><a class="header-anchor" href="#redis应用场景"><span>Redis应用场景</span></a></h2><p>Redis 用来缓存一些经常被访问的热点数据、或者需要耗费大量资源的内容，通过把这些内容放到 Redis 中，可以让应用程序快速地读取它们。例如，网站的首页需要经常被访问，并且在创建首页的过程中会消耗的较多的资源，此时就可以使用 Redis 将整个首页缓存起来，从而降低网站的压力，减少页面访问的延迟时间。</p><p>我们知道，数据库的存储方式大体可分为两大类，基于磁盘存储和基于内存存储。磁盘存储的数据库，因为磁头机械运动以及系统调用等因素导致读写效率较低。Redis 基于内存来实现数据存取，相对于磁盘来说，其读写速度要高出好几个数量级。</p><table><thead><tr><th style="text-align:left;">名称</th><th style="text-align:left;">类型</th><th style="text-align:center;">数据存储选项</th><th style="text-align:center;">附加功能</th></tr></thead><tbody><tr><td style="text-align:left;">Redis</td><td style="text-align:left;">基于内存存储的键值非关系型数据库</td><td style="text-align:center;">字符串、列表、散列、有序集合、无序集合</td><td style="text-align:center;">发布与订阅、主从复制、持久化存储等</td></tr><tr><td style="text-align:left;">Memcached</td><td style="text-align:left;">基于内存存储的键值缓存型数据库</td><td style="text-align:center;">键值之间的映射</td><td style="text-align:center;">为提升性能构建了多线程服务器</td></tr><tr><td style="text-align:left;">MySQL</td><td style="text-align:left;">基于磁盘的关系型数据库</td><td style="text-align:center;">每个数据库包含多个表，每个表包含多条记录；支持第三方扩展</td><td style="text-align:center;">支持 ACID 性质、主从复制和主主复制</td></tr><tr><td style="text-align:left;">MongoDB</td><td style="text-align:left;">基于磁盘存储的非关系文档型数据库</td><td style="text-align:center;">每个数据库可以包含多个集合，每个集合可以插入多个文档</td><td style="text-align:center;">支持聚合操作、主从复制、分片和空间索引</td></tr></tbody></table><p>Redis 基于内存来实现数据的存储，因此其速度非常快。但是我们知道，计算机的内存是非常珍贵的资源，所以 Redis 不适合存储较大的文件或者二进制数据，否则会出现错误，Redis 适合存储较小的文本信息。理论上 Redis 的每个<code>key、value</code>的大小不超过 512 MB。</p><h2 id="redis命令行模式" tabindex="-1"><a class="header-anchor" href="#redis命令行模式"><span>Redis命令行模式</span></a></h2><p>Redis 命令用于在 Redis 服务器上执行一些操作，而命令运行的方式是通过客户端命令行来执行的，这种方式也被称为“命令行模式”。因此想要在 Redis 服务器上运行命令，首先需要开启一个 Redis 客户端。</p><p>在 CMD 命令行输入以下命令启动一个 Redis 客户端：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">redis-cli</span></span></code></pre></div><h3 id="本地服务器运行命令" tabindex="-1"><a class="header-anchor" href="#本地服务器运行命令"><span>本地服务器运行命令</span></a></h3><p>本地服务器指的是，Redis 服务器和客户端安装在同一台计算机上。</p><p>在计算机上打开一个 Redis 客户端输入以下命令，验证客户端与Redis 服务器是否成功连接。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# cd /usr/local/redis-6.2.5/src</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@localhost src]# ./redis-cli</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">PING</span></span>
<span class="line"><span style="color:#FFB757;">PONG</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>通过执行命令 PING，以检查服务器是否正在运行，结果返回 PONG，说明已经成功连接了本地 Redis 服务器。</p><h3 id="远程服务器上运行命令" tabindex="-1"><a class="header-anchor" href="#远程服务器上运行命令"><span>远程服务器上运行命令</span></a></h3><p>远程服务器顾名思义指的是服务器安装在另外一台计算机上，而非本地。这台远程计算机可以是局域网中的一台，也可以是 Internet 联网状态下的远程计算机。Redis 提供了连接远程服务器的命令：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">redis-cli</span><span style="color:#91CBFF;"> -h</span><span style="color:#ADDCFF;"> host</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> port</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> password</span></span></code></pre></div><p>参数说明：</p><ul><li><code>-h</code>：用于指定远程 Redis 服务器的 IP 地址</li><li><code>-p</code>：用于指定 Redis 远程服务器的端口号</li><li><code>-a</code>：可选参数，若远程服务器设置了密码，则需要输入</li></ul><p>服务器 IP 是<code>172.16.20.125</code>，端口号为 6379 ，密码为 123456。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">C:\\Users\\Administrator</span><span style="color:#F0F3F6;">&gt;</span><span style="color:#ADDCFF;">redis-cli</span><span style="color:#91CBFF;"> -h</span><span style="color:#91CBFF;"> 172.16.20.125</span><span style="color:#91CBFF;"> -p</span><span style="color:#91CBFF;"> 6379</span><span style="color:#91CBFF;"> -a</span><span style="color:#91CBFF;"> 123456</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#ADDCFF;"> 127.0.0.1:637</span><span style="color:#FF9492;">9&gt;</span></span>
<span class="line"><span style="color:#FFB757;">redis</span><span style="color:#ADDCFF;"> 127.0.0.1:637</span><span style="color:#FF9492;">9&gt;</span><span style="color:#ADDCFF;"> PING</span></span>
<span class="line"><span style="color:#FFB757;">PONG</span></span></code></pre></div><h3 id="命令行自动提示功能" tabindex="-1"><a class="header-anchor" href="#命令行自动提示功能"><span>命令行自动提示功能</span></a></h3><p>Redis 拥有强大的命令行提示功能，支持Tab键自动补全，并且您也可以通过HELP命令查看帮助信息：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">HELP</span><span style="color:#ADDCFF;"> SET</span></span>
<span class="line"><span style="color:#FFB757;">SET</span><span style="color:#ADDCFF;"> key</span><span style="color:#ADDCFF;"> value</span><span style="color:#F0F3F6;"> [expiration </span><span style="color:#ADDCFF;">EX</span><span style="color:#ADDCFF;"> seconds</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">PX</span><span style="color:#ADDCFF;"> milliseconds]</span><span style="color:#F0F3F6;"> [NX</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">XX]</span></span>
<span class="line"><span style="color:#FFB757;">summary:</span><span style="color:#ADDCFF;"> Set</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> string</span><span style="color:#ADDCFF;"> value</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> a</span><span style="color:#ADDCFF;"> key</span></span>
<span class="line"><span style="color:#FFB757;">since:</span><span style="color:#91CBFF;"> 1.0.0</span></span>
<span class="line"><span style="color:#FFB757;">group:</span><span style="color:#ADDCFF;"> string</span></span></code></pre></div><h2 id="redis配置文件" tabindex="-1"><a class="header-anchor" href="#redis配置文件"><span>Redis配置文件</span></a></h2><p>在 Redis 的安装目录中有一个名为<code>redis.windows.conf</code>的配置文件，若在 Linux 中则为<code>redis.conf</code>。</p><h3 id="查看配置项" tabindex="-1"><a class="header-anchor" href="#查看配置项"><span>查看配置项</span></a></h3><p>可以使用 Redis 的<code>CONFIG</code>命令来查看或者更改 Redis 的配置信息：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">redis</span><span style="color:#ADDCFF;"> 127.0.0.1:637</span><span style="color:#FF9492;">9&gt;</span><span style="color:#ADDCFF;"> CONFIG</span><span style="color:#ADDCFF;"> GET</span><span style="color:#ADDCFF;"> 配置名称</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">CONFIG</span><span style="color:#ADDCFF;"> GET</span><span style="color:#ADDCFF;"> loglevel</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;loglevel&quot;</span></span>
<span class="line"><span style="color:#FFB757;">2</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;notice&quot;</span></span></code></pre></div><p>通过使用<code>*</code>可以查看所有配置项：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">CONFIG</span><span style="color:#ADDCFF;"> GET</span><span style="color:#91CBFF;"> *</span></span></code></pre></div><h3 id="更改配置项" tabindex="-1"><a class="header-anchor" href="#更改配置项"><span>更改配置项</span></a></h3><p>如果想要重新设置配置项，需要使用以下命令：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">CONFIG</span><span style="color:#ADDCFF;"> SET</span><span style="color:#ADDCFF;"> 配置项名称</span><span style="color:#ADDCFF;"> 配置项参数值</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">CONFIG</span><span style="color:#ADDCFF;"> SET</span><span style="color:#ADDCFF;"> loglevel</span><span style="color:#ADDCFF;"> &quot;verbose&quot;</span></span>
<span class="line"><span style="color:#FFB757;">OK</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1:6379</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">CONFIG</span><span style="color:#ADDCFF;"> GET</span><span style="color:#ADDCFF;"> loglevel</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;loglevel&quot;</span></span>
<span class="line"><span style="color:#FFB757;">2</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">&quot;verbose&quot;</span></span></code></pre></div><p>Redis 的日志级别有四种：</p><ul><li><code>debug</code>：会打印出很多信息，适用于开发和测试阶段</li><li><code>verbose</code>（冗长的）：包含很多不太有用的信息，但比<code>debug</code>简化一些</li><li><code>notice</code>：适用于生产模式</li><li><code>warning</code>: 警告信息</li></ul><p>Redis 默认设置为<code>verbose</code>，开发测试阶段可以用<code>debug</code>，生产模式一般选用<code>notice</code>。</p><h3 id="更改配置文件" tabindex="-1"><a class="header-anchor" href="#更改配置文件"><span>更改配置文件</span></a></h3><p>Redis 某些配置信息无法直接通过命令修改，此时就需要修改配置文，比如设置 Redis 允许远程连接的功能：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 1.注释掉本地IP地址,绑定要访问的外部IP</span></span>
<span class="line"><span style="color:#BDC4CC;">#bind 127.0.0.1 ::1</span></span>
<span class="line"><span style="color:#FFB757;">bind</span><span style="color:#91CBFF;"> 192.168.1.1</span></span>
<span class="line"><span style="color:#BDC4CC;"># 2.关闭保护模式(把yes改为no)</span></span>
<span class="line"><span style="color:#FFB757;">protected-mode</span><span style="color:#ADDCFF;"> no</span></span>
<span class="line"><span style="color:#BDC4CC;"># 3.重启服务器,windows重启</span></span>
<span class="line"><span style="color:#FFB757;">redis-server</span><span style="color:#91CBFF;"> --service-stop</span></span>
<span class="line"><span style="color:#FFB757;">redis-server</span><span style="color:#91CBFF;"> --service-start</span></span>
<span class="line"><span style="color:#BDC4CC;"># Linux重启</span></span>
<span class="line"><span style="color:#FFB757;">redis-server</span><span style="color:#ADDCFF;"> restart</span></span></code></pre></div><h3 id="配置项说明" tabindex="-1"><a class="header-anchor" href="#配置项说明"><span>配置项说明</span></a></h3><p>常用配置项说明：</p><table><thead><tr><th>配置项</th><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>daemonize</td><td>no/yes</td><td>默认为 no，表示 Redis 不是以守护进程的方式运行，通过修改为 yes 启用守护进程</td></tr><tr><td>pidfile</td><td>文件路径</td><td>当 Redis 以守护进程方式运行时，会把进程 pid 写入自定义的文件中</td></tr><tr><td>port</td><td>6379</td><td>指定 Redis 监听端口，默认端口为 6379</td></tr><tr><td>bind</td><td>127.0.0.1</td><td>绑定的主机地址</td></tr><tr><td>timeout</td><td>0</td><td>客户端闲置多长秒后关闭连接，若指定为 0 ，表示不启用该功能</td></tr><tr><td>loglevel</td><td>notice</td><td>指定日志记录级别，支持四个级别：debug、verbose、notice、warning，默认为 notice</td></tr><tr><td>logfile</td><td>stdout</td><td>日志记录方式，默认为标准输出</td></tr><tr><td>databases</td><td>16</td><td>设置数据库的数量（0-15个）共16个，Redis 默认选择的是 0 库，可以使用 SELECT 命令来选择数据库</td></tr><tr><td>rdbcompression</td><td>yes/no</td><td>当数据存储至本地数据库时是否要压缩数据，默认为 yes</td></tr><tr><td>dbfilename</td><td>dump.rdb</td><td>指定本地存储数据库的文件名，默认为 dump.rdb</td></tr><tr><td>dir</td><td>./</td><td>指定本地数据库存放目录</td></tr><tr><td>requirepass</td><td>foobared</td><td>密码配置项，默认关闭，用于设置 Redis 连接密码。如果配置了连接密码，客户端连接 Redis 时需要通过<code>&lt;password&gt; </code>密码认证</td></tr><tr><td>appendfilename</td><td>appendonly.aof</td><td>指定 AOF 持久化时保存数据的文件名，默认为 appendonly.aof</td></tr><tr><td>glueoutputbuf</td><td>yes</td><td>设置向客户端应答时，是否把较小的包合并为一个包发送，默认开启状态</td></tr></tbody></table>`,55)]))}const r=e(n,[["render",o],["__file","Redis基础入门.html.vue"]]),c=JSON.parse('{"path":"/sql/redis/Redis%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.html","title":"Redis基础入门","lang":"zh-CN","frontmatter":{"title":"Redis基础入门","date":"2024-07-05T00:00:00.000Z","tags":"redis","categories":"SQL","order":1,"description":"Redis是什么 Redis 全称 Remote Dictionary Server（即远程字典服务），它是一个基于内存实现的键值型非关系（NoSQL）数据库，由意大利人 Salvatore Sanfilippo 使用 C 语言编写。 与 SQL 型数据库截然不同，Redis 没有提供新建数据库的操作，因为它自带了 16（0—15）个数据库（默认使用 ...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/sql/redis/Redis%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8.html"}],["meta",{"property":"og:title","content":"Redis基础入门"}],["meta",{"property":"og:description","content":"Redis是什么 Redis 全称 Remote Dictionary Server（即远程字典服务），它是一个基于内存实现的键值型非关系（NoSQL）数据库，由意大利人 Salvatore Sanfilippo 使用 C 语言编写。 与 SQL 型数据库截然不同，Redis 没有提供新建数据库的操作，因为它自带了 16（0—15）个数据库（默认使用 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T02:39:10.000Z"}],["meta",{"property":"article:published_time","content":"2024-07-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-27T02:39:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis基础入门\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-07-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-27T02:39:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"Redis是什么","slug":"redis是什么","link":"#redis是什么","children":[]},{"level":2,"title":"Redis架构","slug":"redis架构","link":"#redis架构","children":[]},{"level":2,"title":"Redis优势","slug":"redis优势","link":"#redis优势","children":[]},{"level":2,"title":"Redis应用场景","slug":"redis应用场景","link":"#redis应用场景","children":[]},{"level":2,"title":"Redis命令行模式","slug":"redis命令行模式","link":"#redis命令行模式","children":[{"level":3,"title":"本地服务器运行命令","slug":"本地服务器运行命令","link":"#本地服务器运行命令","children":[]},{"level":3,"title":"远程服务器上运行命令","slug":"远程服务器上运行命令","link":"#远程服务器上运行命令","children":[]},{"level":3,"title":"命令行自动提示功能","slug":"命令行自动提示功能","link":"#命令行自动提示功能","children":[]}]},{"level":2,"title":"Redis配置文件","slug":"redis配置文件","link":"#redis配置文件","children":[{"level":3,"title":"查看配置项","slug":"查看配置项","link":"#查看配置项","children":[]},{"level":3,"title":"更改配置项","slug":"更改配置项","link":"#更改配置项","children":[]},{"level":3,"title":"更改配置文件","slug":"更改配置文件","link":"#更改配置文件","children":[]},{"level":3,"title":"配置项说明","slug":"配置项说明","link":"#配置项说明","children":[]}]}],"git":{"createdTime":1726034220000,"updatedTime":1745721550000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":3}]},"readingTime":{"minutes":7.21,"words":2164},"filePathRelative":"sql/redis/Redis基础入门.md","localizedDate":"2024年7月5日","autoDesc":true}');export{r as comp,c as data};
