import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,o}from"./app-CRBxQhNH.js";const e={};function p(c,s){return o(),n("div",null,s[0]||(s[0]=[l(`<h2 id="环境搭建" tabindex="-1"><a class="header-anchor" href="#环境搭建"><span>环境搭建</span></a></h2><p>Docker 是一个虚拟环境容器，可以将你的开发环境、代码、配置文件等一并打包到这个容器中，最终只需要一个命令即可打包发布应用到任意平台中。</p><p>1、安装docker</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">yum</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm</span></span>
<span class="line"><span style="color:#FFB757;">yum</span><span style="color:#ADDCFF;"> install</span><span style="color:#91CBFF;"> -y</span><span style="color:#ADDCFF;"> yum-utils</span><span style="color:#ADDCFF;"> device-mapper-persistent-data</span><span style="color:#ADDCFF;"> lvm2</span></span>
<span class="line"><span style="color:#FFB757;">yum-config-manager</span><span style="color:#91CBFF;"> --add-repo</span><span style="color:#ADDCFF;"> https://download.docker.com/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="color:#FFB757;">yum</span><span style="color:#ADDCFF;"> install</span><span style="color:#91CBFF;"> -y</span><span style="color:#ADDCFF;"> docker-ce</span></span>
<span class="line"><span style="color:#FFB757;">curl</span><span style="color:#91CBFF;"> -L</span><span style="color:#ADDCFF;"> &quot;https://github.com/docker/compose/releases/download/1.25.0/docker-compose-$(</span><span style="color:#FFB757;">uname</span><span style="color:#91CBFF;"> -s</span><span style="color:#ADDCFF;">)-$(</span><span style="color:#FFB757;">uname</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;">)&quot;</span><span style="color:#91CBFF;"> -o</span><span style="color:#ADDCFF;"> /usr/local/bin/docker-compose</span></span></code></pre></div><p>2、检查docker和docker-compose是否安装成功</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> version</span></span>
<span class="line"><span style="color:#FFB757;">docker-compose</span><span style="color:#91CBFF;"> --version</span></span></code></pre></div><p>3、文件授权</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">chmod</span><span style="color:#ADDCFF;"> +x</span><span style="color:#ADDCFF;"> /usr/local/bin/docker-compose</span></span></code></pre></div><h3 id="_3-docker-脚本下载" tabindex="-1"><a class="header-anchor" href="#_3-docker-脚本下载"><span>3. docker 脚本下载</span></a></h3><p>插件相关脚本实现<code>ruoyi/集成docker实现一键部署.zip</code></p><p>链接: https://pan.baidu.com/s/13JVC9jm-Dp9PfHdDDylLCQ 提取码: y9jt</p><ul><li>其中db目录存放ruoyi数据库脚本</li><li>其中jar目录存放打包好的jar应用文件</li><li>数据库mysql地址需要修改成ruoyi-mysql</li><li>数据库脚本头部需要添加SET NAMES &#39;utf8&#39;;（防止乱码）</li><li>redis地址也需要修改</li></ul><h2 id="_4-启动docker" tabindex="-1"><a class="header-anchor" href="#_4-启动docker"><span>4. 启动docker</span></a></h2><p>启动docker</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">systemctl</span><span style="color:#ADDCFF;"> start</span><span style="color:#ADDCFF;"> docker</span></span></code></pre></div><p>构建docker服务</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">docker-compose</span><span style="color:#ADDCFF;"> build</span></span></code></pre></div><p>启动docker容器</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">docker-compose</span><span style="color:#ADDCFF;"> up</span><span style="color:#91CBFF;"> -d</span></span></code></pre></div><p>访问应用地址</p><p>打开浏览器，输入：<code>http://localhost:80</code>，若能正确展示页面，则表明环境搭建成功。</p><p>启动服务的容器<code>docker-compose up ruoyi-mysql ruoyi-server</code></p><p>停止服务的容器<code>docker-compose stop ruoyi-mysql ruoyi-server</code></p><h2 id="_5-脚本介绍" tabindex="-1"><a class="header-anchor" href="#_5-脚本介绍"><span>5. 脚本介绍</span></a></h2><h3 id="mysql-dockerfile" tabindex="-1"><a class="header-anchor" href="#mysql-dockerfile"><span>mysql-dockerfile</span></a></h3><div class="language-dockerfile" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 基础镜像</span></span>
<span class="line"><span style="color:#FF9492;">FROM</span><span style="color:#F0F3F6;"> mysql:5.7</span></span>
<span class="line"><span style="color:#BDC4CC;"># author</span></span>
<span class="line"><span style="color:#FF9492;">MAINTAINER</span><span style="color:#F0F3F6;"> ruoyi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 执行sql脚本</span></span>
<span class="line"><span style="color:#FF9492;">ADD</span><span style="color:#F0F3F6;"> ./db/*.sql /docker-entrypoint-initdb.d/</span></span></code></pre></div><h3 id="mysql-dockerfile-1" tabindex="-1"><a class="header-anchor" href="#mysql-dockerfile-1"><span>mysql-dockerfile</span></a></h3><div class="language-dockerfile" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 基础镜像</span></span>
<span class="line"><span style="color:#FF9492;">FROM</span><span style="color:#F0F3F6;"> redis</span></span>
<span class="line"><span style="color:#BDC4CC;"># author</span></span>
<span class="line"><span style="color:#FF9492;">MAINTAINER</span><span style="color:#F0F3F6;"> ruoyi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 挂载目录</span></span>
<span class="line"><span style="color:#FF9492;">VOLUME</span><span style="color:#F0F3F6;"> /zsz/ruoyi/redis</span></span>
<span class="line"><span style="color:#BDC4CC;"># 创建目录</span></span>
<span class="line"><span style="color:#FF9492;">RUN</span><span style="color:#F0F3F6;"> mkdir -p /zsz/ruoyi/redis</span></span>
<span class="line"><span style="color:#BDC4CC;"># 指定路径</span></span>
<span class="line"><span style="color:#FF9492;">WORKDIR</span><span style="color:#F0F3F6;"> /zsz/ruoyi/redis</span></span>
<span class="line"><span style="color:#BDC4CC;"># 复制conf文件到路径</span></span>
<span class="line"><span style="color:#FF9492;">COPY</span><span style="color:#F0F3F6;"> ./conf/redis.conf /zsz/ruoyi/redis/redis.conf</span></span></code></pre></div><h3 id="ruoyi-dockerfile" tabindex="-1"><a class="header-anchor" href="#ruoyi-dockerfile"><span>ruoyi-dockerfile</span></a></h3><div class="language-dockerfile" data-highlighter="shiki" data-ext="dockerfile" data-title="dockerfile" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 基础镜像</span></span>
<span class="line"><span style="color:#FF9492;">FROM</span><span style="color:#F0F3F6;"> java:8</span></span>
<span class="line"><span style="color:#BDC4CC;"># author</span></span>
<span class="line"><span style="color:#FF9492;">MAINTAINER</span><span style="color:#F0F3F6;"> ruoyi</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 挂载目录</span></span>
<span class="line"><span style="color:#FF9492;">VOLUME</span><span style="color:#F0F3F6;"> /zsz/ruoyi</span></span>
<span class="line"><span style="color:#BDC4CC;"># 创建目录</span></span>
<span class="line"><span style="color:#FF9492;">RUN</span><span style="color:#F0F3F6;"> mkdir -p /zsz/ruoyi</span></span>
<span class="line"><span style="color:#BDC4CC;"># 指定路径</span></span>
<span class="line"><span style="color:#FF9492;">WORKDIR</span><span style="color:#F0F3F6;"> /zsz/ruoyi</span></span>
<span class="line"><span style="color:#BDC4CC;"># 复制jar文件到路径de</span></span>
<span class="line"><span style="color:#FF9492;">COPY</span><span style="color:#F0F3F6;"> ./jar/*.jar /zsz/ruoyi/ruoyi.jar</span></span>
<span class="line"><span style="color:#BDC4CC;"># 启动应用</span></span>
<span class="line"><span style="color:#FF9492;">ENTRYPOINT</span><span style="color:#F0F3F6;"> [</span><span style="color:#ADDCFF;">&quot;java&quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#ADDCFF;">&quot;-jar&quot;</span><span style="color:#F0F3F6;">,</span><span style="color:#ADDCFF;">&quot;ruoyi.jar&quot;</span><span style="color:#F0F3F6;">]</span></span></code></pre></div><h3 id="docker-compose-yml" tabindex="-1"><a class="header-anchor" href="#docker-compose-yml"><span>docker-compose.yml</span></a></h3><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#72F088;">version</span><span style="color:#F0F3F6;"> : </span><span style="color:#ADDCFF;">&#39;3&#39;</span></span>
<span class="line"><span style="color:#72F088;">services</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">  ruoyi-mysql</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">    container_name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">ruoyi-mysql</span></span>
<span class="line"><span style="color:#72F088;">    image</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">mysql:5.7</span></span>
<span class="line"><span style="color:#72F088;">    build</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">      context</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">.</span></span>
<span class="line"><span style="color:#72F088;">      dockerfile</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">mysql-dockerfile</span></span>
<span class="line"><span style="color:#72F088;">    ports</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">&quot;8306:3306&quot;</span></span>
<span class="line"><span style="color:#72F088;">    volumes</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">./mysql/conf:/zsz/ruoyi/mysql/conf.d</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">./mysql/logs:/zsz/ruoyi/mysql/logs</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">./mysql/data:/zsz/ruoyi/mysql/mysqldata</span></span>
<span class="line"><span style="color:#72F088;">    command</span><span style="color:#F0F3F6;">: [</span></span>
<span class="line"><span style="color:#ADDCFF;">      &#39;mysqld&#39;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#ADDCFF;">      &#39;--innodb-buffer-pool-size=80M&#39;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#ADDCFF;">      &#39;--character-set-server=utf8mb4&#39;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#ADDCFF;">      &#39;--collation-server=utf8mb4_unicode_ci&#39;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#ADDCFF;">      &#39;--default-time-zone=+8:00&#39;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#ADDCFF;">      &#39;--lower-case-table-names=1&#39;</span></span>
<span class="line"><span style="color:#F0F3F6;">    ]</span></span>
<span class="line"><span style="color:#72F088;">    environment</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">      MYSQL_DATABASE</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">ry-vue</span></span>
<span class="line"><span style="color:#72F088;">      MYSQL_ROOT_PASSWORD</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">123456</span></span>
<span class="line"><span style="color:#72F088;">  ruoyi-redis</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">    container_name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">ruoyi-redis</span></span>
<span class="line"><span style="color:#72F088;">    image</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">redis</span></span>
<span class="line"><span style="color:#72F088;">    build</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">      context</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">.</span></span>
<span class="line"><span style="color:#72F088;">      dockerfile</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">redis-dockerfile</span></span>
<span class="line"><span style="color:#72F088;">    ports</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">&quot;8379:6379&quot;</span></span>
<span class="line"><span style="color:#72F088;">    volumes</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">./conf/redis.conf:/zsz/ruoyi/redis/redis.conf</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">./redis/data:/data</span></span>
<span class="line"><span style="color:#72F088;">    command</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">redis-server /zsz/ruoyi/redis/redis.conf</span></span>
<span class="line"><span style="color:#72F088;">  ruoyi-server</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">    container_name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">ruoyi-server</span></span>
<span class="line"><span style="color:#72F088;">    build</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">      context</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">.</span></span>
<span class="line"><span style="color:#72F088;">      dockerfile</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">ruoyi-dockerfile</span></span>
<span class="line"><span style="color:#72F088;">    ports</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">&quot;8080:8080&quot;</span></span>
<span class="line"><span style="color:#72F088;">    volumes</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">./ruoyi/logs:/zsz/ruoyi/logs</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">./ruoyi/uploadPath:/zsz/ruoyi/uploadPath</span></span>
<span class="line"><span style="color:#72F088;">    depends_on</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">ruoyi-mysql</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">ruoyi-redis</span></span>
<span class="line"><span style="color:#72F088;">    links</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">ruoyi-mysql</span></span>
<span class="line"><span style="color:#F0F3F6;">      - </span><span style="color:#ADDCFF;">ruoyi-redis</span></span></code></pre></div>`,32)]))}const i=a(e,[["render",p],["__file","集成Docker实现一键部署.html.vue"]]),F=JSON.parse('{"path":"/linux/docker/%E9%9B%86%E6%88%90Docker%E5%AE%9E%E7%8E%B0%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2.html","title":"集成Docker实现一键部署","lang":"zh-CN","frontmatter":{"title":"集成Docker实现一键部署","date":"2024-01-30T00:00:00.000Z","tags":"Docker","categories":"linux","order":6,"description":"环境搭建 Docker 是一个虚拟环境容器，可以将你的开发环境、代码、配置文件等一并打包到这个容器中，最终只需要一个命令即可打包发布应用到任意平台中。 1、安装docker 2、检查docker和docker-compose是否安装成功 3、文件授权 3. docker 脚本下载 插件相关脚本实现ruoyi/集成docker实现一键部署.zip 链接:...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/linux/docker/%E9%9B%86%E6%88%90Docker%E5%AE%9E%E7%8E%B0%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2.html"}],["meta",{"property":"og:title","content":"集成Docker实现一键部署"}],["meta",{"property":"og:description","content":"环境搭建 Docker 是一个虚拟环境容器，可以将你的开发环境、代码、配置文件等一并打包到这个容器中，最终只需要一个命令即可打包发布应用到任意平台中。 1、安装docker 2、检查docker和docker-compose是否安装成功 3、文件授权 3. docker 脚本下载 插件相关脚本实现ruoyi/集成docker实现一键部署.zip 链接:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-14T07:30:34.000Z"}],["meta",{"property":"article:published_time","content":"2024-01-30T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-14T07:30:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"集成Docker实现一键部署\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-01-30T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-14T07:30:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[{"level":3,"title":"3. docker 脚本下载","slug":"_3-docker-脚本下载","link":"#_3-docker-脚本下载","children":[]}]},{"level":2,"title":"4. 启动docker","slug":"_4-启动docker","link":"#_4-启动docker","children":[]},{"level":2,"title":"5. 脚本介绍","slug":"_5-脚本介绍","link":"#_5-脚本介绍","children":[{"level":3,"title":"mysql-dockerfile","slug":"mysql-dockerfile","link":"#mysql-dockerfile","children":[]},{"level":3,"title":"mysql-dockerfile","slug":"mysql-dockerfile-1","link":"#mysql-dockerfile-1","children":[]},{"level":3,"title":"ruoyi-dockerfile","slug":"ruoyi-dockerfile","link":"#ruoyi-dockerfile","children":[]},{"level":3,"title":"docker-compose.yml","slug":"docker-compose-yml","link":"#docker-compose-yml","children":[]}]}],"git":{"createdTime":1723619297000,"updatedTime":1723620634000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":2}]},"readingTime":{"minutes":1.97,"words":591},"filePathRelative":"linux/docker/集成Docker实现一键部署.md","localizedDate":"2024年1月30日","autoDesc":true}');export{i as comp,F as data};
