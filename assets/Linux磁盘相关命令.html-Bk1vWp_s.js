import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,d as e,o as n}from"./app-BAoNGAQX.js";const o={};function t(p,s){return n(),l("div",null,s[0]||(s[0]=[e(`<h2 id="df-查看文件系统硬盘使用情况" tabindex="-1"><a class="header-anchor" href="#df-查看文件系统硬盘使用情况"><span>df：查看文件系统硬盘使用情况</span></a></h2><p><code>df</code>命令，用于显示 Linux 系统中各文件系统的硬盘使用情况，包括文件系统所在硬盘分区的总容量、已使用的容量、剩余容量等。</p><p>与整个文件系统有关的数据，都保存在<code>Super block</code>（超级块）中，而<code>df</code>命令主要读取的数据几乎都针对的是整个文件系统，所以<code>df</code>命令主要是从各文件系统的<code>Super block</code>中读取数据。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">df</span><span style="color:#F0F3F6;"> [选项] [目录或文件名]</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">-a, --all</td><td style="text-align:left;">显示所有文件系统信息，包括系统特有的 /proc、/sysfs 等文件系统</td></tr><tr><td style="text-align:center;">-m</td><td style="text-align:left;">以 MB 为单位显示容量</td></tr><tr><td style="text-align:center;">-k</td><td style="text-align:left;">以 KB 为单位显示容量，默认以 KB 为单位</td></tr><tr><td style="text-align:center;">-h</td><td style="text-align:left;">使用人们习惯的 KB、MB 或 GB 等单位显示容量</td></tr><tr><td style="text-align:center;">-T</td><td style="text-align:left;">显示该分区的文件系统名称</td></tr></tbody></table><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# df</span></span>
<span class="line"><span style="color:#FFB757;">Filesystem</span><span style="color:#ADDCFF;">      1K-blocks</span><span style="color:#ADDCFF;">      Used</span><span style="color:#ADDCFF;"> Available</span><span style="color:#ADDCFF;"> Use%</span><span style="color:#ADDCFF;"> Mounted</span><span style="color:#ADDCFF;"> on</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc2</span><span style="color:#91CBFF;">         9920624</span><span style="color:#91CBFF;">   3823112</span><span style="color:#91CBFF;">   5585444</span><span style="color:#ADDCFF;">  41%</span><span style="color:#ADDCFF;"> /</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc3</span><span style="color:#91CBFF;">         4956316</span><span style="color:#91CBFF;">    141376</span><span style="color:#91CBFF;">   4559108</span><span style="color:#ADDCFF;">   4%</span><span style="color:#ADDCFF;"> /home</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc1</span><span style="color:#91CBFF;">          101086</span><span style="color:#91CBFF;">     11126</span><span style="color:#91CBFF;">     84741</span><span style="color:#ADDCFF;">  12%</span><span style="color:#ADDCFF;"> /boot</span></span>
<span class="line"><span style="color:#FFB757;">tmpfs</span><span style="color:#91CBFF;">              371332</span><span style="color:#91CBFF;">         0</span><span style="color:#91CBFF;">    371332</span><span style="color:#ADDCFF;">   0%</span><span style="color:#ADDCFF;"> /dev/shm</span></span></code></pre></div><p>不使用任何选项的<code>df</code>命令，默认会将系统内所有的文件系统信息，以<code>KB</code>为单位显示出来。</p><p>由<code>df</code>命令显示出的各列信息的含义分别是：</p><ul><li><code>Filesystem</code>：表示该文件系统位于哪个分区，因此该列显示的是设备名称；</li><li><code>1K-blocks</code>：此列表示文件系统的总大小，默认以<code>KB</code>为单位；</li><li><code>Used</code>：表示用掉的硬盘空间大小；</li><li><code>Available</code>：表示剩余的硬盘空间大小；</li><li><code>Use%</code>：硬盘空间使用率。如果使用率高达 90% 以上，就需要额外注意，因为容量不足，会严重影响系统的正常运行；</li><li><code>Mounted on</code>：文件系统的挂载点，也就是硬盘挂载的目录位置。</li></ul><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# df -h</span></span>
<span class="line"><span style="color:#FFB757;">Filesystem</span><span style="color:#ADDCFF;">            Size</span><span style="color:#ADDCFF;">  Used</span><span style="color:#ADDCFF;"> Avail</span><span style="color:#ADDCFF;"> Use%</span><span style="color:#ADDCFF;"> Mounted</span><span style="color:#ADDCFF;"> on</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc2</span><span style="color:#ADDCFF;">             9.5G</span><span style="color:#ADDCFF;">  3.7G</span><span style="color:#ADDCFF;">  5.4G</span><span style="color:#ADDCFF;">  41%</span><span style="color:#ADDCFF;"> /</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc3</span><span style="color:#ADDCFF;">             4.8G</span><span style="color:#ADDCFF;">  139M</span><span style="color:#ADDCFF;">  4.4G</span><span style="color:#ADDCFF;">   4%</span><span style="color:#ADDCFF;"> /home</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc1</span><span style="color:#ADDCFF;">              99M</span><span style="color:#ADDCFF;">   11M</span><span style="color:#ADDCFF;">   83M</span><span style="color:#ADDCFF;">  12%</span><span style="color:#ADDCFF;"> /boot</span></span>
<span class="line"><span style="color:#FFB757;">tmpfs</span><span style="color:#ADDCFF;">                 363M</span><span style="color:#91CBFF;">     0</span><span style="color:#ADDCFF;">  363M</span><span style="color:#ADDCFF;">   0%</span><span style="color:#ADDCFF;"> /dev/shm</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# df -h /etc</span></span>
<span class="line"><span style="color:#FFB757;">Filesystem</span><span style="color:#ADDCFF;">            Size</span><span style="color:#ADDCFF;">  Used</span><span style="color:#ADDCFF;"> Avail</span><span style="color:#ADDCFF;"> Use%</span><span style="color:#ADDCFF;"> Mounted</span><span style="color:#ADDCFF;"> on</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc2</span><span style="color:#ADDCFF;">             9.5G</span><span style="color:#ADDCFF;">  3.7G</span><span style="color:#ADDCFF;">  5.4G</span><span style="color:#ADDCFF;">  41%</span><span style="color:#ADDCFF;"> /</span></span></code></pre></div><p>这里在<code>df</code>命令后添加了目录名，在这种情况下，<code>df</code>命令会自动分析该目录所在的分区，并将所在分区的有关信息显示出来。由此，我们就可以知道，该目录下还可以使用多少容量。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# df -aT</span></span>
<span class="line"><span style="color:#FFB757;">Filesystem</span><span style="color:#ADDCFF;">    Type</span><span style="color:#ADDCFF;"> 1K-blocks</span><span style="color:#ADDCFF;">    Used</span><span style="color:#ADDCFF;"> Available</span><span style="color:#ADDCFF;"> Use%</span><span style="color:#ADDCFF;"> Mounted</span><span style="color:#ADDCFF;"> on</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc2</span><span style="color:#ADDCFF;">     ext3</span><span style="color:#91CBFF;">   9920624</span><span style="color:#91CBFF;"> 3823112</span><span style="color:#91CBFF;">   5585444</span><span style="color:#ADDCFF;">  41%</span><span style="color:#ADDCFF;"> /</span></span>
<span class="line"><span style="color:#FFB757;">proc</span><span style="color:#ADDCFF;">          proc</span><span style="color:#91CBFF;">         0</span><span style="color:#91CBFF;">       0</span><span style="color:#91CBFF;">         0</span><span style="color:#ADDCFF;">   -</span><span style="color:#ADDCFF;">  /proc</span></span>
<span class="line"><span style="color:#FFB757;">sysfs</span><span style="color:#ADDCFF;">        sysfs</span><span style="color:#91CBFF;">         0</span><span style="color:#91CBFF;">       0</span><span style="color:#91CBFF;">         0</span><span style="color:#ADDCFF;">   -</span><span style="color:#ADDCFF;">  /sys</span></span>
<span class="line"><span style="color:#FFB757;">devpts</span><span style="color:#ADDCFF;">      devpts</span><span style="color:#91CBFF;">         0</span><span style="color:#91CBFF;">       0</span><span style="color:#91CBFF;">         0</span><span style="color:#ADDCFF;">   -</span><span style="color:#ADDCFF;">  /dev/pts</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc3</span><span style="color:#ADDCFF;">     ext3</span><span style="color:#91CBFF;">   4956316</span><span style="color:#91CBFF;">  141376</span><span style="color:#91CBFF;">   4559108</span><span style="color:#ADDCFF;">   4%</span><span style="color:#ADDCFF;"> /home</span></span>
<span class="line"><span style="color:#FFB757;">/dev/hdc1</span><span style="color:#ADDCFF;">     ext3</span><span style="color:#91CBFF;">    101086</span><span style="color:#91CBFF;">   11126</span><span style="color:#91CBFF;">     84741</span><span style="color:#ADDCFF;">  12%</span><span style="color:#ADDCFF;"> /boot</span></span>
<span class="line"><span style="color:#FFB757;">tmpfs</span><span style="color:#ADDCFF;">        tmpfs</span><span style="color:#91CBFF;">    371332</span><span style="color:#91CBFF;">       0</span><span style="color:#91CBFF;">    371332</span><span style="color:#ADDCFF;">   0%</span><span style="color:#ADDCFF;"> /dev/shm</span></span>
<span class="line"><span style="color:#FFB757;">none</span><span style="color:#ADDCFF;">   binfmt_misc</span><span style="color:#91CBFF;">         0</span><span style="color:#91CBFF;">       0</span><span style="color:#91CBFF;">         0</span><span style="color:#ADDCFF;">   -</span><span style="color:#ADDCFF;">  /proc/sys/fs/binfmt_misc</span></span>
<span class="line"><span style="color:#FFB757;">sunrpc</span><span style="color:#ADDCFF;">  rpc_pipefs</span><span style="color:#91CBFF;">         0</span><span style="color:#91CBFF;">       0</span><span style="color:#91CBFF;">         0</span><span style="color:#ADDCFF;">   -</span><span style="color:#ADDCFF;">  /var/lib/nfs/rpc_pipefs</span></span></code></pre></div><p>注意，使用<code>-a</code>选项，会将很多特殊的文件系统显示出来，这些文件系统包含的大多是系统数据，存在于内存中，不会占用硬盘空间，因此你会看到，它们所占据的硬盘总容量为 0。</p><h2 id="du-统计目录或文件所占磁盘空间大小" tabindex="-1"><a class="header-anchor" href="#du-统计目录或文件所占磁盘空间大小"><span>du：统计目录或文件所占磁盘空间大小</span></a></h2><p><code>du</code>是统计目录或文件所占磁盘空间大小的命令。</p><p>需要注意的是，使用<code>ls -r</code>命令是可以看到文件的大小的。但是大家会发现，在使用<code>ls -r</code>命令査看目录大小时，目录的大小多数是<code>4KB</code>，这是因为目录下的子目录名和子文件名是保存到父目录的<code>block</code>（默认大小为 4KB）中的，如果父目录下的子目录和子文件并不多，一个<code>block</code>就能放下，那么这个父目录就只占用了一个<code>block</code>大小。</p><p>但是我们在统计目录时，不是想看父目录下的子目录名和子文件名到底占用了多少空间，而是想看父目录下的子目录和子文件的总磁盘占用量大小，这时就需要使用<code>du</code>命令才能统计目录的真正磁盘占用量大小。</p><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">du</span><span style="color:#F0F3F6;"> [选项] [目录或文件名]</span></span></code></pre></div><p>选项：</p><ul><li><code>-a</code>：显示每个子文件的磁盘占用量。默认只统计子目录的磁盘占用量</li><li><code>-h</code>：使用习惯单位显示磁盘占用量，如 KB、MB 或 GB 等</li><li><code>-s</code>：统计总磁盘占用量，而不列出子目录和子文件的磁盘占用量</li></ul><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# du</span></span>
<span class="line"><span style="color:#BDC4CC;">#统计当前目录的总磁盘占用量大小，同时会统计当前目录下所有子目录的磁盘占用量大小，不统计子文件</span></span>
<span class="line"><span style="color:#BDC4CC;">#磁盘占用量的大小。默认单位为KB</span></span>
<span class="line"><span style="color:#FFB757;">20</span><span style="color:#ADDCFF;"> ./.gnupg</span></span>
<span class="line"><span style="color:#BDC4CC;">#统计每个子目录的大小</span></span>
<span class="line"><span style="color:#FFB757;">24</span><span style="color:#ADDCFF;"> ./yum.bak</span></span>
<span class="line"><span style="color:#FFB757;">8</span><span style="color:#ADDCFF;"> ./dtest</span></span>
<span class="line"><span style="color:#FFB757;">28</span><span style="color:#ADDCFF;"> ./sh</span></span>
<span class="line"><span style="color:#FFB757;">188</span></span>
<span class="line"><span style="color:#BDC4CC;">#统计当前目录总大小</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# du -a</span></span>
<span class="line"><span style="color:#BDC4CC;">#统计当前目录的总大小，同时会统计当前目录下所有子文件和子目录磁盘占用量的大小。默认单位为 KB</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">4</span><span style="color:#ADDCFF;"> ./.bashjogout</span></span>
<span class="line"><span style="color:#FFB757;">36</span><span style="color:#ADDCFF;"> ./install.log</span></span>
<span class="line"><span style="color:#FFB757;">4</span><span style="color:#ADDCFF;"> ./.bash_profile</span></span>
<span class="line"><span style="color:#FFB757;">4</span><span style="color:#ADDCFF;"> ./.cshrc</span></span>
<span class="line"><span style="color:#FFB757;">…省略部分输出…</span></span>
<span class="line"><span style="color:#FFB757;">188</span></span></code></pre></div><div class="language-bash" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# du -sh</span></span>
<span class="line"><span style="color:#BDC4CC;">#只统计磁盘占用量总的大小，同时使用习惯单位显示</span></span>
<span class="line"><span style="color:#FFB757;">188K</span><span style="color:#ADDCFF;"> .</span></span></code></pre></div><h3 id="du命令和df命令的区别" tabindex="-1"><a class="header-anchor" href="#du命令和df命令的区别"><span>du命令和df命令的区别</span></a></h3><p>使用<code>du</code>命令和<code>df</code>命令去统计分区的使用情况时，得到的数据是不一样的。那是因为<code>df</code>命令是从文件系统的角度考虑的，通过文件系统中未分配的空间来确定文件系统中已经分配的空间大小。也就是说，在使用<code>df</code>命令统计分区时，不仅要考虑文件占用的空间，还要统计被命令或程序占用的空间（最常见的就是文件已经删除，但是程序并没有释放空间）。</p><p>而<code>du</code>命令是面向文件的，只会计算文件或目录占用的磁盘空间。也就是说，<code>df</code>命令统计的分区更准确，是真正的空闲空间。</p><h2 id="free" tabindex="-1"><a class="header-anchor" href="#free"><span>free</span></a></h2><p><code>free</code>命令用来显示系统内存状态，包括系统物理内存、虚拟内存（<code>swap</code> 换分区）、共享内存和系统缓存的使用情况，其输出和<code>top</code>命令的内存部分非常相似。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# free [选项]</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">选项</th><th style="text-align:left;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">-h</td><td style="text-align:left;">以合适的单位显示内存使用情况，最大为三位数，自动计算对应的单位值。</td></tr><tr><td style="text-align:center;">-b</td><td style="text-align:left;">以 Byte（字节）为单位，显示内存使用情况。</td></tr><tr><td style="text-align:center;">-k</td><td style="text-align:left;">以 KB 为单位，显示内存使用情况，此选项是 free 命令的默认选项。</td></tr><tr><td style="text-align:center;">-m</td><td style="text-align:left;">以 MB 为单位，显示内存使用情况。</td></tr><tr><td style="text-align:center;">-g</td><td style="text-align:left;">以 GB 为单位，显示内存使用情况。</td></tr><tr><td style="text-align:center;">-t</td><td style="text-align:left;">在输出的最终结果中，输出内存和 swap 分区的总量。</td></tr><tr><td style="text-align:center;">-o</td><td style="text-align:left;">不显示系统缓冲区这一列。</td></tr><tr><td style="text-align:center;">-s</td><td style="text-align:left;">间隔秒数 根据指定的间隔时间，持续显示内存使用情况。</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@localhost </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# free -m</span></span>
<span class="line"><span style="color:#FFB757;">               total</span><span style="color:#ADDCFF;">        used</span><span style="color:#ADDCFF;">        free</span><span style="color:#ADDCFF;">      shared</span><span style="color:#ADDCFF;">  buff/cache</span><span style="color:#ADDCFF;">   available</span></span>
<span class="line"><span style="color:#FFB757;">Mem:</span><span style="color:#91CBFF;">            1741</span><span style="color:#91CBFF;">         342</span><span style="color:#91CBFF;">        1372</span><span style="color:#91CBFF;">           5</span><span style="color:#91CBFF;">         175</span><span style="color:#91CBFF;">        1399</span></span>
<span class="line"><span style="color:#FFB757;">Swap:</span><span style="color:#91CBFF;">           2063</span><span style="color:#91CBFF;">           0</span><span style="color:#91CBFF;">        2063</span></span></code></pre></div><p>第一行显示的是各个列的列表头信息，含义：</p><ul><li><code>total</code>：总内存数</li><li><code>used</code>：已经使用的内存数</li><li><code>free</code>：空闲的内存数</li><li><code>shared</code>：多个进程共享的内存总数</li><li><code>buffers</code>：缓冲内存数</li><li><code>available</code>：可用缓存内存数</li></ul><p>关系：<code>total = used +available</code>。</p><p><code>Mem</code>一行指的是内存的使用情况；<code>Swap</code>一行指的就是<code>swap</code>分区的使用情况。</p><p>可以看到，系统的物理内存为 1741 MB，已经使用了 342 MB，空闲 1372 MB。而<code>swap</code>分区总大小为 2063 MB，目前尚未使用。</p>`,37)]))}const F=a(o,[["render",t],["__file","Linux磁盘相关命令.html.vue"]]),d=JSON.parse('{"path":"/linux/linux%E5%9F%BA%E7%A1%80/Linux%E7%A3%81%E7%9B%98%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html","title":"Linux磁盘相关命令","lang":"zh-CN","frontmatter":{"title":"Linux磁盘相关命令","date":"2024-03-25T00:00:00.000Z","tags":"linux基础","categories":"linux","order":11,"description":"df：查看文件系统硬盘使用情况 df命令，用于显示 Linux 系统中各文件系统的硬盘使用情况，包括文件系统所在硬盘分区的总容量、已使用的容量、剩余容量等。 与整个文件系统有关的数据，都保存在Super block（超级块）中，而df命令主要读取的数据几乎都针对的是整个文件系统，所以df命令主要是从各文件系统的Super block中读取数据。 不使用...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/linux/linux%E5%9F%BA%E7%A1%80/Linux%E7%A3%81%E7%9B%98%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4.html"}],["meta",{"property":"og:title","content":"Linux磁盘相关命令"}],["meta",{"property":"og:description","content":"df：查看文件系统硬盘使用情况 df命令，用于显示 Linux 系统中各文件系统的硬盘使用情况，包括文件系统所在硬盘分区的总容量、已使用的容量、剩余容量等。 与整个文件系统有关的数据，都保存在Super block（超级块）中，而df命令主要读取的数据几乎都针对的是整个文件系统，所以df命令主要是从各文件系统的Super block中读取数据。 不使用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-11T05:57:00.000Z"}],["meta",{"property":"article:published_time","content":"2024-03-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-11T05:57:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux磁盘相关命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-25T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-11T05:57:00.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"df：查看文件系统硬盘使用情况","slug":"df-查看文件系统硬盘使用情况","link":"#df-查看文件系统硬盘使用情况","children":[]},{"level":2,"title":"du：统计目录或文件所占磁盘空间大小","slug":"du-统计目录或文件所占磁盘空间大小","link":"#du-统计目录或文件所占磁盘空间大小","children":[{"level":3,"title":"du命令和df命令的区别","slug":"du命令和df命令的区别","link":"#du命令和df命令的区别","children":[]}]},{"level":2,"title":"free","slug":"free","link":"#free","children":[]}],"git":{"createdTime":1726034220000,"updatedTime":1726034220000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":6.16,"words":1849},"filePathRelative":"linux/linux基础/Linux磁盘相关命令.md","localizedDate":"2024年3月25日","autoDesc":true}');export{F as comp,d as data};
