import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as p}from"./app-Coac0FJ0.js";const o={};function F(e,s){return p(),a("div",null,s[0]||(s[0]=[l(`<p>在 Spring MVC 中，控制器在接收到 DispatcherServlet 分发过来的请求后，会继续调用 Model 层对请求进行处理。Model 层处理完请求后的结果被称为模型数据，会将模型数据返回给 Controller。Controller 在接收到 Model 层返回的模型数据后，下一步就是将模型数据通过域对象共享的方式传递给 View 视图进行渲染，最终返回给客户端展示。<br> 域对象是服务器在内存上创建的一块存储空间，主要用不同动态资源之间的数据传递和数据共享。在 Spring MVC 中，常用的域对象有 request 域对象、session 域对象、application 域对象等。</p><p>Spring MVC 提供了多种域对象共享数据的方式，其中最常用的方式如下：<br> 使用 Servlet API 向 request 域对象中共享数据<br> 使用 ModelAndView 向 request 域对象中共享数据<br> 使用 Model 向 request 域对象中共享数据<br> 使用 Map 向 request 域对象中共享数据<br> 使用 ModelMap 向 request 域对象中共享数据<br> 使用 Servlet API 向 session 域中共享数据<br> 使用 Servlet API 向 application 域中共享数据</p><h2 id="使用-servlet-api-向-request-域对象中共享数据" tabindex="-1"><a class="header-anchor" href="#使用-servlet-api-向-request-域对象中共享数据"><span>使用 Servlet API 向 request 域对象中共享数据</span></a></h2><p>我们可以在控制器方法中设置一个 HttpServletRequest 类型的形参。通过它，我们就可以将模型数据共享到 request 域对象中，示例代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/testServletAPI&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">testServletAPI</span><span style="color:#F0F3F6;">(HttpServletRequest request) {</span></span>
<span class="line"><span style="color:#F0F3F6;">    request.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;testScope&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;hello,Servet API&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#ADDCFF;"> &quot;success&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>由于这种方式是通过原生 Servlet API 实现的，会导致控制器与 Servlet 容器耦合度过高，因此通常情况下，我们不推荐使用这种方式向 request 域对象中共享数据。</p><h2 id="使用-modelandview-向-request-域对象中共享数据" tabindex="-1"><a class="header-anchor" href="#使用-modelandview-向-request-域对象中共享数据"><span>使用 ModelAndView 向 request 域对象中共享数据</span></a></h2><p>我们还可以通过 Spring 提供的 ModelAndView 向 reuqest 域对象中共享数据。ModelAndView 主要由 model（模型）和 view（视图）两部分组成。其中，model 负责数据共享，而 view 则主要用于设置视图，实现页面的跳转。</p><p>ModelAndView 为我们提供了多种方法，其中常用的方法如下表。</p><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>ModelAndView addObject(String attributeName, @Nullable Object attributeValue)</td><td>添加模型数据</td></tr><tr><td>ModelAndView addObject(Object attributeValue)</td><td>添加模型数据</td></tr><tr><td>ModelAndView addAllObjects(@Nullable Map&lt;String, ?&gt; modelMap)</td><td>添加模型数据</td></tr><tr><td>void setViewName(@Nullable String viewName)</td><td>设置视图</td></tr><tr><td>void setView(@Nullable View view)</td><td>设置视图</td></tr></tbody></table><p>在 Controller 类中，ModelAndView 只有在作为控制器方法的返回值，返回给前端控制器（DispatcherServlet）时，前端控制器解析才会去解析它，示例代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/testModelAndView&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> ModelAndView </span><span style="color:#DBB7FF;">testModelAndView</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#BDC4CC;">     /**</span></span>
<span class="line"><span style="color:#BDC4CC;">     * ModelAndView有Model和View的功能</span></span>
<span class="line"><span style="color:#BDC4CC;">     * Model主要用于向请求域共享数据</span></span>
<span class="line"><span style="color:#BDC4CC;">     * View主要用于设置视图，实现页面跳转</span></span>
<span class="line"><span style="color:#BDC4CC;">     */</span></span>
<span class="line"><span style="color:#F0F3F6;">    ModelAndView</span><span style="color:#F0F3F6;"> mav</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> ModelAndView</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">    //向请求域共享数据</span></span>
<span class="line"><span style="color:#F0F3F6;">    mav.</span><span style="color:#DBB7FF;">addObject</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;testScope&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;hello,ModelAndView&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#BDC4CC;">    //设置视图，实现页面跳转</span></span>
<span class="line"><span style="color:#F0F3F6;">    mav.</span><span style="color:#DBB7FF;">setViewName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;success&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#F0F3F6;"> mav;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="使用-model-向-request-域对象中共享数据" tabindex="-1"><a class="header-anchor" href="#使用-model-向-request-域对象中共享数据"><span>使用 Model 向 request 域对象中共享数据</span></a></h2><p>我们可以在 Controller 控制器方法中设置一个 Model 类型的形参。通过它，我们也可以向 request 域对象中共享数据，示例代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/testModel&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">testModel</span><span style="color:#F0F3F6;">(Model model) {</span></span>
<span class="line"><span style="color:#F0F3F6;">    model.</span><span style="color:#DBB7FF;">addAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;testScope&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;hello,Model&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#ADDCFF;"> &quot;success&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="使用-map-向-request-域对象中共享数据" tabindex="-1"><a class="header-anchor" href="#使用-map-向-request-域对象中共享数据"><span>使用 Map 向 request 域对象中共享数据</span></a></h2><p>我们可以在 Controller 控制器方法中设置一个 Map 类型的形参。通过它，我们也可以向 request 域对象中共享数据，示例代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/testMap&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">testMap</span><span style="color:#F0F3F6;">(Map</span><span style="color:#FF9492;">&lt;</span><span style="color:#F0F3F6;">String, Object</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> map) {</span></span>
<span class="line"><span style="color:#F0F3F6;">    map.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;testScope&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;hello,Map&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#ADDCFF;"> &quot;success&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="使用-modelmap-向-request-对象中共享数据" tabindex="-1"><a class="header-anchor" href="#使用-modelmap-向-request-对象中共享数据"><span>使用 ModelMap 向 request 对象中共享数据</span></a></h2><p>我们可以在 Controller 控制器方法中设置一个 ModelMap 类型的形参。通过它，我们也可以向 request 域对象中共享数据，示例代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/testModelMap&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">testModelMap</span><span style="color:#F0F3F6;">(ModelMap modelMap) {</span></span>
<span class="line"><span style="color:#F0F3F6;">    modelMap.</span><span style="color:#DBB7FF;">addAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;testScope&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;hello,ModelMap&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#ADDCFF;"> &quot;success&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="使用-servlet-api-向-session-域对象中共享数据" tabindex="-1"><a class="header-anchor" href="#使用-servlet-api-向-session-域对象中共享数据"><span>使用 Servlet API 向 session 域对象中共享数据</span></a></h2><p>我们可以在控制器方法中设置一个 HttpSession 类型的形参。通过它，我们就可以将数据共享到 session 域对象中，示例代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/testSession&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">testSession</span><span style="color:#F0F3F6;">(HttpSession session) {</span></span>
<span class="line"><span style="color:#F0F3F6;">    session.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;testSessionScope&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;hello,session&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#ADDCFF;"> &quot;success&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="使用-servlet-api-向-application-域对象中共享数据" tabindex="-1"><a class="header-anchor" href="#使用-servlet-api-向-application-域对象中共享数据"><span>使用 Servlet API 向 application 域对象中共享数据</span></a></h2><p>我们可以在控制器方法中设置一个 HttpSession 类型的形参，并通过它获取到 application 域对象，最终我们就可以将数据共享到 application 域对象中，示例代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/testApplication&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">testApplication</span><span style="color:#F0F3F6;">(HttpSession session) {</span></span>
<span class="line"><span style="color:#F0F3F6;">    ServletContext</span><span style="color:#F0F3F6;"> application</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> session.</span><span style="color:#DBB7FF;">getServletContext</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    application.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;testApplicationScope&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;hello,application&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#ADDCFF;"> &quot;success&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h2><p>实现通过域对象中共享数据，将模型数据返回到 view 视图中。</p><p><code>web.xml</code>配置。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">web-app</span><span style="color:#91CBFF;"> xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><span style="color:#91CBFF;"> xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;WebApp_ID&quot;</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;4.0&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">display-name</span><span style="color:#F0F3F6;">&gt;first-springmvc-demo&lt;/</span><span style="color:#72F088;">display-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!--请求和响应的字符串过滤器--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">filter</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">filter-name</span><span style="color:#F0F3F6;">&gt;CharacterEncodingFilter&lt;/</span><span style="color:#72F088;">filter-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">filter-class</span><span style="color:#F0F3F6;">&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/</span><span style="color:#72F088;">filter-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!--设置请求的编码--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;encoding&lt;/</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;UTF-8&lt;/</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!--设置响应的编码，这里我们可以省略--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;forceResponseEncoding&lt;/</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;true&lt;/</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">filter</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">filter-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">filter-name</span><span style="color:#F0F3F6;">&gt;CharacterEncodingFilter&lt;/</span><span style="color:#72F088;">filter-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/*&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">filter-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- 配置SpringMVC的前端控制器，对浏览器发送的请求统一进行处理 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;dispatcherServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;org.springframework.web.servlet.DispatcherServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!--配置 DispatcherServlet 的一个初始化参数：spring mvc 配置文件按的位置和名称--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;contextConfigLocation&lt;/</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;classpath:springMVC.xml&lt;/</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;1&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;dispatcherServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!--设置springMVC的核心控制器所能处理的请求的请求路径/所匹配的请求可以是/login或.html或.js或.css方式的请求路径但是/不能匹配.jsp请求路径的请求--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">web-app</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>Spring MVC 配置文件</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">beans</span><span style="color:#91CBFF;"> xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.springframework.org/schema/beans&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">       xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">       xmlns:context</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.springframework.org/schema/context&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">       xmlns:mvc</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.springframework.org/schema/mvc&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">       xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.springframework.org/schema/beans</span></span>
<span class="line"><span style="color:#ADDCFF;">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span>
<span class="line"><span style="color:#ADDCFF;">       http://www.springframework.org/schema/context</span></span>
<span class="line"><span style="color:#ADDCFF;">       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!--开启组件扫描--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">context:component-scan</span><span style="color:#91CBFF;"> base-package</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;net.biancheng.c&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">context:component-scan</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- 配置 Thymeleaf 视图解析器 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">bean</span><span style="color:#91CBFF;"> id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;viewResolver&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">          class</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;org.thymeleaf.spring5.view.ThymeleafViewResolver&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;order&quot;</span><span style="color:#91CBFF;"> value</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1&quot;</span><span style="color:#F0F3F6;">/&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;characterEncoding&quot;</span><span style="color:#91CBFF;"> value</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">/&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;templateEngine&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">bean</span><span style="color:#91CBFF;"> class</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;org.thymeleaf.spring5.SpringTemplateEngine&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;templateResolver&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                    &lt;</span><span style="color:#72F088;">bean</span><span style="color:#91CBFF;"> class</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">                        &lt;!-- 视图前缀 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                        &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;prefix&quot;</span><span style="color:#91CBFF;"> value</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;/WEB-INF/templates/&quot;</span><span style="color:#F0F3F6;">/&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">                        &lt;!-- 视图后缀 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                        &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;suffix&quot;</span><span style="color:#91CBFF;"> value</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;.html&quot;</span><span style="color:#F0F3F6;">/&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                        &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;templateMode&quot;</span><span style="color:#91CBFF;"> value</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;HTML5&quot;</span><span style="color:#F0F3F6;">/&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                        &lt;</span><span style="color:#72F088;">property</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;characterEncoding&quot;</span><span style="color:#91CBFF;"> value</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">/&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                    &lt;/</span><span style="color:#72F088;">bean</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                &lt;/</span><span style="color:#72F088;">property</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;/</span><span style="color:#72F088;">bean</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">property</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">bean</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">beans</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>User 的实体类</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.c.entity;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> User</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> String</span><span style="color:#F0F3F6;"> userId;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> String</span><span style="color:#F0F3F6;"> userName;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> String</span><span style="color:#F0F3F6;"> password;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">getUserId</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> userId;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> setUserId</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">userId</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#91CBFF;">        this</span><span style="color:#F0F3F6;">.userId </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> userId;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">getUserName</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> userName;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> setUserName</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">userName</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#91CBFF;">        this</span><span style="color:#F0F3F6;">.userName </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> userName;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">getPassword</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> password;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> setPassword</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">password</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#91CBFF;">        this</span><span style="color:#F0F3F6;">.password </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> password;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">toString</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;User{&quot;</span><span style="color:#FF9492;"> +</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;userId=&#39;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> userId </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &#39;</span><span style="color:#FF9492;">\\&#39;</span><span style="color:#ADDCFF;">&#39;</span><span style="color:#FF9492;"> +</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;, userName=&#39;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> userName </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &#39;</span><span style="color:#FF9492;">\\&#39;</span><span style="color:#ADDCFF;">&#39;</span><span style="color:#FF9492;"> +</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;, password=&#39;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> password </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &#39;</span><span style="color:#FF9492;">\\&#39;</span><span style="color:#ADDCFF;">&#39;</span><span style="color:#FF9492;"> +</span></span>
<span class="line"><span style="color:#ADDCFF;">                &#39;}&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>Product 的实体类</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.c.entity;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> java.math.BigDecimal;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> Product</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> Integer</span><span style="color:#F0F3F6;"> productId;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> String</span><span style="color:#F0F3F6;"> productName;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> BigDecimal</span><span style="color:#F0F3F6;"> price;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> Integer</span><span style="color:#F0F3F6;"> storage;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> Integer </span><span style="color:#DBB7FF;">getProductId</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> productId;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> setProductId</span><span style="color:#F0F3F6;">(Integer </span><span style="color:#FFB757;">productId</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#91CBFF;">        this</span><span style="color:#F0F3F6;">.productId </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> productId;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">getProductName</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> productName;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> setProductName</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">productName</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#91CBFF;">        this</span><span style="color:#F0F3F6;">.productName </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> productName;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> BigDecimal </span><span style="color:#DBB7FF;">getPrice</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> price;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> setPrice</span><span style="color:#F0F3F6;">(BigDecimal </span><span style="color:#FFB757;">price</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#91CBFF;">        this</span><span style="color:#F0F3F6;">.price </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> price;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> Integer </span><span style="color:#DBB7FF;">getStorage</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> storage;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> setStorage</span><span style="color:#F0F3F6;">(Integer </span><span style="color:#FFB757;">storage</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#91CBFF;">        this</span><span style="color:#F0F3F6;">.storage </span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;"> storage;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">toString</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;Product{&quot;</span><span style="color:#FF9492;"> +</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;productId=&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> productId </span><span style="color:#FF9492;">+</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;, productName=&#39;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> productName </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &#39;</span><span style="color:#FF9492;">\\&#39;</span><span style="color:#ADDCFF;">&#39;</span><span style="color:#FF9492;"> +</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;, price=&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> price </span><span style="color:#FF9492;">+</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;, storage=&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> storage </span><span style="color:#FF9492;">+</span></span>
<span class="line"><span style="color:#ADDCFF;">                &#39;}&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>Controller 类</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.c.controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.entity.User;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.service.UserService;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.beans.factory.annotation.Autowired;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.stereotype.Controller;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.web.bind.annotation.RequestMapping;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.http.HttpServletRequest;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.http.HttpSession;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Controller</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> LoginController</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Autowired</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> UserService</span><span style="color:#F0F3F6;"> userService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/user&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">sayHello</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;user&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/login&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">login</span><span style="color:#F0F3F6;">(User </span><span style="color:#FFB757;">user</span><span style="color:#F0F3F6;">, HttpServletRequest </span><span style="color:#FFB757;">request</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        User</span><span style="color:#F0F3F6;"> user2</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> userService.</span><span style="color:#DBB7FF;">getUserByUserName</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">getUserName</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#FF9492;">        if</span><span style="color:#F0F3F6;"> (user2 </span><span style="color:#FF9492;">!=</span><span style="color:#91CBFF;"> null</span><span style="color:#FF9492;"> &amp;&amp;</span><span style="color:#F0F3F6;"> user2.</span><span style="color:#DBB7FF;">getPassword</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">equals</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">getPassword</span><span style="color:#F0F3F6;">())) {</span></span>
<span class="line"><span style="color:#F0F3F6;">            HttpSession</span><span style="color:#F0F3F6;"> session</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> request.</span><span style="color:#DBB7FF;">getSession</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">            session.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;loginUser&quot;</span><span style="color:#F0F3F6;">, user2);</span></span>
<span class="line"><span style="color:#FF9492;">            return</span><span style="color:#ADDCFF;"> &quot;redirect:/getProductList&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">        }</span></span>
<span class="line"><span style="color:#F0F3F6;">        request.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;msg&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;账号或密码错误！&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;user&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.c.controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.entity.User;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.service.UserService;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.beans.factory.annotation.Autowired;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.stereotype.Controller;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.web.bind.annotation.RequestMapping;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.http.HttpServletRequest;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.http.HttpSession;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Controller</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> LoginController</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Autowired</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> UserService</span><span style="color:#F0F3F6;"> userService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/user&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">sayHello</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;user&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/login&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">login</span><span style="color:#F0F3F6;">(User </span><span style="color:#FFB757;">user</span><span style="color:#F0F3F6;">, HttpServletRequest </span><span style="color:#FFB757;">request</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        User</span><span style="color:#F0F3F6;"> user2</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> userService.</span><span style="color:#DBB7FF;">getUserByUserName</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">getUserName</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#FF9492;">        if</span><span style="color:#F0F3F6;"> (user2 </span><span style="color:#FF9492;">!=</span><span style="color:#91CBFF;"> null</span><span style="color:#FF9492;"> &amp;&amp;</span><span style="color:#F0F3F6;"> user2.</span><span style="color:#DBB7FF;">getPassword</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">equals</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">getPassword</span><span style="color:#F0F3F6;">())) {</span></span>
<span class="line"><span style="color:#F0F3F6;">            HttpSession</span><span style="color:#F0F3F6;"> session</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> request.</span><span style="color:#DBB7FF;">getSession</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">            session.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;loginUser&quot;</span><span style="color:#F0F3F6;">, user2);</span></span>
<span class="line"><span style="color:#FF9492;">            return</span><span style="color:#ADDCFF;"> &quot;redirect:/getProductList&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">        }</span></span>
<span class="line"><span style="color:#F0F3F6;">        request.</span><span style="color:#DBB7FF;">setAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;msg&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;账号或密码错误！&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;user&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.c.controller;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.entity.Product;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.service.ProductService;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.beans.factory.annotation.Autowired;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.stereotype.Controller;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.ui.Model;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.web.bind.annotation.RequestMapping;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.web.servlet.ModelAndView;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> java.util.List;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Controller</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> ProductController</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Autowired</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> ProductService</span><span style="color:#F0F3F6;"> productService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/getProductList&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> ModelAndView </span><span style="color:#DBB7FF;">getProductList</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#F0F3F6;">        ModelAndView</span><span style="color:#F0F3F6;"> modelAndView</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> ModelAndView</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        modelAndView.</span><span style="color:#DBB7FF;">setViewName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;productList&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        List</span><span style="color:#FFB757;">&lt;</span><span style="color:#FF9492;">Product</span><span style="color:#FFB757;">&gt; </span><span style="color:#F0F3F6;">productList</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> productService.</span><span style="color:#DBB7FF;">getProductList</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        modelAndView.</span><span style="color:#DBB7FF;">addObject</span><span style="color:#F0F3F6;">(productList);</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> modelAndView;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">RequestMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/getProduct&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> String </span><span style="color:#DBB7FF;">getProduct</span><span style="color:#F0F3F6;">(Integer </span><span style="color:#FFB757;">productId</span><span style="color:#F0F3F6;">, Model </span><span style="color:#FFB757;">model</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        Product</span><span style="color:#F0F3F6;"> productById</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> productService.</span><span style="color:#DBB7FF;">getProductById</span><span style="color:#F0F3F6;">(productId);</span></span>
<span class="line"><span style="color:#F0F3F6;">        model.</span><span style="color:#DBB7FF;">addAttribute</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;product&quot;</span><span style="color:#F0F3F6;">, productById);</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#ADDCFF;"> &quot;product&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>UserService 的接口</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> interface</span><span style="color:#FFB757;"> UserService</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    User </span><span style="color:#DBB7FF;">getUserByUserName</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">userName</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>UserService 接口的实现类 UserServiceImpl</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Service</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;userService&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> UserServiceImpl</span><span style="color:#FF9492;"> implements</span><span style="color:#91CBFF;"> UserService</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Autowired</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> UserDao</span><span style="color:#F0F3F6;"> userDao;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> User </span><span style="color:#DBB7FF;">getUserByUserName</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">userName</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> userDao.</span><span style="color:#DBB7FF;">getUserByUserName</span><span style="color:#F0F3F6;">(userName);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>ProductService 的接口</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> interface</span><span style="color:#FFB757;"> ProductService</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    List&lt;</span><span style="color:#FF9492;">Product</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#DBB7FF;">getProductList</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    Product </span><span style="color:#DBB7FF;">getProductById</span><span style="color:#F0F3F6;">(Integer </span><span style="color:#FFB757;">productId</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>ProductService 接口的实现类 ProductServiceImpl</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Service</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;productService&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> ProductServiceImpl</span><span style="color:#FF9492;"> implements</span><span style="color:#91CBFF;"> ProductService</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Autowired</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> ProductDao</span><span style="color:#F0F3F6;"> productDao;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> List&lt;</span><span style="color:#FF9492;">Product</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#DBB7FF;">getProductList</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> productDao.</span><span style="color:#DBB7FF;">getProductList</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> Product </span><span style="color:#DBB7FF;">getProductById</span><span style="color:#F0F3F6;">(Integer </span><span style="color:#FFB757;">productId</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> productDao.</span><span style="color:#DBB7FF;">getProductById</span><span style="color:#F0F3F6;">(productId);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>UserDao 的类</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.c.dao;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.entity.User;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.stereotype.Repository;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> java.util.</span><span style="color:#91CBFF;">*</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Repository</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> UserDao</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#F0F3F6;"> Map</span><span style="color:#FFB757;">&lt;</span><span style="color:#FF9492;">String</span><span style="color:#FFB757;">, </span><span style="color:#FF9492;">User</span><span style="color:#FFB757;">&gt; </span><span style="color:#F0F3F6;">users</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> null</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    static</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">        users </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> new</span><span style="color:#F0F3F6;"> HashMap&lt;</span><span style="color:#FF9492;">String</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">User</span><span style="color:#F0F3F6;">&gt;();</span></span>
<span class="line"><span style="color:#F0F3F6;">        User</span><span style="color:#F0F3F6;"> user</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> User</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        user.</span><span style="color:#DBB7FF;">setUserId</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;1001&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user.</span><span style="color:#DBB7FF;">setUserName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;C语言中文网默认用户&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user.</span><span style="color:#DBB7FF;">setPassword</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;123456789&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        User</span><span style="color:#F0F3F6;"> user1</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> User</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        user1.</span><span style="color:#DBB7FF;">setUserId</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;1002&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user1.</span><span style="color:#DBB7FF;">setUserName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;南忘&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user1.</span><span style="color:#DBB7FF;">setPassword</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;qwertyuiop&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        User</span><span style="color:#F0F3F6;"> user2</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> User</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        user2.</span><span style="color:#DBB7FF;">setUserId</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;1003&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user2.</span><span style="color:#DBB7FF;">setUserName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Java用户&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user2.</span><span style="color:#DBB7FF;">setPassword</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;987654321&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        User</span><span style="color:#F0F3F6;"> user3</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> User</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        user3.</span><span style="color:#DBB7FF;">setUserId</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;1004&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user3.</span><span style="color:#DBB7FF;">setUserName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;李小龙&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        user3.</span><span style="color:#DBB7FF;">setPassword</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;1qazxsw2&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        users.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">getUserName</span><span style="color:#F0F3F6;">(), user);</span></span>
<span class="line"><span style="color:#F0F3F6;">        users.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(user1.</span><span style="color:#DBB7FF;">getUserName</span><span style="color:#F0F3F6;">(), user1);</span></span>
<span class="line"><span style="color:#F0F3F6;">        users.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(user2.</span><span style="color:#DBB7FF;">getUserName</span><span style="color:#F0F3F6;">(), user2);</span></span>
<span class="line"><span style="color:#F0F3F6;">        users.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(user3.</span><span style="color:#DBB7FF;">getUserName</span><span style="color:#F0F3F6;">(), user3);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> List </span><span style="color:#DBB7FF;">getUserList</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#F0F3F6;">        List</span><span style="color:#F0F3F6;"> userList</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> ArrayList</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        Set</span><span style="color:#FFB757;">&lt;</span><span style="color:#FF9492;">String</span><span style="color:#FFB757;">&gt; </span><span style="color:#F0F3F6;">keys</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> users.</span><span style="color:#DBB7FF;">keySet</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#FF9492;">        for</span><span style="color:#F0F3F6;"> (String</span><span style="color:#F0F3F6;"> key</span><span style="color:#FF9492;"> :</span><span style="color:#F0F3F6;"> keys) {</span></span>
<span class="line"><span style="color:#F0F3F6;">            User</span><span style="color:#F0F3F6;"> user</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> users.</span><span style="color:#DBB7FF;">get</span><span style="color:#F0F3F6;">(key);</span></span>
<span class="line"><span style="color:#F0F3F6;">            userList.</span><span style="color:#DBB7FF;">add</span><span style="color:#F0F3F6;">(user);</span></span>
<span class="line"><span style="color:#F0F3F6;">        }</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> userList;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> User </span><span style="color:#DBB7FF;">getUserByUserName</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">userName</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        User</span><span style="color:#F0F3F6;"> user</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> users.</span><span style="color:#DBB7FF;">get</span><span style="color:#F0F3F6;">(userName);</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> user;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> addUser</span><span style="color:#F0F3F6;">(User </span><span style="color:#FFB757;">user</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        users.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">getUserId</span><span style="color:#F0F3F6;">(), user);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> update</span><span style="color:#F0F3F6;">(User </span><span style="color:#FFB757;">user</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        users.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">getUserId</span><span style="color:#F0F3F6;">(), user);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> delete</span><span style="color:#F0F3F6;">(String </span><span style="color:#FFB757;">userId</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        users.</span><span style="color:#DBB7FF;">remove</span><span style="color:#F0F3F6;">(userId);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>ProductDao 的类</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.c.dao;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.entity.Product;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> net.biancheng.c.entity.User;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> org.springframework.stereotype.Repository;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> java.math.BigDecimal;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> java.util.</span><span style="color:#91CBFF;">*</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Repository</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> ProductDao</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#F0F3F6;"> Map</span><span style="color:#FFB757;">&lt;</span><span style="color:#FF9492;">Integer</span><span style="color:#FFB757;">, </span><span style="color:#FF9492;">Product</span><span style="color:#FFB757;">&gt; </span><span style="color:#F0F3F6;">products</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> null</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    static</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">        products </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> new</span><span style="color:#F0F3F6;"> HashMap&lt;</span><span style="color:#FF9492;">Integer</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">Product</span><span style="color:#F0F3F6;">&gt;();</span></span>
<span class="line"><span style="color:#F0F3F6;">        Product</span><span style="color:#F0F3F6;"> product</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> Product</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        product.</span><span style="color:#DBB7FF;">setProductId</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product.</span><span style="color:#DBB7FF;">setProductName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;茅台&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product.</span><span style="color:#DBB7FF;">setPrice</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> BigDecimal</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">9999</span><span style="color:#F0F3F6;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        Product</span><span style="color:#F0F3F6;"> product1</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> Product</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        product1.</span><span style="color:#DBB7FF;">setProductId</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">2</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product1.</span><span style="color:#DBB7FF;">setProductName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;五粮液&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product1.</span><span style="color:#DBB7FF;">setPrice</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> BigDecimal</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">8888</span><span style="color:#F0F3F6;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        Product</span><span style="color:#F0F3F6;"> product2</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> Product</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        product2.</span><span style="color:#DBB7FF;">setProductId</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">3</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product2.</span><span style="color:#DBB7FF;">setProductName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;信阳毛尖&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product2.</span><span style="color:#DBB7FF;">setPrice</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> BigDecimal</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">7777</span><span style="color:#F0F3F6;">));</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        Product</span><span style="color:#F0F3F6;"> product3</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> Product</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        product3.</span><span style="color:#DBB7FF;">setProductId</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">4</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product3.</span><span style="color:#DBB7FF;">setProductName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;深州大蜜桃&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        product3.</span><span style="color:#DBB7FF;">setPrice</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> BigDecimal</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">6666</span><span style="color:#F0F3F6;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        products.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(product.</span><span style="color:#DBB7FF;">getProductId</span><span style="color:#F0F3F6;">(), product);</span></span>
<span class="line"><span style="color:#F0F3F6;">        products.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(product1.</span><span style="color:#DBB7FF;">getProductId</span><span style="color:#F0F3F6;">(), product1);</span></span>
<span class="line"><span style="color:#F0F3F6;">        products.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(product2.</span><span style="color:#DBB7FF;">getProductId</span><span style="color:#F0F3F6;">(), product2);</span></span>
<span class="line"><span style="color:#F0F3F6;">        products.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(product3.</span><span style="color:#DBB7FF;">getProductId</span><span style="color:#F0F3F6;">(), product3);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> List </span><span style="color:#DBB7FF;">getProductList</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#F0F3F6;">        List</span><span style="color:#F0F3F6;"> productList</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#DBB7FF;"> ArrayList</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        Set</span><span style="color:#FFB757;">&lt;</span><span style="color:#FF9492;">Integer</span><span style="color:#FFB757;">&gt; </span><span style="color:#F0F3F6;">keys</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> products.</span><span style="color:#DBB7FF;">keySet</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#FF9492;">        for</span><span style="color:#F0F3F6;"> (Integer</span><span style="color:#F0F3F6;"> key</span><span style="color:#FF9492;"> :</span><span style="color:#F0F3F6;"> keys) {</span></span>
<span class="line"><span style="color:#F0F3F6;">            Product</span><span style="color:#F0F3F6;"> product</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> products.</span><span style="color:#DBB7FF;">get</span><span style="color:#F0F3F6;">(key);</span></span>
<span class="line"><span style="color:#F0F3F6;">            productList.</span><span style="color:#DBB7FF;">add</span><span style="color:#F0F3F6;">(product);</span></span>
<span class="line"><span style="color:#F0F3F6;">        }</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> productList;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#F0F3F6;"> Product </span><span style="color:#DBB7FF;">getProductById</span><span style="color:#F0F3F6;">(Integer </span><span style="color:#FFB757;">productId</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> products.</span><span style="color:#DBB7FF;">get</span><span style="color:#F0F3F6;">(productId);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>user.html</p><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;!</span><span style="color:#72F088;">DOCTYPE</span><span style="color:#91CBFF;"> html</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">html</span><span style="color:#91CBFF;"> lang</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;en&quot;</span><span style="color:#91CBFF;"> xmlns:th</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.thymeleaf.org&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">meta</span><span style="color:#91CBFF;"> charset</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">title</span><span style="color:#F0F3F6;">&gt;test&lt;/</span><span style="color:#72F088;">title</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">form</span><span style="color:#91CBFF;"> th:action</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;@{/login}&quot;</span><span style="color:#91CBFF;"> method</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;post&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">table</span><span style="color:#91CBFF;"> style</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;margin: auto&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> colspan</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;2&quot;</span><span style="color:#FFB1AF;font-style:italic;"> align</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;center&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">                &lt;</span><span style="color:#72F088;">p</span><span style="color:#91CBFF;"> style</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;color: red;margin: auto&quot;</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${msg}&quot;</span><span style="color:#91CBFF;"> th:if</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${not #strings.isEmpty(msg)}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">p</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;用户名：&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;&lt;</span><span style="color:#72F088;">input</span><span style="color:#91CBFF;"> type</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;text&quot;</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;userName&quot;</span><span style="color:#91CBFF;"> required</span><span style="color:#F0F3F6;">&gt;&lt;</span><span style="color:#72F088;">br</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;密码：&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;&lt;</span><span style="color:#72F088;">input</span><span style="color:#91CBFF;"> type</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;password&quot;</span><span style="color:#91CBFF;"> name</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;password&quot;</span><span style="color:#91CBFF;"> required</span><span style="color:#F0F3F6;">&gt;&lt;</span><span style="color:#72F088;">br</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> colspan</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;2&quot;</span><span style="color:#FFB1AF;font-style:italic;"> align</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;center&quot;</span><span style="color:#F0F3F6;">&gt;&lt;</span><span style="color:#72F088;">input</span><span style="color:#91CBFF;"> type</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;submit&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">table</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">form</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">html</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>productList.html</p><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;!</span><span style="color:#72F088;">DOCTYPE</span><span style="color:#91CBFF;"> html</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">html</span><span style="color:#91CBFF;"> lang</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;en&quot;</span><span style="color:#91CBFF;"> xmlns:th</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.thymeleaf.org&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">meta</span><span style="color:#91CBFF;"> charset</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">title</span><span style="color:#F0F3F6;">&gt;Title&lt;/</span><span style="color:#72F088;">title</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">h1</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;&#39;欢迎您：&#39;+\${session.loginUser.getUserName()}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">h1</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">table</span><span style="color:#91CBFF;"> th:border</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1&quot;</span><span style="color:#91CBFF;"> th:cellspacing</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;0&quot;</span><span style="color:#91CBFF;"> th:cellpadding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;10&quot;</span><span style="color:#91CBFF;"> style</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;text-align: center;&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">thead</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;商品id&lt;/</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;商品名&lt;/</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;商品价格&lt;/</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;操作&lt;/</span><span style="color:#72F088;">th</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">thead</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">tbody</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">tr</span><span style="color:#91CBFF;"> th:each</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;m:\${productList}&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${m.getProductId()}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${m.getProductName()}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${m.getPrice()}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">            &lt;</span><span style="color:#72F088;">a</span><span style="color:#91CBFF;"> th:href</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;@{/getProduct(productId=\${m.getProductId()})}&quot;</span><span style="color:#F0F3F6;">&gt;查看商品详细信息&lt;/</span><span style="color:#72F088;">a</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">tbody</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">table</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">html</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>product.html</p><div class="language-html" data-highlighter="shiki" data-ext="html" data-title="html" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;!</span><span style="color:#72F088;">DOCTYPE</span><span style="color:#91CBFF;"> html</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">html</span><span style="color:#91CBFF;"> lang</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;en&quot;</span><span style="color:#91CBFF;"> xmlns:th</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.thymeleaf.org&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">meta</span><span style="color:#91CBFF;"> charset</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">title</span><span style="color:#F0F3F6;">&gt;Title&lt;/</span><span style="color:#72F088;">title</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">head</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">table</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt; 商品ID：&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${product.getProductId()}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;商品名：&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${product.getProductName()}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;商品价格：&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">td</span><span style="color:#91CBFF;"> th:text</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;\${product.getPrice()}&quot;</span><span style="color:#F0F3F6;">&gt;&lt;/</span><span style="color:#72F088;">td</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">tr</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">table</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">a</span><span style="color:#91CBFF;"> th:href</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;@{/getProductList}&quot;</span><span style="color:#F0F3F6;">&gt;返回首页&lt;/</span><span style="color:#72F088;">a</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">body</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">html</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div>`,59)]))}const c=n(o,[["render",F],["__file","SpringMVC域对象共享数据.html.vue"]]),y=JSON.parse('{"path":"/java/springMVC/SpringMVC%E5%9F%9F%E5%AF%B9%E8%B1%A1%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE.html","title":"","lang":"zh-CN","frontmatter":{"description":"在 Spring MVC 中，控制器在接收到 DispatcherServlet 分发过来的请求后，会继续调用 Model 层对请求进行处理。Model 层处理完请求后的结果被称为模型数据，会将模型数据返回给 Controller。Controller 在接收到 Model 层返回的模型数据后，下一步就是将模型数据通过域对象共享的方式传递给 View ...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/java/springMVC/SpringMVC%E5%9F%9F%E5%AF%B9%E8%B1%A1%E5%85%B1%E4%BA%AB%E6%95%B0%E6%8D%AE.html"}],["meta",{"property":"og:description","content":"在 Spring MVC 中，控制器在接收到 DispatcherServlet 分发过来的请求后，会继续调用 Model 层对请求进行处理。Model 层处理完请求后的结果被称为模型数据，会将模型数据返回给 Controller。Controller 在接收到 Model 层返回的模型数据后，下一步就是将模型数据通过域对象共享的方式传递给 View ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T09:49:11.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T09:49:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-23T09:49:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"使用 Servlet API 向 request 域对象中共享数据","slug":"使用-servlet-api-向-request-域对象中共享数据","link":"#使用-servlet-api-向-request-域对象中共享数据","children":[]},{"level":2,"title":"使用 ModelAndView 向 request 域对象中共享数据","slug":"使用-modelandview-向-request-域对象中共享数据","link":"#使用-modelandview-向-request-域对象中共享数据","children":[]},{"level":2,"title":"使用 Model 向 request 域对象中共享数据","slug":"使用-model-向-request-域对象中共享数据","link":"#使用-model-向-request-域对象中共享数据","children":[]},{"level":2,"title":"使用 Map 向 request 域对象中共享数据","slug":"使用-map-向-request-域对象中共享数据","link":"#使用-map-向-request-域对象中共享数据","children":[]},{"level":2,"title":"使用 ModelMap 向 request 对象中共享数据","slug":"使用-modelmap-向-request-对象中共享数据","link":"#使用-modelmap-向-request-对象中共享数据","children":[]},{"level":2,"title":"使用 Servlet API 向 session 域对象中共享数据","slug":"使用-servlet-api-向-session-域对象中共享数据","link":"#使用-servlet-api-向-session-域对象中共享数据","children":[]},{"level":2,"title":"使用 Servlet API 向 application 域对象中共享数据","slug":"使用-servlet-api-向-application-域对象中共享数据","link":"#使用-servlet-api-向-application-域对象中共享数据","children":[]},{"level":2,"title":"示例","slug":"示例","link":"#示例","children":[]}],"git":{"createdTime":1745401751000,"updatedTime":1745401751000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":8.57,"words":2570},"filePathRelative":"java/springMVC/SpringMVC域对象共享数据.md","localizedDate":"2025年4月23日","autoDesc":true}');export{c as comp,y as data};
