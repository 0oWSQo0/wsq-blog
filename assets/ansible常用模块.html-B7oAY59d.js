import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,o as e}from"./app-CRBxQhNH.js";const t={};function p(o,s){return e(),n("div",null,s[0]||(s[0]=[l(`<p>Ansible 默认提供了很多模块来供我们使用，<a href="https://docs.ansible.com/ansible/2.9/modules/modules_by_category.html" target="_blank" rel="noopener noreferrer">常用模块帮助文档 2.9.x</a>。</p><p>我们可以通过<code>ansible-doc -l</code>命令查看到当前<code>ansible</code>都支持哪些模块。</p><p>通过<code>ansible-doc -s 模块名</code>可以查看该模块有哪些参数可以使用。</p><h2 id="ping-模块" tabindex="-1"><a class="header-anchor" href="#ping-模块"><span>ping 模块</span></a></h2><p>检测远程主机的连通性。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">root@localhost:~#</span><span style="color:#ADDCFF;"> ansible</span><span style="color:#ADDCFF;"> qkx1</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"><span style="color:#FFB757;">qkx1</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> SUCCESS</span><span style="color:#F0F3F6;"> =</span><span style="color:#FF9492;">&gt;</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;ansible_facts&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;discovered_interpreter_python&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;/usr/bin/python3&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">    },</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;changed&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;ping&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;pong&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="command-模块" tabindex="-1"><a class="header-anchor" href="#command-模块"><span>command 模块</span></a></h2><p>在远程主机执行系统命令，此为默认模块，可忽略<code>-m</code>选项。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>不支持<code>$VARNAME &lt; &gt; | ; &amp;</code>等，不具有幂等性</p></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># command 模块不支持重定向</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;echo hello &gt; /root/hello.log&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;cat /root/hello.log&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># command 模块不支持变量引用  </span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;echo </span><span style="color:#F0F3F6;">$HOSTNAME</span><span style="color:#ADDCFF;">&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># command 模块不支持管道符</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;echo 123456 | passwd --stdin wangj&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 仅支持简单的 Shell 命令, 且不具备幂等性</span></span>
<span class="line"><span style="color:#BDC4CC;"># 首行 WARNING 是告知我们所执行的操作可以使用其他模块代替</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;mkdir /data&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;touch /data/1.log&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;ls /data&#39;</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">参数</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">chdir</td><td style="text-align:left;">运行 command 命令前先 cd 到这个目录</td></tr><tr><td style="text-align:center;">creates</td><td style="text-align:left;">如果这个参数对应的文件存在，就不运行 command</td></tr><tr><td style="text-align:center;">removes</td><td style="text-align:left;">如果这个参数对应的文件不存在，就不运行 command</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># chdir 参数</span></span>
<span class="line"><span style="color:#BDC4CC;"># 先切换到 /data 目录, 然后执行 ls -l 命令</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;chdir=/data ls -l&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># creates,removes 参数</span></span>
<span class="line"><span style="color:#BDC4CC;"># 如果 /data/mysql 目录存在, 则跳过创建.</span></span>
<span class="line"><span style="color:#BDC4CC;"># 如果 /data/mysql 目录不存在, 则创建 /data/mysql 目录.</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;creates=/data/mysql mkdir /data/mysql&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> command</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;removes=/data/mysql mkdir /data/mysql&#39;</span></span></code></pre></div><p>总结：</p><ul><li><code>command</code>模块的命令不支持启动 Shell，直接通过 SSH 执行命令</li><li><code>command</code>不支持 Bash 的特性，如管道和重定向等功能</li><li>若需要通过 Shell 运行一个命令，比如<code>&lt; &gt; |</code>等，需要使用 Shell 模块</li><li><code>command</code>模块更安全，因为它不受用户环境的影响</li></ul><h2 id="shell-模块" tabindex="-1"><a class="header-anchor" href="#shell-模块"><span>shell 模块</span></a></h2><p>让远程主机在 Shell 进程下执行命令，从而支持 Shell 的特性，如管道等。此模块不具有幂等性。</p><p>与<code>command</code>模块几乎相同，但在执行命令的时候使用的是<code>/bin/sh</code>。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意： Command 和 Shell 模块都只能去执行一些非交互式的命令，不能去执行一些交互式的命令，比如 vim 或 top。</p></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># Shell 模块支持变量引用</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m shell -a </span><span style="color:#ADDCFF;">&#39;echo $HOSTNAME&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># Shell 模块支持管道符</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m shell -a </span><span style="color:#ADDCFF;">&#39;useradd wangj&#39;</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m shell -a </span><span style="color:#ADDCFF;">&#39;echo 123456 | passwd --stdin wangj&#39;</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m shell -a </span><span style="color:#ADDCFF;">&#39;ls -l /etc/shadow&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># Shell 模块支持重定向</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m shell -a </span><span style="color:#ADDCFF;">&#39;echo hello &gt; /data/hello.log&#39;</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m shell -a </span><span style="color:#ADDCFF;">&#39;cat /data/hello.log&#39;</span></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>即使是调用 bash 执行命令，类似<code>cat /tmp/test.md | awk -F&#39;|&#39; &#39;{print $1,$2}&#39; &amp;&gt; /tmp/example.txt</code>这些复杂命令，使用 Shell 模块也可能会失败。</p><p>解决办法： 建议写到脚本中，copy 到远程，执行，再把需要的结果拉回执行命令的机器</p></div><h2 id="script-模块" tabindex="-1"><a class="header-anchor" href="#script-模块"><span>script 模块</span></a></h2><p>在远程主机上运行 Ansible 服务器上的脚本，此模块不具有幂等性。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> script</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;/root/test.sh&#39;</span></span></code></pre></div><h2 id="copy-模块" tabindex="-1"><a class="header-anchor" href="#copy-模块"><span>copy 模块</span></a></h2><p>从 Ansible 服务器主控端复制文件到远程主机。<code>src=file</code>如果没指明绝对路径，则为当前目录或当前目录下的<code>files</code>目录下的<code>file</code>文件。</p><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>src</td><td>被复制到远程主机的本地文件，如果路径是一个目录，则会递归复制</td><td>path</td></tr><tr><td>dest</td><td>远程主机目录，必选项</td><td>path</td></tr><tr><td>mode</td><td>复制到远程主机后文件的权限</td><td>string</td></tr><tr><td>owner</td><td>复制到远程主机后文件的属主</td><td>string</td></tr><tr><td>group</td><td>复制到远程主机后文件的属组</td><td>string</td></tr><tr><td>content</td><td>content作为内容，复制到远程主机，不能与<code>src</code>一起使用</td><td>string</td></tr><tr><td>backup</td><td>当文件内容发生改变后，在覆盖之前是否把源文件备份</td><td>no(默认)/yes</td></tr><tr><td>force</td><td>当目标主机包含该文件，但内容不同时，设为&quot;yes&quot;，表示强制覆盖；设为&quot;no&quot;，表示目标主机的目标位置不存在该文件才复制</td><td>no/yes(默认)</td></tr><tr><td>directory_mode</td><td>递归设定目录的权限，默认为系统默认权限</td><td></td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># backup 参数</span></span>
<span class="line"><span style="color:#BDC4CC;"># 如目标存在, 默认覆盖, 此处指定先备份</span></span>
<span class="line"><span style="color:#BDC4CC;"># ansible websrvs -m shell -a &#39;useradd wangj&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> copy</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=/root/test.sh dest=/root/test01.sh owner=wangj group=bin backup=yes&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># content 参数</span></span>
<span class="line"><span style="color:#BDC4CC;"># 指定内容, 直接生成目标文件    </span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> copy</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;content=&#39;test line1\\ntest line2\\n&#39; dest=/tmp/test.txt&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 复制 /etc 目录自身. ( 注意: /etc 后面没有 / )</span></span>
<span class="line"><span style="color:#BDC4CC;"># ansible websrvs -m shell -a &quot;mkdir /backup&quot;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> copy</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;src=/etc dest=/backup&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 复制 /etc/ 下的文件, 不包括 /etc 目录自身. ( 注意: /etc/ 后面有 / )</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> copy</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;src=/etc/ dest=/backup&quot;</span></span></code></pre></div><h2 id="get-url-模块" tabindex="-1"><a class="header-anchor" href="#get-url-模块"><span>get_url 模块</span></a></h2><p>用于将文件从<code>http、https</code>或<code>ftp</code>下载到被管理机节点上。被管理机节点必须要能够直接访问对应的远程资源。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>url</td><td>下载文件的 URL，支持 HTTP, HTTPS 或 FTP 协议</td></tr><tr><td>dest</td><td>下载到目标路径(绝对路径)，如果目标是一个目录，就用服务器上面文件的名称，如果目标设置了名称就用目标设置的名称</td></tr><tr><td>owner</td><td>指定属主</td></tr><tr><td>group</td><td>指定属组</td></tr><tr><td>mode</td><td>指定权限</td></tr><tr><td>force</td><td>设为yes，即强制下载，如果同名文件存在，则覆盖；设为no，则只有在文件不存在时才下载</td></tr><tr><td>checksum</td><td>对下载后的文件计算校验和，与 checksum 指定的校验和进行比对，确保下载文件的完好性</td></tr><tr><td>url_username</td><td>基于http basic认证的用户名（如果访问的URL需要的话）</td></tr><tr><td>url_password</td><td>基于http basic认证的密码，和url_username一起使用（如果URL允许使用空密码，则仅需提供url_username即可）</td></tr><tr><td>validate_certs</td><td>是否校验 SSL 证书，默认为yes</td></tr><tr><td>timeout</td><td>URL 请求的超时时间，单位为 s</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 提前下载好软件包验证哈希值</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] wget http://nginx.org/download/nginx-1.18.0.tar.gz</span></span>
<span class="line"><span style="color:#BDC4CC;"># 使用如下两条命令验证哈希值</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] openssl md5 nginx-1.18.0.tar.gz</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] md5sum nginx-1.18.0.tar.gz </span></span>
<span class="line"><span style="color:#FFB757;">b2d33d24d89b8b1f87ff5d251aa27eb8</span><span style="color:#ADDCFF;">  nginx-1.18.0.tar.gz</span></span>
<span class="line"><span style="color:#BDC4CC;"># ansible get_url 模块使用</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m get_url -a </span><span style="color:#ADDCFF;">&#39;url=http://nginx.org/download/nginx-1.18.0.tar.gz dest=/usr/local/src/nginx.tar.gz checksum=&quot;md5:b2d33d24d89b8b1f87ff5d251aa27eb8&quot;&#39;</span></span></code></pre></div><h2 id="fetch模块" tabindex="-1"><a class="header-anchor" href="#fetch模块"><span>fetch模块</span></a></h2><p>从远程主机提取文件至 Ansible 的主控端。 与<code>copy</code>模块相反，目前不支持目录（可以将目录打包，然后将压缩包拷贝至 Ansible 主控端）。</p><p>常用于复制客户端的日志文件至 Ansible 主控端。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>在远程拉取的文件，并且必须是一个file，不能是目录</td></tr><tr><td>dest</td><td>用来存放文件的目录</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> fetch</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=/var/log/messages dest=/root/logs&#39;</span></span></code></pre></div><h2 id="file-模块" tabindex="-1"><a class="header-anchor" href="#file-模块"><span>file 模块</span></a></h2><p>文件管理模块，用于对文件或文件夹相关的操作。主要用来设置文件、链接、目录的属性，或者移除文件、链接、目录。比如：创建文件或目录，删除文件或目录，设置文件目录属性，创建目录软链接等等。</p><p>幂等性：任意次执行所产生的影响均与一次执行的影响相同。</p><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>path</td><td>必选项，指定远程主机目录或文件信息</td><td>path</td></tr><tr><td>mode</td><td>定义文件/目录的权限</td><td>string</td></tr><tr><td>state</td><td>状态</td><td>directory(如果目录不存在，就创建目录)<br>file(即使文件不存在，也不会被创建)<br>link(创建软连接)<br>hard(创建硬链接)<br>touch(如果文件不存在，则会创建一个新的文件，如果文件或目录已存在，则更新其最后修改时间)<br>absent(删除目录、文件或者取消链接文件)</td></tr><tr><td>owner</td><td>定义文件/目录的属主，后面必须跟上path：定义文件/目录的路径</td><td>string</td></tr><tr><td>group</td><td>定义文件/目录的属组，后面可以加上mode：定义文件/目录的权限</td><td>string</td></tr><tr><td>force</td><td>需要在两种情况下强制创建软链接，一种是源文件不存在，但之后会建立的情况下；另一种是目标软链接已存在，需要先取消之前的软链，然后创建新的软链</td><td>no(默认)/yes</td></tr><tr><td>recurse</td><td>递归设置文件的属性，只对目录有效，后面跟上src：被链接的源文件路径，只应用于state=link的情况</td><td></td></tr><tr><td>dest</td><td>被链接到的路径，只应用于state=link的情况</td><td></td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 创建空文件</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> file</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;path=/data/test.txt state=touch&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> file</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/root/test.txt state=touch owner=wangj mode=755&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 创建目录 state=directory</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> file</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/data/mysql state=directory owner=mysql group=mysql&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 创建软链接 state=link</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> file</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=/data/testfile dest=/data/testfile-link state=link&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 递归修改目录属性, 但不递归至子目录</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> file</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/data/mysql state=directory owner=mysql group=mysql&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># recurse 参数</span></span>
<span class="line"><span style="color:#BDC4CC;"># 递归修改目录及子目录的属性</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> file</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/data/mysql state=directory owner=mysql group=mysql recurse=yes&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 删除文件或目录 state=absent</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> file</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/data/mysql state=absent&quot;</span></span></code></pre></div><h2 id="stat-模块" tabindex="-1"><a class="header-anchor" href="#stat-模块"><span>stat 模块</span></a></h2><p><code>stat</code>模块将获取指定文件或目录的信息，并使用<code>register</code>参数将其保存。</p><p>选项：</p><ul><li><code>path</code>：文件/对象的完整路径(必须)</li></ul><p>常用的返回值判断：</p><ul><li><code>exists</code>：判断是否存在</li><li><code>isuid</code>：调用用户的 ID 与所有者 ID 是否匹配</li></ul><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible 127.0.0.1 -m stat -a </span><span style="color:#ADDCFF;">&#39;path=/etc/passwd&#39;</span></span>
<span class="line"><span style="color:#FFB757;">127.0.0.1</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> SUCCESS</span><span style="color:#F0F3F6;"> =</span><span style="color:#FF9492;">&gt;</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;changed&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;stat&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;atime&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 1730942083.759907,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;attr_flags&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;e&quot;,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;attributes&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#F0F3F6;"> [</span></span>
<span class="line"><span style="color:#FFB757;">            &quot;extents&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">        ],</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;block_size&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 4096,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;blocks&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 8,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;charset&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;us-ascii&quot;,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;checksum&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;3b58457efd824fb7f3dc2fb1473bb99fe0958600&quot;,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;ctime&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 1729236170.6131256,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;dev&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 45830,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;device_type&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 0,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;executable&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;exists&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> true</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;gid&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 0,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;gr_name&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;root&quot;,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;inode&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> 178,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;isblk&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;ischr&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;isdir&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;isfifo&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;isgid&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;islnk&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;isreg&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> true</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;issock&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;isuid&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span></span>
<span class="line"><span style="color:#91CBFF;">        ...</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>使用<code>stat</code>模块验证文件状态，通过文件状态推进下一步实施动作。</p><div class="language-yml" data-highlighter="shiki" data-ext="yml" data-title="yml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">  - </span><span style="color:#72F088;">name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">install | Check if file is already configured.</span></span>
<span class="line"><span style="color:#72F088;">    stat</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">path={{ nginx_file_path }}</span></span>
<span class="line"><span style="color:#72F088;">    connection</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">local</span></span>
<span class="line"><span style="color:#72F088;">    register</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">nginx_file_result</span></span>
<span class="line"><span style="color:#F0F3F6;">    </span></span>
<span class="line"><span style="color:#F0F3F6;">  - </span><span style="color:#72F088;">name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">install | Download nginx file</span></span>
<span class="line"><span style="color:#72F088;">    get_url</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">url={{ nginx_file_url }} dest={{ software_files_path }} validate_certs=no</span></span>
<span class="line"><span style="color:#72F088;">    connection</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">local</span></span>
<span class="line"><span style="color:#72F088;">    when</span><span style="color:#F0F3F6;">: , </span><span style="color:#ADDCFF;">not. nginx_file_result.stat.exists</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 检查 websrvs 主机组中的所有主机上的 /data/mysql 路径是否存在</span></span>
<span class="line"><span style="color:#BDC4CC;"># 如果路径不存在, 它将在每个主机上输出一条调试信息, 说明该路径不存在</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible ansible] cat stat.yml</span></span>
<span class="line"><span style="color:#FFB757;">---</span></span>
<span class="line"><span style="color:#FFB757;">-</span><span style="color:#ADDCFF;"> hosts:</span><span style="color:#ADDCFF;"> websrvs</span></span>
<span class="line"><span style="color:#FFB757;">  tasks:</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#ADDCFF;"> name:</span><span style="color:#ADDCFF;"> Check</span><span style="color:#ADDCFF;"> file</span></span>
<span class="line"><span style="color:#91CBFF;">      stat</span><span style="color:#ADDCFF;">:</span><span style="color:#ADDCFF;"> path=/data/mysql</span></span>
<span class="line"><span style="color:#FFB757;">      register:</span><span style="color:#ADDCFF;"> st</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#ADDCFF;"> name:</span><span style="color:#ADDCFF;"> debug</span></span>
<span class="line"><span style="color:#FFB757;">      debug:</span></span>
<span class="line"><span style="color:#FFB757;">        msg:</span><span style="color:#ADDCFF;"> &quot;/data/mysql is not exist&quot;</span></span>
<span class="line"><span style="color:#FFB757;">      when:</span><span style="color:#ADDCFF;"> not</span><span style="color:#ADDCFF;"> st.stat.exists</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible ansible] ansible-playbook stat.yml</span></span></code></pre></div><h2 id="unarchive-模块" tabindex="-1"><a class="header-anchor" href="#unarchive-模块"><span>unarchive 模块</span></a></h2><p>解压缩。</p><p>实现有两种用法：</p><ul><li>将 Ansible 主机上的压缩包传到远程主机后解压缩至特定目录，设置<code>copy=yes</code>，此为默认值，可省略</li><li>将远程主机上的某个压缩包解压缩到指定路径下，设置<code>copy=no</code></li></ul><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>copy</td><td>copy=yes，拷贝的文件从 ansible 主机复制到远程主机，copy=no 表示在远程主机上寻找源文件解压</td><td>no/yes(默认)</td></tr><tr><td>src</td><td>tar包源路径，可以是 ansible 主机上的路径，也可以是远程主机上的路径，如果是远程主机上的路径，则需设置 copy=no</td><td>path</td></tr><tr><td>dest</td><td>解压后文件的目标绝对路径</td><td>path</td></tr><tr><td>remote_src</td><td>和 copy 功能一样且互斥，remote_src=yes 表示文件在远程主机上，remote_src=no 表示文件在 ansible 主机上</td><td>no(默认)/yes</td></tr><tr><td>mode</td><td>设置解压缩后的文件权限</td><td></td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># copy=yes ( 默认值 )</span></span>
<span class="line"><span style="color:#BDC4CC;"># 拷贝的文件是从 ansible 控制主机复制到远程主机上</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> unarchive</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=/root/nginx-1.18.0.tar.gz dest=/usr/local/src owner=wangj group=bin&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># copy=no ( 在远程被控主机上寻找 src 源文件 )</span></span>
<span class="line"><span style="color:#BDC4CC;"># ansible websrvs -m get_url -a &#39;url=http://nginx.org/download/nginx-1.18.0.tar.gz dest=/root/nginx-1.18.0.tar.gz&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> unarchive</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=/root/nginx-1.18.0.tar.gz dest=/usr/local/src copy=no mode=0777&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 下载压缩包并解压缩至指定目录 ( 需要添加参数 copy=no )</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> unarchive</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=http://nginx.org/download/nginx-1.18.0.tar.gz dest=/usr/local/src/ copy=no&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># remote_src=yes ( 表示内容在远程主机上 )</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> unarchive</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=https://releases.ansible.com/ansible/ansible-2.1.6.0-0.1.rc1.tar.gz dest=/usr/local/src owner=root remote_src=yes&#39;</span></span></code></pre></div><h2 id="archive-模块" tabindex="-1"><a class="header-anchor" href="#archive-模块"><span>archive 模块</span></a></h2><p>打包压缩，保存在被管理节点。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> archive</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;path=/var/log/ dest=/data/log.tar.bz2 format=bz2 owner=wangj mode=0600&#39;</span></span></code></pre></div><h2 id="hostname-模块" tabindex="-1"><a class="header-anchor" href="#hostname-模块"><span>hostname 模块</span></a></h2><p>管理主机名。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 使用</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 192.168.80.18</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> hostname</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=node18.wuhanjiayou.cn&#39;</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#BDC4CC;"># 验证</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 192.168.80.18</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> shell</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;hostname&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 注意:</span></span>
<span class="line"><span style="color:#BDC4CC;"># 千万别以分组来修改主机名 ( 不然整个组的主机名都是同一个 ) </span></span>
<span class="line"><span style="color:#BDC4CC;"># 除非你确实有这个需求 </span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> hostname</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=node.wuhanjiayou.cn&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> shell</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;hostname&#39;</span></span></code></pre></div><h2 id="cron-模块" tabindex="-1"><a class="header-anchor" href="#cron-模块"><span>cron 模块</span></a></h2><p><code>cron</code>模块可以 帮助我们批量管理远程主机中的计划任务。</p><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>day</td><td>日</td><td>1-31, *, */2, etc</td></tr><tr><td>hour</td><td>小时</td><td>0-23, *, */2, etc</td></tr><tr><td>minute</td><td>分钟</td><td>0-59, *, */2, etc</td></tr><tr><td>month</td><td>月</td><td>1-12, *, */2, etc</td></tr><tr><td>weekday</td><td>周</td><td>0-6 for Sunday-Saturday, *, etc</td></tr><tr><td>job</td><td>指明运行的命令是什么</td><td>string</td></tr><tr><td>name</td><td>定时任务描述</td><td>string</td></tr><tr><td>reboot</td><td>任务在重启时运行，不建议使用，建议使用special_time</td><td>no(默认)/yes</td></tr><tr><td>special_time</td><td>特殊的时间范围</td><td>reboot（重启时），annually（每年），monthly（每月），weekly（每周），daily（每天），hourly（每小时）</td></tr><tr><td>state</td><td>指定状态</td><td>present(添加定时任务，默认)/absent(删除定时任务)</td></tr><tr><td>user</td><td>以哪个用户的身份执行</td><td>string</td></tr><tr><td>disabled</td><td>是否禁用定时任务</td><td>no(默认)/yes</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 创建任务</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 10.0.0.8</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> cron</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;hour=2 minute=30 weekday=1-5 name=&quot;backup mysql&quot; job=/root/mysql_backup.sh&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> cron</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;minute=*/5 job=&#39;/usr/sbin/ntpdate ntp.aliyun.com &amp;&gt;/dev/null&#39; name=Synctime&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 禁用计划任务</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> cron</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;minute=*/5 job=&#39;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt;/dev/null&#39; name=Synctime disabled=yes&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 启用计划任务</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> cron</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;minute=*/5 job=&#39;/usr/sbin/ntpdate 172.20.0.1 &amp;&gt;/dev/null&#39; name=Synctime disabled=no&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 删除任务</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> cron</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;name=&#39;backup mysql&#39; state=absent&quot;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> cron</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;state=absent name=Synctime&#39;</span></span></code></pre></div><h2 id="yum-apt-模块" tabindex="-1"><a class="header-anchor" href="#yum-apt-模块"><span>yum/apt 模块</span></a></h2><ul><li><code>yum</code>模块：管理软件包，支持 RHEL，CentOS，fedora，不支持 Ubuntu 其它版本</li><li><code>apt</code>模块：管理 Debian 相关版本的软件包</li></ul><p>后续：我们可以通过判断 Linux 系统版本来决定使用哪个模块。</p><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>name</td><td>安装的包的名称</td><td>string/list</td></tr><tr><td>state</td><td>4种状态</td><td>present(安装)<br>latest(安装最新的)<br>absent(卸载)</td></tr><tr><td>update_cache</td><td>是否强制更新yum的缓存</td><td>no(默认)/yes</td></tr><tr><td>disable_pgp_check</td><td>是否禁止GPG checking，只用于present or latest</td><td>no(默认)/yes</td></tr><tr><td>disablerepo</td><td>临时禁止使用yum库。 只用于安装或更新时</td><td></td></tr><tr><td>enablerepo</td><td>临时使用的yum库。只用于安装或更新时</td><td></td></tr><tr><td>conf_file</td><td>指定远程yum安装时所依赖的配置文件（安装本地已有的包）</td><td></td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 安装: present</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> yum</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=httpd state=present&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 卸载: absent</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> yum</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=httpd state=absent&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 启用 epel 源进行安装</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> yum</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=nginx state=present enablerepo=epel&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 升级除 kernel 和 foo 开头以外的所有包 ( 安装多个软件包 )</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> yum</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=* state=lastest exclude=kernel*,foo*&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 一次安装多个软件包</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m yum -a </span><span style="color:#ADDCFF;">&#39;name=sl,cowsay&#39;</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 安装软件包</span></span>
<span class="line"><span style="color:#BDC4CC;"># 注意: RadHat 使用 yum 模块, Ubuntu 使用 apt 模块</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible 192.168.80.18 -m apt -a </span><span style="color:#ADDCFF;">&#39;name=bb,sl,cowsay,cmatrix,oneko,hollywood,boxes,libaa-bin,x11-apps state=present&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 卸载软件包</span></span>
<span class="line"><span style="color:#BDC4CC;"># 注意: RadHat 使用 yum 模块, Ubuntu 使用 apt 模块</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m apt -a </span><span style="color:#ADDCFF;">&#39;name=sl,cowsay state=absent&#39;</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible localhost -m yum -a </span><span style="color:#ADDCFF;">&quot;list=tree&quot;</span></span></code></pre></div><h2 id="yum-repository-模块" tabindex="-1"><a class="header-anchor" href="#yum-repository-模块"><span>yum_repository 模块</span></a></h2><p>可以帮助我们批量管理远程主机上的 Yum 仓库。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>name</td><td>指定仓库名称，对应yum配置文件中<code>[]</code>中的内容，必须参数</td></tr><tr><td>baseurl</td><td>指定yum仓库的源地址，对应yum配置文件中baseurl，必须参数</td></tr><tr><td>description</td><td>设置仓库的注释信息，对应yum配置文件中的name，必须参数</td></tr><tr><td>file</td><td>设置仓库的配置文件名称，对应yum配置文件的名称（.repo的前缀）</td></tr><tr><td>enabled</td><td>设置是否启用yum源，默认值为yes，对应yum配置文件中的enabled</td></tr><tr><td>gpgcheck</td><td>设置是否启用验证，默认值为no，对应yum配置文件中的gpgcheck</td></tr><tr><td>gpgcakey</td><td>当gpgcheck=yes时，需要使用此参数指定验证包所需的公钥</td></tr><tr><td>state</td><td>默认值为present，当值为absent时，表示删除对应的yum源</td></tr></tbody></table><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#72F088;">task</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#F0F3F6;">	- </span><span style="color:#72F088;">name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">Add multiple repositories into the same file (1/2)</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#72F088;">	  yum_repository</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">		  name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">epel</span></span>
<span class="line"><span style="color:#72F088;">		  description</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">EPEL YUM repo</span></span>
<span class="line"><span style="color:#72F088;">		  file</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">external_repos</span></span>
<span class="line"><span style="color:#72F088;">		  baseurl</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">https://download.fedoraproject.org/pub/epel/$releasever/$basearch/</span></span>
<span class="line"><span style="color:#72F088;">		  gpgcheck</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">no</span></span>
<span class="line"><span style="color:#F0F3F6;">	- </span><span style="color:#72F088;">name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">Add multiple repositories into the same file (2/2)</span></span>
<span class="line"><span style="color:#72F088;">	  yum_repository</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">	    name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">rpmforge</span></span>
<span class="line"><span style="color:#72F088;">			description</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">RPMforge YUM repo</span></span>
<span class="line"><span style="color:#72F088;">			file</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">external_repos</span></span>
<span class="line"><span style="color:#72F088;">			baseurl</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">http://apt.sw.be/redhat/el7/en/$basearch/rpmforge</span></span>
<span class="line"><span style="color:#72F088;">			mirrorlist</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">http://mirrorlist.repoforge.org/el7/mirrors-rpmforge</span></span>
<span class="line"><span style="color:#72F088;">			enabled</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">no</span></span>
<span class="line"><span style="color:#F0F3F6;">	- </span><span style="color:#72F088;">name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">Remove repository from a specific repo file</span></span>
<span class="line"><span style="color:#72F088;">	  yum_repository</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">		  name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">epel</span></span>
<span class="line"><span style="color:#72F088;">			file</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">external_repos</span></span>
<span class="line"><span style="color:#72F088;">			state</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">absent</span></span></code></pre></div><p>创建和删除仓库</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] cat yum_repo.yml</span></span>
<span class="line"><span style="color:#FFB757;">-</span><span style="color:#ADDCFF;"> hosts:</span><span style="color:#ADDCFF;"> websrvs</span></span>
<span class="line"><span style="color:#FFB757;">  tasks:</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#ADDCFF;"> name:</span><span style="color:#ADDCFF;"> Add</span><span style="color:#ADDCFF;"> multiple</span><span style="color:#ADDCFF;"> repositories</span><span style="color:#ADDCFF;"> into</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> same</span><span style="color:#ADDCFF;"> file</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">      yum_repository:</span></span>
<span class="line"><span style="color:#FFB757;">      name:</span><span style="color:#ADDCFF;"> test</span></span>
<span class="line"><span style="color:#FFB757;">      description:</span><span style="color:#ADDCFF;"> EPEL</span><span style="color:#ADDCFF;"> YUM</span><span style="color:#ADDCFF;"> repo</span></span>
<span class="line"><span style="color:#FFB757;">      file:</span><span style="color:#ADDCFF;"> external_repos</span></span>
<span class="line"><span style="color:#FFB757;">      baseurl:</span><span style="color:#ADDCFF;"> https://download.fedoraproject.org/pub/epel/</span><span style="color:#F0F3F6;">$releasever</span><span style="color:#ADDCFF;">/</span><span style="color:#F0F3F6;">$basearch</span><span style="color:#ADDCFF;">/</span></span>
<span class="line"><span style="color:#FFB757;">      gpgcheck:</span><span style="color:#ADDCFF;"> no</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible-playbook yum_repo.yml</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@web1 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] cat /etc/yum.repos.d/external_repos.repo</span></span>
<span class="line"><span style="color:#F0F3F6;">[test]</span></span>
<span class="line"><span style="color:#FFB757;">baseurl</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> https://download.fedoraproject.org/pub/epel/</span><span style="color:#F0F3F6;">$releasever</span><span style="color:#ADDCFF;">/</span><span style="color:#F0F3F6;">$basearch</span><span style="color:#ADDCFF;">/</span></span>
<span class="line"><span style="color:#FFB757;">gpgcheck</span><span style="color:#ADDCFF;"> =</span><span style="color:#91CBFF;"> 0</span></span>
<span class="line"><span style="color:#FFB757;">name</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> EPEL</span><span style="color:#ADDCFF;"> YUM</span><span style="color:#ADDCFF;"> repo</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] cat remove_yum_repo.yml</span></span>
<span class="line"><span style="color:#FFB757;">-</span><span style="color:#ADDCFF;"> hosts:</span><span style="color:#ADDCFF;"> websrvs</span></span>
<span class="line"><span style="color:#FFB757;">  tasks:</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#ADDCFF;"> name:</span><span style="color:#ADDCFF;"> remove</span><span style="color:#ADDCFF;"> repo</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">      yum_repository:</span></span>
<span class="line"><span style="color:#FFB757;">        name:</span><span style="color:#ADDCFF;"> test</span></span>
<span class="line"><span style="color:#FFB757;">        file:</span><span style="color:#ADDCFF;"> external_repos</span></span>
<span class="line"><span style="color:#FFB757;">        state:</span><span style="color:#ADDCFF;"> absent</span></span>
<span class="line"><span style="color:#F0F3F6;">        </span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible-playbook remove_yum_repo.yml</span></span></code></pre></div><h2 id="service-模块" tabindex="-1"><a class="header-anchor" href="#service-模块"><span>service 模块</span></a></h2><p>管理远程主机上的服务。</p><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>name</td><td>必选项，服务名称</td><td>string</td></tr><tr><td>state</td><td>有四种状态</td><td>started(启动)<br>stopped(停止)<br>restarted(重启)<br>reloaded(重载配置)</td></tr><tr><td>enabled</td><td>是否开机启动</td><td>no/yes</td></tr><tr><td>runlevel</td><td>开机启动的级别，一般不用指定</td><td>&quot;default&quot;(默认)/string</td></tr><tr><td>sleep</td><td>在重启服务的过程中，是否等待。如在服务关闭以后等待2秒再启动</td><td>integer</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 启动远程主机的 httpd 服务,并实现开机自启</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 192.168.80.18</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> service</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=httpd state=started enabled=yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 停止服务   </span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> service</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=httpd state=stopped&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 生效服务</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> service</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=httpd state=reloaded&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 重启服务</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> shell</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;sed -i &#39;s/^Listen 80/Listen 8080/&#39; /etc/httpd/conf/httpd.conf&quot;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> service</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=httpd state=restarted&#39;</span></span></code></pre></div><h2 id="user-模块" tabindex="-1"><a class="header-anchor" href="#user-模块"><span>user 模块</span></a></h2><p>批量管理远程主机上的用户，比如创建用户、修改用户、删除用户、为用户创建密钥对等操作。</p><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>name</td><td>用户名，必选参数</td><td>string</td></tr><tr><td>state</td><td>设置帐号状态</td><td>present(创建，默认)/absent</td></tr><tr><td>system</td><td>是否为系统用户</td><td>no(默认)/yes</td></tr><tr><td>uid</td><td>指定用户的uid</td><td>integer</td></tr><tr><td>group</td><td>指定基本组</td><td>string</td></tr><tr><td>groups</td><td>指定附加组，如果指定为(groups=)表示删除所有组</td><td>list</td></tr><tr><td>shell</td><td>指定默认shell</td><td>string</td></tr><tr><td>create_home</td><td>是否创建家目录</td><td>no/yes(默认)</td></tr><tr><td>password</td><td>指定用户密码</td><td>string</td></tr><tr><td>remove</td><td>当<code>state=absent</code>时，是否删除用户的家目录</td><td>no(默认)/yes</td></tr><tr><td>home</td><td>设置用户的家目录</td><td>path</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 创建用户</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> user</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=user1 comment=&quot;test user&quot; uid=2048 home=/app/user1 group=root&#39;</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> user</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=nginx comment=nginx uid=88 group=nginx groups=&quot;root,daemon&quot; shell=/sbin/nologin system=yes create_home=no home=/data/nginx non_unique=yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># remove=yes 表示删除用户及家目录等数据, 默认 remove=no</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> user</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=nginx state=absent remove=yes&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 生成 123456 加密的密码</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> localhost</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> debug</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;msg={{ &#39;123456&#39;| password_hash(&#39;sha512&#39;,&#39;salt&#39;)}}&quot;</span></span>
<span class="line"><span style="color:#FFB757;">localhost</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> SUCCESS</span><span style="color:#F0F3F6;"> =</span><span style="color:#FF9492;">&gt;</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;msg&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;</span><span style="color:#91CBFF;">$6</span><span style="color:#F0F3F6;">$salt$MktMKPZJ6t59GfxcJU20DwcwQzfMvOlHFVZiOVD71w</span><span style="color:#ADDCFF;">.&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 用上面创建的密码创建用户</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> user</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=test password=&quot;$6$salt$MktMKPZJ6t59GfxcJU20DwcwQzfMvOlHFVZiOVD71w.&quot;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 创建用户 test, 并生成 4096bit 的私钥</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> user</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=test generate_ssh_key=yes ssh_key_bits=4096 ssh_key_file=.ssh/id_rsa&#39;</span></span></code></pre></div><h2 id="group-模块" tabindex="-1"><a class="header-anchor" href="#group-模块"><span>group 模块</span></a></h2><p>管理组。</p><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>gid</td><td>设置组的GID号</td><td>integer</td></tr><tr><td>name</td><td>指定组的名称，必填项</td><td>string</td></tr><tr><td>state</td><td>指定组的状态</td><td>present(创建，默认)/absent(删除)</td></tr><tr><td>system</td><td>是否创建为系统组</td><td>no(默认)/yes</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 创建组</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> group</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=nginx gid=88 system=yes&#39;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 删除组</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> group</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;name=nginx state=absent&#39;</span></span></code></pre></div><h2 id="lineinfile-模块" tabindex="-1"><a class="header-anchor" href="#lineinfile-模块"><span>lineinfile 模块</span></a></h2><p>相当于<code>sed</code>，可以修改文件内容。</p><p>Ansible 在使用<code>sed</code>进行替换时，经常会遇到需要转义的问题，而且 Ansible 在遇到特殊符号进行替换时，存在问题，无法正常进行替换。</p><p>其实在 Ansible 自身提供了两个模块：<code>lineinfile</code>模块和<code>replace</code>模块，可以方便的进行替换，一般在 Ansible 当中去修改某个文件的单行进行替换的时候需要使用<code>lineinfile</code>模块。</p><p>幂等性：重复执行不会创建多行内容，多次执行，依然只增加有最后一行。</p><p>参数：</p><ul><li><code>regexp</code>参数：使用正则表达式匹配对应的行，当替换文本时，如果有多行文本都能被匹配，则只有最后面被匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除。如果想进行多行匹配进行替换需要使用<code>replace</code>模块。</li></ul><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 将 Listen 开头的行,修改为 Listen 8080 ( regexp 参数 )</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 192.168.80.18</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> lineinfile</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/etc/httpd/conf/httpd.conf regexp=&#39;^Listen&#39; line=&#39;Listen 8080&#39;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 批量禁用远程主机的 SELinux 功能</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> lineinfile</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/etc/selinux/config regexp=&#39;^SELINUX=&#39; line=&#39;SELINUX=disabled&#39;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 将 # 开头的行都删除</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 192.168.80.18</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> lineinfile</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;dest=/etc/fstab state=absent regexp=&quot;^#&quot;&#39;</span></span></code></pre></div><h2 id="replace-模块" tabindex="-1"><a class="header-anchor" href="#replace-模块"><span>replace 模块</span></a></h2><p><code>lineinfile</code>模块与<code>replace</code>模块区别：</p><ul><li><code>lineinfile</code>模块<code>regexp</code>参数：使用正则表达式匹配对应的行，当替换文本时，如果有多行文本都能被匹配，则只有最后面被匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除。</li><li><code>replace</code>模块：可以根据我们指定的正则表达式替换文件中的字符串，文件中所有被匹配到的字符串都会被替换。</li></ul><table><thead><tr><th>参数</th><th>说明</th><th>取值/数据类型</th></tr></thead><tbody><tr><td>path</td><td>必须参数，指定要修改的文件</td><td></td></tr><tr><td>regexp</td><td>必须参数，指定一个正则表达式</td><td></td></tr><tr><td>replace</td><td>替换regexp参数匹配到的字符串</td><td></td></tr><tr><td>backup</td><td>修改源文件前创建一个包含时间戳信息的备份文件</td><td>no/yes</td></tr><tr><td>before</td><td>如果指定，则仅替换/删除此匹配之前的内容，可以和after参数结合使用</td><td></td></tr><tr><td>after</td><td>如果指定，则仅替换/删除此匹配之后的内容，可以和before参数结合使用</td><td></td></tr><tr><td>owner</td><td>修改文件用户名</td><td></td></tr><tr><td>group</td><td>修改文件组名</td><td></td></tr><tr><td>mode</td><td>修改文件权限</td><td></td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 查找所有以 UUID 开头的行, 并将这些行注释掉</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> replace</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/etc/fstab regexp=&#39;^(UUID.*)&#39; replace=&#39;#\\1&#39;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 查找所有以 # 开头, 紧接着是 UUID 的 行 (这些行是被注释掉的)</span></span>
<span class="line"><span style="color:#BDC4CC;"># 并移除行首的 # 符号, 从而取消这些行的注释.</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> replace</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;path=/etc/fstab regexp=&#39;^#(UUID.*)&#39; replace=&#39;\\1&#39;&quot;</span></span></code></pre></div><h2 id="selinux-模块" tabindex="-1"><a class="header-anchor" href="#selinux-模块"><span>selinux 模块</span></a></h2><p>批量管理远端主机的 SELINUX 策略。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 启用</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible 192.168.80.18 -m selinux -a </span><span style="color:#ADDCFF;">&#39;state=enforcing policy=targeted&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 禁用</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible 192.168.80.18 -m selinux -a </span><span style="color:#ADDCFF;">&#39;state=disabled&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 验证</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] grep -v </span><span style="color:#ADDCFF;">&#39;#&#39;</span><span style="color:#F0F3F6;"> /etc/selinux/config</span></span>
<span class="line"><span style="color:#F0F3F6;">SELINUX</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">disabled</span></span>
<span class="line"><span style="color:#F0F3F6;">SELINUXTYPE</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">targeted</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] getenforce </span></span>
<span class="line"><span style="color:#FFB757;">Permissive</span></span></code></pre></div><h2 id="reboot-模块" tabindex="-1"><a class="header-anchor" href="#reboot-模块"><span>reboot 模块</span></a></h2><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible websrvs -m reboot</span></span></code></pre></div><h2 id="mount-模块" tabindex="-1"><a class="header-anchor" href="#mount-模块"><span>mount 模块</span></a></h2><p>批量管理被控端设备挂载。</p><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>src</td><td>本地或远程设备的路径</td></tr><tr><td>path</td><td>设备挂载至本地的路径</td></tr><tr><td>fstype</td><td>挂载的文件系统类型，xfs、nfs...</td></tr><tr><td>opts</td><td>挂载的参数，defaults、ro...</td></tr><tr><td>state</td><td>挂载的状态，absent、mounted、unmounted</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 临时挂载</span></span>
<span class="line"><span style="color:#FFB757;">mount</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> mount</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=&quot;UUID=b3e48f45-f933-4c8e-a700-22a159ec9077&quot; path=/home fstype=xfs opts=noatime state=present&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 临时取消挂载</span></span>
<span class="line"><span style="color:#FFB757;">mount</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> mount</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;path=/home fstype=xfs opts=noatime state=unmounted&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 永久挂载</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> mount</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=10.0.0.8:/data/wordpress path=/var/www/html/wp-content/uploads opts=&quot;_netdev&quot; state=mounted&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 永久卸载</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> mount</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;src=10.0.0.8:/data/wordpress path=/var/www/html/wp￾content/uploads state=absent&#39;</span></span></code></pre></div><h2 id="setup-模块" tabindex="-1"><a class="header-anchor" href="#setup-模块"><span>setup 模块</span></a></h2><p><code>setup</code>模块用于收集主机的系统信息，这些<code>facts</code>信息可以直接以变量的形式使用。</p><p>但是如果主机较多，会影响执行速度。我们可以使用<code>gather_facts: no</code>来禁止 Ansible 收集<code>facts</code>信息。</p><p><code>filter</code>参数：用于进行条件过滤。如果设置，仅返回匹配过滤条件的信息。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 这条命令会收集 inventory 中 websrvs 组下所有主机的所有 facts</span></span>
<span class="line"><span style="color:#BDC4CC;"># 并将这些信息打印出来</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的节点名</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_nodename&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的主机名</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_hostname&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机所属的域名 </span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_domain&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的总内存量</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_memtotal_mb&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的物理内存量</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_memory_mb&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机当前空闲的内存量</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_memfree_mb&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机操作系统的家族 // 例如 RedHat、Debian 等</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_os_family&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机操作系统的主版本号</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_distribution_major_version&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机操作系统的完整版本号</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_distribution_version&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的虚拟 CPU 数量</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_processor_vcpus&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的所有 IPv4 地址列表</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_all_ipv4_addresses&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的架构类型</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_architecture&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机已运行的时间</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_uptime_seconds&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 以 ansible_processor 开头的所有 facts</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &quot;filter=ansible_processor*&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 主机的环境变量 </span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;filter=ansible_env&#39;</span></span></code></pre></div><p>取 IP 地址</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 取所有 IP</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 192.168.80.18</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;filter=ansible_all_ipv4_addresses&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 取默认 IP</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> setup</span><span style="color:#91CBFF;"> -a</span><span style="color:#ADDCFF;"> &#39;filter=&quot;ansible_default_ipv4&quot;&#39;</span></span></code></pre></div><h2 id="debug-模块" tabindex="-1"><a class="header-anchor" href="#debug-模块"><span>debug 模块</span></a></h2><p>此模块可以用于输出信息，并且通过<code>msg</code>定制输出的信息内容。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>msg 后面跟变量时，需要加 &quot; &quot; 引起来</p></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 默认输出 Hello world ( 默认没有指定 msg, 默认输出 &quot;Hello world!&quot; )</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible 192.168.80.18 -m debug</span></span></code></pre></div><p>利用<code>debug</code>模块输出变量。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] vim debug.yaml</span></span>
<span class="line"><span style="color:#FFB757;">---</span></span>
<span class="line"><span style="color:#FFB757;">-</span><span style="color:#ADDCFF;"> hosts:</span><span style="color:#ADDCFF;"> websrvs</span></span>
<span class="line"><span style="color:#FFB757;">  tasks:</span></span>
<span class="line"><span style="color:#FFB757;">  -</span><span style="color:#ADDCFF;"> name:</span><span style="color:#ADDCFF;"> output</span><span style="color:#ADDCFF;"> variables</span></span>
<span class="line"><span style="color:#FFB757;">    debug:</span></span>
<span class="line"><span style="color:#FFB757;">      msg:</span><span style="color:#ADDCFF;"> Host</span><span style="color:#ADDCFF;"> &quot;{{ ansible_nodename }}&quot;</span><span style="color:#ADDCFF;"> Ip</span><span style="color:#ADDCFF;"> &quot;{{ ansible_default_ipv4.address }}&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">      </span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible-playbook debug.yaml</span></span></code></pre></div><p>显示字符串特定字符</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># cat debug.yml</span></span>
<span class="line"><span style="color:#FFB757;">-</span><span style="color:#ADDCFF;"> hosts:</span><span style="color:#ADDCFF;"> all</span></span>
<span class="line"><span style="color:#FFB757;">  gather_facts:</span><span style="color:#ADDCFF;"> n</span></span>
<span class="line"><span style="color:#FFB757;">  vars:</span></span>
<span class="line"><span style="color:#FFB757;">    a:</span><span style="color:#ADDCFF;"> &quot;12345&quot;</span></span>
<span class="line"><span style="color:#FFB757;">  tasks:</span></span>
<span class="line"><span style="color:#FFB757;">  -</span><span style="color:#ADDCFF;"> debug:</span></span>
<span class="line"><span style="color:#FFB757;">    msg:</span><span style="color:#ADDCFF;"> &quot;{{a[2]}}&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">    </span></span>
<span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 定义了一个字符串变量</span><span style="color:#ADDCFF;"> a,</span><span style="color:#ADDCFF;"> 如果想要获取</span><span style="color:#ADDCFF;"> a</span><span style="color:#ADDCFF;"> 字符串的第</span><span style="color:#91CBFF;"> 3</span><span style="color:#ADDCFF;"> 个字符</span></span>
<span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 则可以使用</span><span style="color:#ADDCFF;"> &quot;a[2]&quot;</span><span style="color:#ADDCFF;"> 获取,</span><span style="color:#ADDCFF;"> 索引从</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> 开始,</span><span style="color:#ADDCFF;"> 执行上例</span><span style="color:#ADDCFF;"> playbook,</span><span style="color:#ADDCFF;"> debug</span><span style="color:#ADDCFF;"> 的输出信息如下:</span></span>
<span class="line"><span style="color:#FFB757;">TASK</span><span style="color:#F0F3F6;"> [debug] </span><span style="color:#FF9492;">*************************</span></span>
<span class="line"><span style="color:#FFB757;">ok:</span><span style="color:#F0F3F6;"> [test71] =</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;msg&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;3&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div>`,128)]))}const F=a(t,[["render",p],["__file","ansible常用模块.html.vue"]]),i=JSON.parse('{"path":"/linux/tools/ansible%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97.html","title":"ansible常用模块","lang":"zh-CN","frontmatter":{"title":"ansible常用模块","date":"2024-06-20T00:00:00.000Z","tags":"Bash","categories":"Linux","order":28,"description":"Ansible 默认提供了很多模块来供我们使用，常用模块帮助文档 2.9.x。 我们可以通过ansible-doc -l命令查看到当前ansible都支持哪些模块。 通过ansible-doc -s 模块名可以查看该模块有哪些参数可以使用。 ping 模块 检测远程主机的连通性。 command 模块 在远程主机执行系统命令，此为默认模块，可忽略-m选...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/linux/tools/ansible%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%9D%97.html"}],["meta",{"property":"og:title","content":"ansible常用模块"}],["meta",{"property":"og:description","content":"Ansible 默认提供了很多模块来供我们使用，常用模块帮助文档 2.9.x。 我们可以通过ansible-doc -l命令查看到当前ansible都支持哪些模块。 通过ansible-doc -s 模块名可以查看该模块有哪些参数可以使用。 ping 模块 检测远程主机的连通性。 command 模块 在远程主机执行系统命令，此为默认模块，可忽略-m选..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T09:49:11.000Z"}],["meta",{"property":"article:published_time","content":"2024-06-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T09:49:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ansible常用模块\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T09:49:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"ping 模块","slug":"ping-模块","link":"#ping-模块","children":[]},{"level":2,"title":"command 模块","slug":"command-模块","link":"#command-模块","children":[]},{"level":2,"title":"shell 模块","slug":"shell-模块","link":"#shell-模块","children":[]},{"level":2,"title":"script 模块","slug":"script-模块","link":"#script-模块","children":[]},{"level":2,"title":"copy 模块","slug":"copy-模块","link":"#copy-模块","children":[]},{"level":2,"title":"get_url 模块","slug":"get-url-模块","link":"#get-url-模块","children":[]},{"level":2,"title":"fetch模块","slug":"fetch模块","link":"#fetch模块","children":[]},{"level":2,"title":"file 模块","slug":"file-模块","link":"#file-模块","children":[]},{"level":2,"title":"stat 模块","slug":"stat-模块","link":"#stat-模块","children":[]},{"level":2,"title":"unarchive 模块","slug":"unarchive-模块","link":"#unarchive-模块","children":[]},{"level":2,"title":"archive 模块","slug":"archive-模块","link":"#archive-模块","children":[]},{"level":2,"title":"hostname 模块","slug":"hostname-模块","link":"#hostname-模块","children":[]},{"level":2,"title":"cron 模块","slug":"cron-模块","link":"#cron-模块","children":[]},{"level":2,"title":"yum/apt 模块","slug":"yum-apt-模块","link":"#yum-apt-模块","children":[]},{"level":2,"title":"yum_repository 模块","slug":"yum-repository-模块","link":"#yum-repository-模块","children":[]},{"level":2,"title":"service 模块","slug":"service-模块","link":"#service-模块","children":[]},{"level":2,"title":"user 模块","slug":"user-模块","link":"#user-模块","children":[]},{"level":2,"title":"group 模块","slug":"group-模块","link":"#group-模块","children":[]},{"level":2,"title":"lineinfile 模块","slug":"lineinfile-模块","link":"#lineinfile-模块","children":[]},{"level":2,"title":"replace 模块","slug":"replace-模块","link":"#replace-模块","children":[]},{"level":2,"title":"selinux 模块","slug":"selinux-模块","link":"#selinux-模块","children":[]},{"level":2,"title":"reboot 模块","slug":"reboot-模块","link":"#reboot-模块","children":[]},{"level":2,"title":"mount 模块","slug":"mount-模块","link":"#mount-模块","children":[]},{"level":2,"title":"setup 模块","slug":"setup-模块","link":"#setup-模块","children":[]},{"level":2,"title":"debug 模块","slug":"debug-模块","link":"#debug-模块","children":[]}],"git":{"createdTime":1745401751000,"updatedTime":1745401751000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":20.32,"words":6096},"filePathRelative":"linux/tools/ansible常用模块.md","localizedDate":"2024年6月20日","autoDesc":true}');export{F as comp,i as data};
