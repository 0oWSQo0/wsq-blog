import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,o as p}from"./app-Coac0FJ0.js";const o="/wsq-blog/assets/1-ADCRTYB4.png",e="/wsq-blog/assets/2-CTj2ultb.png",t="/wsq-blog/assets/3-Dkbqo3ME.png",F={};function c(r,s){return p(),n("div",null,s[0]||(s[0]=[l(`<p>字符（<code>Character</code>）是计算机中字母、数字、符号的统称，一个字符可以是一个中文汉字、一个英文字母、一个阿拉伯数字、一个标点符号等。</p><p>计算机是以二进制的形式来存储数据的。平时我们在显示器上看到的数字、英文、标点符号、汉字等字符都是二进制数转换之后的结果。</p><p>字符集（<code>Character set</code>）定义了字符和二进制的对应关系，为字符分配了唯一的编号。常见的字符集有 ASCII、GBK、IOS-8859-1 等。</p><p>字符编码（<code>Character encoding</code>）也可以称为字集码，规定了如何将字符的编号存储到计算机中。<br> 大部分字符集都只对应一种字符编码，例如：ASCII、IOS-8859-1、GB2312、GBK，都是既表示了字符集又表示了对应的字符编码。所以一般情况下，可以将两者视为同义词。Unicode 字符集除外，Unicode 有三种编码方案，即 UTF-8、UTF-16 和 UTF-32。最为常用的是 UTF-8 编码。</p><p>校对规则（<code>Collation</code>）也可以称为排序规则，是指在同一个字符集内字符之间的比较规则。字符集和校对规则是一对多的关系，每个字符集都有一个默认的校对规则。字符集和校对规则相辅相成，相互依赖关联。</p><p>简单来说，字符集用来定义 MySQL 存储字符串的方式，校对规则用来定义 MySQL 比较字符串的方式。</p><p>有些数据库并没有清晰的区分开字符集和校对规则。例如，在 SQL Server 中创建数据库时，选择字符集就相当于选定了字符集和校对规则。</p><p>而在 MySQL 中，字符集和校对规则是区分开的，必须设置字符集和校对规则。一般情况下，没有特殊需求，只设置其一即可。只设置字符集时，MySQL 会将校对规则设置为字符集中对应的默认校对规则。</p><h2 id="查看-mysql-使用的字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#查看-mysql-使用的字符集和校对规则"><span>查看 MySQL 使用的字符集和校对规则</span></a></h2><p>可以通过<code>SHOW VARIABLES LIKE &#39;character%&#39;;</code>查看当前 MySQL 使用的字符集：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> VARIABLES</span><span style="color:#ADDCFF;"> LIKE</span><span style="color:#ADDCFF;"> &#39;character%&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Variable_name</span><span style="color:#FF9492;">            |</span><span style="color:#FFB757;"> Value</span><span style="color:#FF9492;">                          |</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_client</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> utf8mb4</span><span style="color:#FF9492;">                        |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_connection</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> utf8mb4</span><span style="color:#FF9492;">                        |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_database</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> utf8mb4</span><span style="color:#FF9492;">                        |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_filesystem</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> binary</span><span style="color:#FF9492;">                         |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_results</span><span style="color:#FF9492;">    |</span><span style="color:#FFB757;"> utf8mb4</span><span style="color:#FF9492;">                        |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_server</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> utf8mb4</span><span style="color:#FF9492;">                        |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_system</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> utf8mb3</span><span style="color:#FF9492;">                        |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_sets_dir</span><span style="color:#FF9492;">       |</span><span style="color:#FFB757;"> /usr/share/mysql-8.0/charsets/</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------------+--------------------------------+</span></span>
<span class="line"><span style="color:#FFB757;">8</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>说明：</p><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">character_set_client</td><td style="text-align:left;">MySQL 客户端使用的字符集</td></tr><tr><td style="text-align:center;">character_set_connection</td><td style="text-align:left;">连接数据库时使用的字符集</td></tr><tr><td style="text-align:center;">character_set_database</td><td style="text-align:left;">创建数据库使用的字符集</td></tr><tr><td style="text-align:center;">character_set_filesystem</td><td style="text-align:left;">MySQL 服务器文件系统使用的字符集，默认值为 binary，不做任何转换</td></tr><tr><td style="text-align:center;">character_set_results</td><td style="text-align:left;">数据库给客户端返回数据时使用的字符集</td></tr><tr><td style="text-align:center;">character_set_server</td><td style="text-align:left;">MySQL 服务器使用的字符集，建议由系统自己管理，不要人为定义</td></tr><tr><td style="text-align:center;">character_set_system</td><td style="text-align:left;">数据库系统使用的字符集，默认值为 utf8mb3，不需要设置</td></tr><tr><td style="text-align:center;">character_sets_dir</td><td style="text-align:left;">字符集的安装目录</td></tr></tbody></table><p>乱码时，不需要关心<code>character_set_filesystem、character_set_system</code>和<code>character_sets_dir</code>这 3 个系统变量，它们不会影响乱码。</p><p>可以通过<code>SHOW VARIABLES LIKE &#39;collation%&#39;;</code>查看当前使用的校对规则：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> VARIABLES</span><span style="color:#ADDCFF;"> LIKE</span><span style="color:#ADDCFF;"> &#39;collation%&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+----------------------+--------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Variable_name</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> Value</span><span style="color:#FF9492;">              |</span></span>
<span class="line"><span style="color:#FFB757;">+----------------------+--------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> collation_connection</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> utf8mb4_0900_ai_ci</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> collation_database</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> utf8mb4_0900_ai_ci</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> collation_server</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> utf8mb4_0900_ai_ci</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+----------------------+--------------------+</span></span>
<span class="line"><span style="color:#FFB757;">3</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>说明：</p><table><thead><tr><th style="text-align:center;">名称</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">collation_connection</td><td style="text-align:left;">连接数据库时使用的校对规则</td></tr><tr><td style="text-align:center;">collation_database</td><td style="text-align:left;">创建数据库时使用的校对规则</td></tr><tr><td style="text-align:center;">collation_server</td><td style="text-align:left;">MySQL 服务器使用的校对规则</td></tr></tbody></table><p>校对规则命令约定：</p><ul><li>以校对规则所对应的字符集名开头</li><li>以国家名居中（或以<code>general</code>居中）</li><li>以<code>ci、cs</code>或<code>bin</code>结尾，<code>ci</code>表示大小写不敏感，<code>cs</code>表示大小写敏感，<code>bin</code>表示按二进制编码值比较。</li></ul><h2 id="mysql字符集的转换过程" tabindex="-1"><a class="header-anchor" href="#mysql字符集的转换过程"><span>MySQL字符集的转换过程</span></a></h2><p>MySQL 中字符集的转换过程：</p><ol><li>在命令提示符窗口（cmd）中执行 MySQL 命令或<code>sql</code>语句时，这些命令或语句从“命令提示符窗口字符集”转换为<code>character_set_client</code>定义的字符集。</li><li>使用命令提示符窗口成功连接 MySQL 服务器后，就建立了一条“数据通信链路”，MySQL 命令或<code>sql</code>语句沿着“数据链路”传向 MySQL 服务器，由<code>character_set_client</code>定义的字符集转换为<code>character_set_connection</code>定义的字符集。</li><li>MySQL 服务实例收到数据通信链路中的 MySQL 命令或<code>sql</code>语句后，将 MySQL 命令或<code>sql</code>语句从<code>character_set_connection</code>定义的字符集转换为<code>character_set_server</code>定义的字符集。</li><li>若 MySQL 命令或<code>sql</code>语句针对于某个数据库进行操作，此时将 MySQL 命令或<code>sql</code>语句从<code>character_set_server</code>定义的字符集转换为<code>character_set_database</code>定义的字符集。</li><li>MySQL 命令或<code>sql</code>语句执行结束后，将执行结果设置为<code>character_set_results</code>定义的字符集。</li><li>执行结果沿着打开的数据通信链路原路返回，将执行结果从<code>character_set_results</code>定义的字符集转换为<code>character_set_client</code>定义的字符集，最终转换为命令提示符窗口字符集，显示到命令提示符窗口中。</li></ol><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="查看字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#查看字符集和校对规则"><span>查看字符集和校对规则</span></a></h2><p>可以通过<code>SHOW CHARACTER set;</code>查看可用字符集：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> CHARACTER</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+----------+---------------------------------+---------------------+--------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Charset</span><span style="color:#FF9492;">  |</span><span style="color:#FFB757;"> Description</span><span style="color:#FF9492;">                     |</span><span style="color:#FFB757;"> Default</span><span style="color:#ADDCFF;"> collation</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> Maxlen</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+----------+---------------------------------+---------------------+--------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> armscii8</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> ARMSCII-8</span><span style="color:#ADDCFF;"> Armenian</span><span style="color:#FF9492;">              |</span><span style="color:#FFB757;"> armscii8_general_ci</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> ascii</span><span style="color:#FF9492;">    |</span><span style="color:#FFB757;"> US</span><span style="color:#ADDCFF;"> ASCII</span><span style="color:#FF9492;">                        |</span><span style="color:#FFB757;"> ascii_general_ci</span><span style="color:#FF9492;">    |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> big5</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> Big5</span><span style="color:#ADDCFF;"> Traditional</span><span style="color:#ADDCFF;"> Chinese</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> big5_chinese_ci</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;">      2</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> binary</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> Binary</span><span style="color:#ADDCFF;"> pseudo</span><span style="color:#ADDCFF;"> charset</span><span style="color:#FF9492;">           |</span><span style="color:#FFB757;"> binary</span><span style="color:#FF9492;">              |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> cp1250</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> Windows</span><span style="color:#ADDCFF;"> Central</span><span style="color:#ADDCFF;"> European</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> cp1250_general_ci</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> cp1251</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> Windows</span><span style="color:#ADDCFF;"> Cyrillic</span><span style="color:#FF9492;">                |</span><span style="color:#FFB757;"> cp1251_general_ci</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> cp1256</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> Windows</span><span style="color:#ADDCFF;"> Arabic</span><span style="color:#FF9492;">                  |</span><span style="color:#FFB757;"> cp1256_general_ci</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#91CBFF;">...</span></span></code></pre></div><p>其中：</p><ul><li>第一列（<code>Charset</code>）为字符集名称</li><li>第二列（<code>Description</code>）为字符集描述</li><li>第三列（<code>Default collation</code>）为字符集的默认校对规则</li><li>第四列（<code>Maxlen</code>）表示字符集中一个字符占用的最大字节数</li></ul><p>常用的字符集如下：</p><ul><li><code>gbk</code>支持中文简体字符</li><li><code>big5</code>支持中文繁体字符</li><li><code>utf8</code>几乎支持所有国家的字符</li></ul><p>也可以通过查询<code>information_schema.character_set</code>表中的记录查看 MySQL 支持的字符集。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SELECT</span><span style="color:#91CBFF;"> *</span><span style="color:#ADDCFF;"> FROM</span><span style="color:#ADDCFF;"> information_schema.character_sets</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------+----------------------+---------------------------------+--------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> CHARACTER_SET_NAME</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> DEFAULT_COLLATE_NAME</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> DESCRIPTION</span><span style="color:#FF9492;">                     |</span><span style="color:#FFB757;"> MAXLEN</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------+----------------------+---------------------------------+--------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> big5</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;"> big5_chinese_ci</span><span style="color:#FF9492;">      |</span><span style="color:#FFB757;"> Big5</span><span style="color:#ADDCFF;"> Traditional</span><span style="color:#ADDCFF;"> Chinese</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;">      2</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> dec8</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;"> dec8_swedish_ci</span><span style="color:#FF9492;">      |</span><span style="color:#FFB757;"> DEC</span><span style="color:#ADDCFF;"> West</span><span style="color:#ADDCFF;"> European</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> cp850</span><span style="color:#FF9492;">              |</span><span style="color:#FFB757;"> cp850_general_ci</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> DOS</span><span style="color:#ADDCFF;"> West</span><span style="color:#ADDCFF;"> European</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> hp8</span><span style="color:#FF9492;">                |</span><span style="color:#FFB757;"> hp8_english_ci</span><span style="color:#FF9492;">       |</span><span style="color:#FFB757;"> HP</span><span style="color:#ADDCFF;"> West</span><span style="color:#ADDCFF;"> European</span><span style="color:#FF9492;">                |</span><span style="color:#FFB757;">      1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#91CBFF;">......</span></span></code></pre></div><p>可以使用<code>SHOW COLLATION LIKE &#39;***&#39;;</code>命令来查看相关字符集的校对规则。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> COLLATION</span><span style="color:#ADDCFF;"> LIKE</span><span style="color:#ADDCFF;"> &#39;gbk%&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+----------------+---------+----+---------+----------+---------+---------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Collation</span><span style="color:#FF9492;">      |</span><span style="color:#FFB757;"> Charset</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Id</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Default</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Compiled</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Sortlen</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Pad_attribute</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+----------------+---------+----+---------+----------+---------+---------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> gbk_bin</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> gbk</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> 87</span><span style="color:#FF9492;"> |</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">      |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> PAD</span><span style="color:#ADDCFF;"> SPACE</span><span style="color:#FF9492;">     |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> gbk_chinese_ci</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> gbk</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> 28</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">      |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> PAD</span><span style="color:#ADDCFF;"> SPACE</span><span style="color:#FF9492;">     |</span></span>
<span class="line"><span style="color:#FFB757;">+----------------+---------+----+---------+----------+---------+---------------+</span></span></code></pre></div><p>上面运行结果为 GBK 字符集所对应的校对规则，其中<code>gbk_chinese_ci</code>是默认的校对规则，对大小写不敏感。而<code>gbk_bin</code>按照二进制编码的值进行比较，对大小写敏感。</p><p>也可以通过查询<code>information_schema.COLLATIONS</code>表中的记录查看 MySQL 中可用的校对规则。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SELECT</span><span style="color:#91CBFF;"> *</span><span style="color:#ADDCFF;"> FROM</span><span style="color:#ADDCFF;"> information_schema.COLLATIONS</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------------+--------------------+-----+------------+-------------+---------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> COLLATION_NAME</span><span style="color:#FF9492;">           |</span><span style="color:#FFB757;"> CHARACTER_SET_NAME</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> ID</span><span style="color:#FF9492;">  |</span><span style="color:#FFB757;"> IS_DEFAULT</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> IS_COMPILED</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> SORTLEN</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------------+--------------------+-----+------------+-------------+---------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> big5_chinese_ci</span><span style="color:#FF9492;">          |</span><span style="color:#FFB757;"> big5</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;">   1</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> big5_bin</span><span style="color:#FF9492;">                 |</span><span style="color:#FFB757;"> big5</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;">  84</span><span style="color:#FF9492;"> |</span><span style="color:#FF9492;">            |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> dec8_swedish_ci</span><span style="color:#FF9492;">          |</span><span style="color:#FFB757;"> dec8</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;">   3</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> dec8_bin</span><span style="color:#FF9492;">                 |</span><span style="color:#FFB757;"> dec8</span><span style="color:#FF9492;">               |</span><span style="color:#FFB757;">  69</span><span style="color:#FF9492;"> |</span><span style="color:#FF9492;">            |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> cp850_general_ci</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;"> cp850</span><span style="color:#FF9492;">              |</span><span style="color:#FFB757;">   4</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> cp850_bin</span><span style="color:#FF9492;">                |</span><span style="color:#FFB757;"> cp850</span><span style="color:#FF9492;">              |</span><span style="color:#FFB757;">  80</span><span style="color:#FF9492;"> |</span><span style="color:#FF9492;">            |</span><span style="color:#FFB757;"> Yes</span><span style="color:#FF9492;">         |</span><span style="color:#FFB757;">       1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#91CBFF;">......</span></span></code></pre></div><p>分别指定<code>“A”</code>和<code>“a”</code>按照<code>gbk_chinese_ci</code>和<code>gbk_bin</code>校对规则进行比较。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SELECT</span><span style="color:#ADDCFF;"> CASE</span><span style="color:#ADDCFF;"> WHEN</span><span style="color:#ADDCFF;"> &#39;A&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_chinese_ci</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> &#39;a&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_chinese_ci</span><span style="color:#ADDCFF;"> then</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">else</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> end</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+-------------------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> CASE</span><span style="color:#ADDCFF;"> WHEN</span><span style="color:#ADDCFF;"> &#39;A&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_chinese_ci</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> &#39;a&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_chinese_ci</span><span style="color:#ADDCFF;"> then</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"><span style="color:#FF9492;">else</span><span style="color:#FFB757;"> 0</span><span style="color:#ADDCFF;"> end</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+-------------------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;">                                                                                   1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+-------------------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.02 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SELECT</span><span style="color:#ADDCFF;"> CASE</span><span style="color:#ADDCFF;"> WHEN</span><span style="color:#ADDCFF;"> &#39;A&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_bin</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> &#39;a&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_bin</span><span style="color:#ADDCFF;"> then</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> else</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> end</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+-----------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> CASE</span><span style="color:#ADDCFF;"> WHEN</span><span style="color:#ADDCFF;"> &#39;A&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_bin</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> &#39;a&#39;</span><span style="color:#ADDCFF;"> COLLATE</span><span style="color:#ADDCFF;"> gbk_bin</span><span style="color:#ADDCFF;"> then</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"><span style="color:#FF9492;">else</span><span style="color:#FFB757;"> 0</span><span style="color:#ADDCFF;"> end</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+-----------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;">                                                                     0</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+-----------------------------------------------------------------------+</span></span></code></pre></div><p>由于<code>gbk_chinese_ci</code>校对规则忽略大小写，所以认为两个<code>A</code>和<code>a</code>是相同的。<code>gbk_bin</code>校对规则不忽略大小写，则认为两个字符是不同的。</p><p>在实际应用中，我们应事先确认应用需要按照什么样方式排序，是否区分大小写，然后选择相应的校对规则。</p><h2 id="设置默认字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#设置默认字符集和校对规则"><span>设置默认字符集和校对规则</span></a></h2><p>MySQL 服务器可以支持多种字符集，在同一台服务器、同一个数据库甚至同一个表的不同字段中，都可以使用不同的字符集。Oracle 等其它数据库管理系统都只能使用相同的字符集，相比之下，MySQL 明显存在更大的灵活性。</p><p>MySQL 的字符集和校对规则有 4 个级别的默认设置，即服务器级、数据库级、表级和字段级。它们分别在不同的地方设置，作用也不相同。</p><h3 id="服务器字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#服务器字符集和校对规则"><span>服务器字符集和校对规则</span></a></h3><p>修改服务器默认字符集和校对规则的方法：</p><ol><li>可以在<code>my.ini</code>配置文件中设置服务器字符集和校对规则，添加内容如下：</li></ol><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>[mysqld]</span></span>
<span class="line"><span>character-set-server=字符集名称</span></span></code></pre></div><ol start="2"><li>连接 MySQL 服务器时指定字符集：</li></ol><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>mysql --default-character-set=字符集名称 -h 主机IP地址 -u 用户名 -p 密码</span></span></code></pre></div><p>如果没有指定服务器字符集，MySQL 会默认使用<code>utf8mb4</code>作为服务器字符集。如果只指定了字符集，没有指定校对规则，MySQL 会使用该字符集对应的默认校对规则。如果要使用字符集的非默认校对规则，需要在指定字符集的同时指定校对规则。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>在 MySQL 8.0 版本之前，默认字符集为 latin1，utf8 字符集指向的是 utf8mb3。从 MySQL8.0 开始，数据库的默认字符集改为 utf8mb4。</p></div><p>可以用<code>SHOW VARIABLES LIKE &#39;character_set_server&#39;</code>和<code>SHOW VARIABLES LIKE &#39;collation_server&#39;</code>命令查询当前服务器的字符集和校对规则。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> VARIABLES</span><span style="color:#ADDCFF;"> LIKE</span><span style="color:#ADDCFF;"> &#39;character_set_server&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+----------------------+---------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Variable_name</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> Value</span><span style="color:#FF9492;">   |</span></span>
<span class="line"><span style="color:#FFB757;">+----------------------+---------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_server</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> utf8mb4</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+----------------------+---------+</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> VARIABLES</span><span style="color:#ADDCFF;"> LIKE</span><span style="color:#ADDCFF;"> &#39;collation_server&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+------------------+--------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Variable_name</span><span style="color:#FF9492;">    |</span><span style="color:#FFB757;"> Value</span><span style="color:#FF9492;">              |</span></span>
<span class="line"><span style="color:#FFB757;">+------------------+--------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> collation_server</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> utf8mb4_0900_ai_ci</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+------------------+--------------------+</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.01 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><h3 id="数据库字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#数据库字符集和校对规则"><span>数据库字符集和校对规则</span></a></h3><p>数据库的字符集和校对规则在创建数据库时指定，也可以在创建完数据库后通过<code>ALTER DATABASE</code>命令进行修改。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果数据库里已经存在数据，修改字符集后，已有的数据不会按照新的字符集重新存放，所以不能通过修改数据库的字符集来修改数据的内容。</p></div><p>设置数据库字符集的规则：</p><ul><li>如果指定了字符集和校对规则，则使用指定的字符集和校对规则</li><li>如果指定了字符集没有指定校对规则，则使用指定字符集的默认校对规则</li><li>如果指定了校对规则但未指定字符集，则字符集使用与该校对规则关联的字符集</li><li>如果没有指定字符集和校对规则，则使用服务器字符集和校对规则作为数据库的字符集和校对规则</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了避免受到默认值的影响，推荐在创建数据库时指定字符集和校对规则。</p></div><p>可以使用<code>SHOW VARIABLES LIKE &#39;character_set_database&#39;</code>和<code>SHOW VARIABLES LIKE &#39;collation_database&#39;</code>命令查看当前数据库的字符集和校对规则：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> VARIABLES</span><span style="color:#ADDCFF;"> LIKE</span><span style="color:#ADDCFF;"> &#39;character_set_database&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+------------------------+--------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Variable_name</span><span style="color:#FF9492;">          |</span><span style="color:#FFB757;"> Value</span><span style="color:#FF9492;">  |</span></span>
<span class="line"><span style="color:#FFB757;">+------------------------+--------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> character_set_database</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> latin1</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+------------------------+--------+</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set,</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> warning</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> VARIABLES</span><span style="color:#ADDCFF;"> LIKE</span><span style="color:#ADDCFF;"> &#39;collation_database&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------+-------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Variable_name</span><span style="color:#FF9492;">      |</span><span style="color:#FFB757;"> Value</span><span style="color:#FF9492;">             |</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------+-------------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> collation_database</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> latin1_swedish_ci</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+--------------------+-------------------+</span></span></code></pre></div><h3 id="表字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#表字符集和校对规则"><span>表字符集和校对规则</span></a></h3><p>表的字符集和校对规则在创建表的时候指定，也可以在创建完表后通过<code>ALTER TABLE</code>命令进行修改。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>同样，如果表中已有记录，修改字符集后，原有的记录不会按照新的字符集重新存放。表的字段仍然使用原来的字符集。</p></div><p>设置表的字符集规则和设置数据库字符集的规则基本类似：</p><ul><li>如果指定了字符集和校对规则，使用指定的字符集和校对规则</li><li>如果指定了字符集没有指定校对规则，使用指定字符集的默认校对规则</li><li>如果指定了校对规则但未指定字符集，则字符集使用与该校对规则关联的字符集</li><li>如果没有指定字符集和校对规则，使用数据库字符集和校对规则作为表的字符集和校对规则</li></ul><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了避免受到默认值的影响，推荐在创建表的时候指定字符集和校对规则。</p></div><p>可以使用<code>SHOW CREATE TABLE</code>命令查看当前表的字符集和校对规则：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> CREATE</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> tb_students_info</span><span style="color:#FF9492;"> \\G</span></span>
<span class="line"><span style="color:#FF9492;">***************************</span><span style="color:#F0F3F6;"> 1. row </span><span style="color:#FF9492;">***************************</span></span>
<span class="line"><span style="color:#FFB757;">       Table:</span><span style="color:#ADDCFF;"> tb_students_info</span></span>
<span class="line"><span style="color:#FFB757;">Create</span><span style="color:#ADDCFF;"> Table:</span><span style="color:#ADDCFF;"> CREATE</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> \`</span><span style="color:#FFB757;">tb_students_info</span><span style="color:#ADDCFF;">\`</span><span style="color:#F0F3F6;"> (</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">id</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">NOT</span><span style="color:#ADDCFF;"> NULL</span><span style="color:#ADDCFF;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">name</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> varchar(10</span><span style="color:#F0F3F6;">) DEFAULT NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">age</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">) DEFAULT NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">sex</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> char(1</span><span style="color:#F0F3F6;">) DEFAULT NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">height</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> float</span><span style="color:#ADDCFF;"> DEFAULT</span><span style="color:#ADDCFF;"> NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">course_id</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">) DEFAULT NULL,</span></span>
<span class="line"><span style="color:#FFB757;">  PRIMARY</span><span style="color:#ADDCFF;"> KEY</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;">id</span><span style="color:#ADDCFF;">\`</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><h3 id="列字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#列字符集和校对规则"><span>列字符集和校对规则</span></a></h3><p>MySQL 可以定义列级别的字符集和校对规则，主要是针对相同表的不同字段需要使用不同字符集的情况。一般遇到这种情况的几率比较小，这只是 MySQL 提供给我们一个灵活设置的手段。</p><p>列字符集和校对规则的定义可以在创建表时指定，或者在修改表时调整。语法格式如下：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>ALTER TABLE 表名 MODIFY 列名  数据类型 CHARACTER SET 字符集名;</span></span></code></pre></div><p>修改<code>tb_students_info</code>表中<code>name</code>列的字符集，并查看。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">ALTER</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> tb_students_info</span><span style="color:#ADDCFF;"> MODIFY</span><span style="color:#ADDCFF;"> name</span><span style="color:#ADDCFF;"> VARCHAR</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">10</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">CHARACTER</span><span style="color:#ADDCFF;"> SET</span><span style="color:#ADDCFF;"> gbk</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 11</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> affected</span><span style="color:#F0F3F6;"> (0.11 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FFB757;">Records:</span><span style="color:#91CBFF;"> 11</span><span style="color:#ADDCFF;">  Duplicates:</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;">  Warnings:</span><span style="color:#91CBFF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt;  </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> CREATE</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> tb_students_info</span><span style="color:#FF9492;"> \\G</span></span>
<span class="line"><span style="color:#FF9492;">***************************</span><span style="color:#F0F3F6;"> 1. row </span><span style="color:#FF9492;">***************************</span></span>
<span class="line"><span style="color:#FFB757;">       Table:</span><span style="color:#ADDCFF;"> tb_students_info</span></span>
<span class="line"><span style="color:#FFB757;">Create</span><span style="color:#ADDCFF;"> Table:</span><span style="color:#ADDCFF;"> CREATE</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> \`</span><span style="color:#FFB757;">tb_students_info</span><span style="color:#ADDCFF;">\`</span><span style="color:#F0F3F6;"> (</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">id</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">NOT</span><span style="color:#ADDCFF;"> NULL</span><span style="color:#ADDCFF;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">name</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> varchar(10</span><span style="color:#F0F3F6;">) CHARACTER SET gbk DEFAULT NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">age</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">) DEFAULT NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">sex</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> char(1</span><span style="color:#F0F3F6;">) DEFAULT NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">height</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> float</span><span style="color:#ADDCFF;"> DEFAULT</span><span style="color:#ADDCFF;"> NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">course_id</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">) DEFAULT NULL,</span></span>
<span class="line"><span style="color:#FFB757;">  PRIMARY</span><span style="color:#ADDCFF;"> KEY</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;">id</span><span style="color:#ADDCFF;">\`</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>结果显示，<code>name</code>列字符集修改成功。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果在创建列的时候没有特别指定字符集和校对规则，默认使用表的字符集和校对规则。</p></div><h3 id="连接字符集和校对规则" tabindex="-1"><a class="header-anchor" href="#连接字符集和校对规则"><span>连接字符集和校对规则</span></a></h3><p>上述 4 种设置方式，确定的都是数据保存的字符集和校对规则。实际应用中，还需要设置客户端和服务器之间交互的字符集和校对规则。</p><p>对于客户端和服务器的交互操作，MySQL 提供了 3 个不同的参数：<code>character_set_client、character_set_connection</code>和<code>character_set_results</code>，分别代表客户端、连接和返回结果的字符集。通常情况下，这 3 个字符集是相同的，这样可以确保正确读出用户写入的数据，尤其是中文字符。字符集不同时，容易导致写入的记录不能正确读出。</p><p>设置客户端和服务器连接的字符集和校对规则有以下几种方法：</p><ol><li>在<code>my.ini</code>配置文件中，设置以下语句：</li></ol><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>[mysql]</span></span>
<span class="line"><span>default-character-set=gbk</span></span></code></pre></div><p>这样服务器启动后，所有连接默认使用 GBK 字符集进行连接。<br> 2. 可以通过以下命令来设置连接的字符集和校对规则，这个命令可以同时修改以上 3 个参数（<code>character_set_client、character_set_connection</code>和<code>character_set_results</code>）的值。</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>SET NAMES gbk;</span></span></code></pre></div><p>使用这个方法可以“临时一次性地”修改客户端和服务器连接时的字符集为<code>gbk</code>。<br> 3. MySQL 还提供了下列命令“临时地”修改 MySQL“当前会话的”字符集和校对规则。</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>set character_set_client = gbk;</span></span>
<span class="line"><span>set character_set_connection = gbk;</span></span>
<span class="line"><span>set character_set_database = gbk;</span></span>
<span class="line"><span>set character_set_results = gbk;</span></span>
<span class="line"><span>set character_set_server = gbk;</span></span>
<span class="line"><span>set collation_connection = gbk_chinese_ci;</span></span>
<span class="line"><span>set collation_database = gbk_chinese_ci;</span></span>
<span class="line"><span>set collation_server = gbk_chinese_ci;</span></span></code></pre></div><h2 id="修改字符集步骤" tabindex="-1"><a class="header-anchor" href="#修改字符集步骤"><span>修改字符集步骤</span></a></h2><p><code>ALTER DATABASE</code>或<code>ALTER TABLE</code>命令对已经存在的数据没有作用，只对新创建的表或记录生效。如果想修改已存在数据的字符集，需要先将数据导出，经过适当的调整后，再重新导入。</p><p>以下模拟的是将<code>gb2312</code>字符集的数据库修改成<code>gbk</code>字符集的数据库的过程。</p><p>1）创建<code>testset</code>数据库，设置其字符集为<code>gb2312</code>，并添加数据。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">CREATE</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> test.testset</span><span style="color:#F0F3F6;">(</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">id</span><span style="color:#ADDCFF;"> INT</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">11</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">DEFAULT</span><span style="color:#ADDCFF;"> NULL,</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">name</span><span style="color:#ADDCFF;"> VARCHAR</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">25</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">DEFAULT</span><span style="color:#ADDCFF;"> NULL</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#F0F3F6;">&gt; )</span><span style="color:#ADDCFF;">CHARSET=gb2312</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> affected</span><span style="color:#F0F3F6;"> (0.10 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">INSERT</span><span style="color:#ADDCFF;"> INTO</span><span style="color:#ADDCFF;"> test.testset</span><span style="color:#ADDCFF;"> VALUES</span><span style="color:#F0F3F6;"> (1,</span><span style="color:#ADDCFF;">&#39;C语言&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> affected</span><span style="color:#F0F3F6;"> (0.01 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">INSERT</span><span style="color:#ADDCFF;"> INTO</span><span style="color:#ADDCFF;"> test.testset</span><span style="color:#ADDCFF;"> VALUES</span><span style="color:#F0F3F6;"> (2,</span><span style="color:#ADDCFF;">&#39;Java语言&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> affected</span><span style="color:#F0F3F6;"> (0.01 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">INSERT</span><span style="color:#ADDCFF;"> INTO</span><span style="color:#ADDCFF;"> test.testset</span><span style="color:#ADDCFF;"> VALUES</span><span style="color:#F0F3F6;"> (3,</span><span style="color:#ADDCFF;">&#39;Python语言&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> affected</span><span style="color:#F0F3F6;"> (0.01 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>2）导出<code>testset</code>表结构：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>mysqldump -uroot -p --default-character-set=gbk -d test testset&gt; D:\\testset.sql</span></span></code></pre></div><p>其中，<code>--default-character-set=gbk</code>表示以什么字符集连接；<code>-d</code>表示只导出表结构，不导出数据。</p><p>3）打开<code>testset.sql</code>文件，修改表结构定义中的字符集为新的字符集。</p><figure><img src="`+e+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>4）确保表中的记录不再更新，导出所有记录。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysqldump </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">uroot </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">p </span><span style="color:#BDC4CC;">--quick --no-create-info --extended-insert --default-character-set=gb2312 test testset&gt; D:\\testdata.sql</span></span></code></pre></div><ul><li><code>--quick</code>：该选项用于存储记录多的表。它强制<code>mysqldump</code>从服务器一次一行地查询表中的行，而不是查询所有行，并在输出前将它缓存到内存中。</li><li><code>--extended-insert</code>：使用<code>INSERT</code>插入多行数据语法。可以使文件更小，导入文件时加速插入。</li><li><code>--no-create-info</code>：不导出表的<code>CREATE TABLE</code>语句。</li><li><code>--default-character-set=gb2312</code>：按照原有的字符集导出所有数据。这样导出的文件中，所有中文都是可见的，不会保存成乱码。</li></ul><p>5）打开<code>testdata.sql</code>，将<code>SET NAMES gb2312</code>修改成<code>SET NAMES gbk</code>。</p><figure><img src="'+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>6）使用新的字符集创建新的数据库。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">CREATE</span><span style="color:#FF9492;"> DATABASE</span><span style="color:#DBB7FF;"> test2</span><span style="color:#FF9492;"> DEFAULT</span><span style="color:#F0F3F6;"> CHARSET gbk;</span></span></code></pre></div><p>7）创建表，执行<code>testset.sql</code>。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#91CBFF;"> -uroot</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> test2</span><span style="color:#FF9492;"> &lt;</span><span style="color:#ADDCFF;"> D:</span><span style="color:#FF9492;">\\t</span><span style="color:#ADDCFF;">estset.sql</span></span></code></pre></div><p>8）导入数据，执行<code>testdata.sql</code>。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#91CBFF;"> -uroot</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> test2</span><span style="color:#FF9492;"> &lt;</span><span style="color:#ADDCFF;"> D:</span><span style="color:#FF9492;">\\t</span><span style="color:#ADDCFF;">estdata.sql</span></span></code></pre></div><p>9）查看<code>testset</code>表结构是否修改了字符集，以及表内数据是否丢失或乱码：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SHOW</span><span style="color:#ADDCFF;"> CREATE</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> test2.testset</span><span style="color:#FF9492;"> \\G</span></span>
<span class="line"><span style="color:#FF9492;">***************************</span><span style="color:#F0F3F6;"> 1. row </span><span style="color:#FF9492;">***************************</span></span>
<span class="line"><span style="color:#FFB757;">       Table:</span><span style="color:#ADDCFF;"> testset</span></span>
<span class="line"><span style="color:#FFB757;">Create</span><span style="color:#ADDCFF;"> Table:</span><span style="color:#ADDCFF;"> CREATE</span><span style="color:#ADDCFF;"> TABLE</span><span style="color:#ADDCFF;"> \`</span><span style="color:#FFB757;">testset</span><span style="color:#ADDCFF;">\`</span><span style="color:#F0F3F6;"> (</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">id</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">) </span><span style="color:#FFB757;">DEFAULT</span><span style="color:#ADDCFF;"> NULL,</span></span>
<span class="line"><span style="color:#ADDCFF;">  \`</span><span style="color:#FFB757;">name</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;"> varchar(25</span><span style="color:#F0F3F6;">) DEFAULT NULL</span></span>
<span class="line"><span style="color:#F0F3F6;">) ENGINE=InnoDB DEFAULT CHARSET=gbk</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SELECT</span><span style="color:#91CBFF;"> *</span><span style="color:#ADDCFF;"> FROM</span><span style="color:#ADDCFF;"> test2.testset</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">+------+------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> id</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> name</span><span style="color:#FF9492;">       |</span></span>
<span class="line"><span style="color:#FFB757;">+------+------------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;">    1</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> C语言</span><span style="color:#FF9492;">      |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;">    2</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Java语言</span><span style="color:#FF9492;">   |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;">    3</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Python语言</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+------+------------+</span></span>
<span class="line"><span style="color:#FFB757;">3</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> set</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>选择目标字符集的时候，要注意最好的是原字符集的超集，或者确定比原字符集的字库更大，否则如果目标字符集的字库小于原字符集的字库，那么目标字符集中不支持的字符导入后会变成乱码，丢失一部分数据。</p></div><h2 id="字符集的选择" tabindex="-1"><a class="header-anchor" href="#字符集的选择"><span>字符集的选择</span></a></h2><p>如果在创建数据库时没有正确选择字符集，在后期就可能需要更换字符集，而更换字符集是代价比较高的操作，也存在一定的风险。所以推荐在应用开始阶段，就按照实际需求，正确的选择合适的字符集，避免后期不必要的调整。</p><p>MySQL5.7 支持几十种字符集，包括 UCS-2、UTF-16、UTF-16LE、UTF-32、UTF-8 和 utf8mb4 等 Unicode 字符集。</p><p>在选择数据库字符集时，可以根据应用的需求，结合字符集的特点来权衡，主要考虑以下几方面的因素。</p><ol><li>满足应用支持语言的需求。如果应用要处理各种各样的文字，或者将发布到使用不同语言的国家或地区，就应该选择 Unicode 字符集。对 MySQL 来说，目前就是 UTF-8。</li><li>如果应用中涉及已有数据的导入，就要充分考虑数据库字符集对已有数据的兼容性。假如已有数据的字符集是 GBK，如果选择 GB 2312-80 为数据库字符集，就很可能出现某些文字无法正确导入。</li><li>如果数据库只需要支持一般中文，数据量很大，性能要求也很高，那就应该选择双字节定长编码的中文字符集，比如 GBK。<br> 因为，相对于 UTF-8 而言，GBK 比较“小”，每个汉字只占 2 个字节，而 UTF-8 汉字编码需要 3 个字节，这样可以减少磁盘 I/O、数据库 Cache 以及网络传输的时间，从而提高性能。相反，如果应用主要处理英文字符，仅有少量汉字数据，那么选择 UTF-8 更好，因为 GBK、UCS-2、UTF-16 的西文字符编码都是 2 个字节，会造成很多不必要的开销。</li><li>如果数据库需要做大量的字符运算，如比较、排序等，那么选择定长字符集可能更好，因为定长字符集的处理速度要比变长字符集的处理速度快。</li><li>如果所有客户端程序都支持相同的字符集，则应该优先选择该字符集作为数据库字符集。这样可以避免因字符集转换带来的性能开销和数据损失。</li><li>在多种字符集都能够满足应用的前提下，应尽量使用小的字符集。因为更小的字符集意味着能够节省空间、减少网络传输字节数，同时由于存储空间的较小间接的提高了系统的性能。</li></ol><p>有很多字符集都可以保存汉字，比如 UTF-8、GB2312、GBK 等等。但是常用的是 GB2312 和 GBK。因为 GB2312 字库比 GBK 字库小，有些偏僻字不能保存，因此在选择字符集的时候一定要权衡这些偏僻字出现的几率，一般情况下，最好选用 GBK。</p>`,121)]))}const d=a(F,[["render",c],["__file","MySQL字符集和校对规则.html.vue"]]),D=JSON.parse('{"path":"/sql/mysql/MySQL%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E6%A0%A1%E5%AF%B9%E8%A7%84%E5%88%99.html","title":"MySQL字符集和校对规则","lang":"zh-CN","frontmatter":{"title":"MySQL字符集和校对规则","date":"2024-04-10T00:00:00.000Z","tags":"MySQL","categories":"SQL","order":3,"description":"字符（Character）是计算机中字母、数字、符号的统称，一个字符可以是一个中文汉字、一个英文字母、一个阿拉伯数字、一个标点符号等。 计算机是以二进制的形式来存储数据的。平时我们在显示器上看到的数字、英文、标点符号、汉字等字符都是二进制数转换之后的结果。 字符集（Character set）定义了字符和二进制的对应关系，为字符分配了唯一的编号。常见的...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/sql/mysql/MySQL%E5%AD%97%E7%AC%A6%E9%9B%86%E5%92%8C%E6%A0%A1%E5%AF%B9%E8%A7%84%E5%88%99.html"}],["meta",{"property":"og:title","content":"MySQL字符集和校对规则"}],["meta",{"property":"og:description","content":"字符（Character）是计算机中字母、数字、符号的统称，一个字符可以是一个中文汉字、一个英文字母、一个阿拉伯数字、一个标点符号等。 计算机是以二进制的形式来存储数据的。平时我们在显示器上看到的数字、英文、标点符号、汉字等字符都是二进制数转换之后的结果。 字符集（Character set）定义了字符和二进制的对应关系，为字符分配了唯一的编号。常见的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-01T01:55:29.000Z"}],["meta",{"property":"article:published_time","content":"2024-04-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-01T01:55:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL字符集和校对规则\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-04-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-01T01:55:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"查看 MySQL 使用的字符集和校对规则","slug":"查看-mysql-使用的字符集和校对规则","link":"#查看-mysql-使用的字符集和校对规则","children":[]},{"level":2,"title":"MySQL字符集的转换过程","slug":"mysql字符集的转换过程","link":"#mysql字符集的转换过程","children":[]},{"level":2,"title":"查看字符集和校对规则","slug":"查看字符集和校对规则","link":"#查看字符集和校对规则","children":[]},{"level":2,"title":"设置默认字符集和校对规则","slug":"设置默认字符集和校对规则","link":"#设置默认字符集和校对规则","children":[{"level":3,"title":"服务器字符集和校对规则","slug":"服务器字符集和校对规则","link":"#服务器字符集和校对规则","children":[]},{"level":3,"title":"数据库字符集和校对规则","slug":"数据库字符集和校对规则","link":"#数据库字符集和校对规则","children":[]},{"level":3,"title":"表字符集和校对规则","slug":"表字符集和校对规则","link":"#表字符集和校对规则","children":[]},{"level":3,"title":"列字符集和校对规则","slug":"列字符集和校对规则","link":"#列字符集和校对规则","children":[]},{"level":3,"title":"连接字符集和校对规则","slug":"连接字符集和校对规则","link":"#连接字符集和校对规则","children":[]}]},{"level":2,"title":"修改字符集步骤","slug":"修改字符集步骤","link":"#修改字符集步骤","children":[]},{"level":2,"title":"字符集的选择","slug":"字符集的选择","link":"#字符集的选择","children":[]}],"git":{"createdTime":1723619297000,"updatedTime":1730426129000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":2}]},"readingTime":{"minutes":17.19,"words":5156},"filePathRelative":"sql/mysql/MySQL字符集和校对规则.md","localizedDate":"2024年4月10日","autoDesc":true}');export{d as comp,D as data};
