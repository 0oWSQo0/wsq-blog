import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,d as l,o as a}from"./app-Coac0FJ0.js";const n="/wsq-blog/assets/1-yfLZggZp.png",s="/wsq-blog/assets/2-BKpJHhx2.png",r="/wsq-blog/assets/3-CjVK1FCi.png",p="/wsq-blog/assets/4-D--zZw1i.png",d="/wsq-blog/assets/5-AtZmhKqy.png",g="/wsq-blog/assets/6-D71CDndH.png",c="/wsq-blog/assets/7-C4bG08aY.png",o="/wsq-blog/assets/8-Dq14j_Fi.png",P="/wsq-blog/assets/9-Dh9dl5i1.png",h="/wsq-blog/assets/10-8eUcW91D.png",f="/wsq-blog/assets/11-7nYa8aD9.png",x="/wsq-blog/assets/12-DIN0Xaos.png",y="/wsq-blog/assets/img1-BMHCVxdS.png",u="/wsq-blog/assets/13-BYEdCGsQ.png",b="/wsq-blog/assets/img2-Cp6scbbH.png",m="/wsq-blog/assets/14-DqP8Sqr-.png",G="/wsq-blog/assets/15-CN0uP9F7.png",I="/wsq-blog/assets/16-PApCTA_2.png",B="/wsq-blog/assets/17-DSplsr3T.png",_="/wsq-blog/assets/18-DzEqzRu_.png",E="/wsq-blog/assets/19-DQ_spW-b.png",S="/wsq-blog/assets/20-BNWa2VsO.png",A="/wsq-blog/assets/21-lJmHNg64.png",q="/wsq-blog/assets/img17-Bphh0iKM.png",w="/wsq-blog/assets/img18-DvlS5EVW.png",D="/wsq-blog/assets/img19-CbkxBjNT.png",N="/wsq-blog/assets/img20-BQpLuSUM.png",z={};function T(C,t){return a(),i("div",null,t[0]||(t[0]=[l('<h2 id="路由的概念" tabindex="-1"><a class="header-anchor" href="#路由的概念"><span>路由的概念</span></a></h2><p>在 TCP/IP 通信中，网络层的作用是实现终端的点对点通信。IP 协议通过 IP 地址将数据包发送给目的主机，能够让互联网上任何两台主机进行通信。IP 地址可以识别主机和路由器，路由器可以把全世界的网络连接起来。</p><figure><img src="'+n+'" alt="网络层" tabindex="0" loading="lazy"><figcaption>网络层</figcaption></figure><h3 id="什么是路由器" tabindex="-1"><a class="header-anchor" href="#什么是路由器"><span>什么是路由器</span></a></h3><p>路由器可以连接多个网络。它有多个端口，分别连接不同的网络区域。通过识别目的 IP 地址的网络号，再根据路由表进行数据转发。路由器会维护一张路由表，通过路由表的信息，路由器才能正确的转发 IP 报文。</p><figure><img src="'+s+'" alt="路由器" tabindex="0" loading="lazy"><figcaption>路由器</figcaption></figure><h3 id="什么是路由" tabindex="-1"><a class="header-anchor" href="#什么是路由"><span>什么是路由</span></a></h3><p>路由是网络设备根据 IP 地址对数据进行转发的操作。当路由器收到一个数据包时，它根据数据包的目的 IP 地址查询路由表，如果有匹配的路由条目，就根据查询结果将数据包转发出去，如果没有任何匹配的路由条目，则将数据包丢弃，这个过程就是 IP 路由。除了路由器，三层交换机、防火墙、负载均衡设备甚至主机等设备都可以进行路由操作，只要这个设备支持路由功能。</p><figure><img src="'+r+'" alt="路由" tabindex="0" loading="lazy"><figcaption>路由</figcaption></figure><h3 id="什么是路由表" tabindex="-1"><a class="header-anchor" href="#什么是路由表"><span>什么是路由表</span></a></h3><p>为了将数据包发给目的节点，所有节点都维护着一张路由表。路由表是路由器通过各种途径获得的路由条目，每一个路由条目包含目的网段地址/子网掩码、路由协议、出接口、下一跳 IP 地址、路由优先级和度量值等信息。路由表记录 IP 包在下一跳应该发给哪个路由器。IP 包根据路由表在各个数据链路上传输。</p><figure><img src="'+p+'" alt="路由表" tabindex="0" loading="lazy"><figcaption>路由表</figcaption></figure><h3 id="路由表来源" tabindex="-1"><a class="header-anchor" href="#路由表来源"><span>路由表来源</span></a></h3><p>一个实际的网络中，一台路由器通常包含多条路由条目，这些路由条目从不同的来源获取。路由表的来源可分为三类，分别是直连路由、静态路由和动态路由。</p><p>直连路由：路由器直接连接的路由条目，只要路由器接口配置了 IP 地址，接口状态正常，就会自动生成对应的直连路由。</p><figure><img src="'+d+'" alt="直连路由" tabindex="0" loading="lazy"><figcaption>直连路由</figcaption></figure><p>静态路由：通过命令手动添加的路由条目就是静态路由。</p><figure><img src="'+g+'" alt="静态路由" tabindex="0" loading="lazy"><figcaption>静态路由</figcaption></figure><p>动态路由：通过路由协议从相邻路由器动态学习到的路由条目。</p><figure><img src="'+c+'" alt="动态路由" tabindex="0" loading="lazy"><figcaption>动态路由</figcaption></figure><h3 id="路由优先级" tabindex="-1"><a class="header-anchor" href="#路由优先级"><span>路由优先级</span></a></h3><p>不同来源的路由有不同的优先级，优先级的值越小，则路由的优先级就越高。当存在多条目的网段相同，但来源不同的路由时，具有最高优先级（数值越小优先级越高）的路由成为最优路由，将被加入到路由表中，而其它路由则处于未激活状态，不显示在路由表中。</p><p>路由优先级有内外之分，如果外部优先级相同则比较内部优先级。</p><p>缺省的外部路由优先级：</p><table><thead><tr><th style="text-align:center;">路由来源</th><th style="text-align:center;">优先级</th></tr></thead><tbody><tr><td style="text-align:center;">DIRECT</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">OSPF</td><td style="text-align:center;">10</td></tr><tr><td style="text-align:center;">IS-IS</td><td style="text-align:center;">15</td></tr><tr><td style="text-align:center;">STATIC</td><td style="text-align:center;">60</td></tr><tr><td style="text-align:center;">RIP</td><td style="text-align:center;">100</td></tr><tr><td style="text-align:center;">OSPF ASE</td><td style="text-align:center;">150</td></tr><tr><td style="text-align:center;">IBGP</td><td style="text-align:center;">255</td></tr><tr><td style="text-align:center;">EBGP</td><td style="text-align:center;">255</td></tr><tr><td style="text-align:center;">Untrustworthy</td><td style="text-align:center;">255</td></tr></tbody></table><p>内部路由优先级如下表：</p><table><thead><tr><th style="text-align:center;">路由协议</th><th style="text-align:center;">内部优先级</th></tr></thead><tbody><tr><td style="text-align:center;">DIRECT</td><td style="text-align:center;">0</td></tr><tr><td style="text-align:center;">OSPF</td><td style="text-align:center;">10</td></tr><tr><td style="text-align:center;">IS-IS</td><td style="text-align:center;">15</td></tr><tr><td style="text-align:center;">STATIC</td><td style="text-align:center;">18</td></tr><tr><td style="text-align:center;">RIP</td><td style="text-align:center;">60</td></tr><tr><td style="text-align:center;">OSPF ASE</td><td style="text-align:center;">100</td></tr><tr><td style="text-align:center;">IBGP</td><td style="text-align:center;">150</td></tr><tr><td style="text-align:center;">EBGP</td><td style="text-align:center;">150</td></tr><tr><td style="text-align:center;">Untrustworthy</td><td style="text-align:center;">200</td></tr></tbody></table><h3 id="路由环路" tabindex="-1"><a class="header-anchor" href="#路由环路"><span>路由环路</span></a></h3><p>路由环路是数据转发形成死循环，不能正确到达目的地。</p><figure><img src="'+o+'" alt="路由环路" tabindex="0" loading="lazy"><figcaption>路由环路</figcaption></figure><p>路由环路的主要生成原因是配置错误的路由或网络规划错误导致。比如：在两台路由器上配置到相同目的地址的路由表项，下一跳互相指向对方，就会造成路由环路。另外某些动态路由协议配置不当，也有可能产生环路。</p><h3 id="黑洞路由" tabindex="-1"><a class="header-anchor" href="#黑洞路由"><span>黑洞路由</span></a></h3><p>一条路由条目，无论是静态的还是动态的，都需要关联到一个出接口，出接口指的是设备要到达目的网络是的出站接口。路由的出接口可以是这个设备的物理接口，如千兆网口，也可以是逻辑接口，如 VLAN 接口，或者是隧道接口等。其中有一种接口非常特殊，那就是<code>Null</code>接口，只有一个编号，那就是 0。<code>Null0</code>是一个系统保留的逻辑接口，当网络设备在转发数据包时，如果使用出接口<code>Null0</code>的路由，那么数据包将被丢弃，就像被扔进了一个黑洞里，因此出接口为<code>Null0</code>的路由条目又被称为黑洞路由。</p><figure><img src="'+P+'" alt="黑洞路由" tabindex="0" loading="lazy"><figcaption>黑洞路由</figcaption></figure><p>黑洞路由是一种非常有用的路由条目，适用于如下场景：</p><ul><li>在网络使用中，按需将数据包指向黑洞路由，实现流量过滤。</li><li>在已经部署路由汇总的网络中，用于防止数据转发出现环路。</li><li>在部署了 NAT 的网络中，用于防止数据转发出现环路。</li><li>在 BGP 网络中，用于发布特定网段的路由。</li></ul><h2 id="动态路由协议" tabindex="-1"><a class="header-anchor" href="#动态路由协议"><span>动态路由协议</span></a></h2><p>静态路由是手动添加完成的。如果有 100 个网段，一个路由器就需要设置将近 100 条路由信息。网络使用过程中，不可避免的出现网段新增、删除、修改等情况，这些更新的路由信息需要在所有路由器上进行设置。还有一个不可忽视的问题，一旦某个路由器出现故障，数据传输无法自动绕过故障节点，只能通过手动设置才能恢复正常。</p><figure><img src="'+h+'" alt="静态路由" tabindex="0" loading="lazy"><figcaption>静态路由</figcaption></figure><p>如果是使用动态路由，提前设置好路由协议，路由器之间会定期交换路由信息，路由器会知道网络中其它网段的信息，动态生成路由表。如果网络出现变化，网段需要增删改时，只需要在相应的路由器上配置动态路由即可。不需要像静态路由那样，在所有路由器上进行修改。对于大型网络，路由器个数较多时，主要使用动态路由协议。</p><figure><img src="'+f+'" alt="动态路由" tabindex="0" loading="lazy"><figcaption>动态路由</figcaption></figure><p>即使网络上的节点出现故障，只要有一个可绕行的其它路径，那么路由器的路由表会自动重新设置，数据包也会自动选择这个路径。</p><p>采用路由协议后，网络拓扑结果变化的响应速度会大大提升。无论网络正常的增删改，还是异常的网络故障，相邻的路由器都会检测到变化，会把拓扑的变化通知网络中其它的路由器，使它们的路由表产生相应的变化。这个过程比手动对路由表的修改要快很多，也准确很多。</p><p>对于少于 10 个路由器的小型网络，静态路由或许已经能够满足需求，但是在大中型网络中，通常会使用动态路由协议，或者动态路由与静态路由协议相结合的方式来建设这个网络。</p><h3 id="路由协议基本原理" tabindex="-1"><a class="header-anchor" href="#路由协议基本原理"><span>路由协议基本原理</span></a></h3><p>路由器之间需要运行相同的路由协议，才能相互交换路由信息。每种路由协议都有自己的语言，即相应的路由协议报文。如果两台路由器启动了相同的路由协议，那么就有了相互通信的基础。不同的路由协议，有相同的目的，就是计算和维护路由表。通常工作过程包含 4 个阶段：</p><ul><li>邻居发现阶段：运行了路由协议后，路由器会主动把自己的网段信息发送给相邻的路由器。既可以使用广播发送路由协议消息，也可以单播将路由协议消息发送给指定的邻居路由器。</li><li>交换路由信息阶段：发现邻居后，每台路由器都将自己的路由信息发送给相邻的路由器，相邻路由器又发送给下一个相邻的路由器。经过一段时间后，每台路由器都会收到网络中所有的路由信息。</li><li>计算路由阶段：每一台路由器都会运行某种算法，计算出最终的路由表来。</li><li>维护路由阶段：为了感知突然发送的网络故障，比如：设备故障或线路中断等，路由协议规定相邻两台路由器之间，应该周期性发送协议报文。如果路由器在一段时间内，没收到邻居发来的协议报文，就认为邻居路由器失效。</li></ul><figure><img src="'+x+'" alt="路由协议" tabindex="0" loading="lazy"><figcaption>路由协议</figcaption></figure><h3 id="自治系统" tabindex="-1"><a class="header-anchor" href="#自治系统"><span>自治系统</span></a></h3><p>随着 IP 网络的发展，网络规模已经很大了，无论哪种路由协议都不能完成全网的路由计算，因此网络分成了很多个自治系统（<code>AS, Autonomous System</code>）或路由选择域（<code>Routing Domain</code>）。自治系统可以制定自己的路由策略，并管理自治系统内进行具体路由控制的路由器集合。</p><figure><img src="'+y+'" alt="自治系统和路由协议" tabindex="0" loading="lazy"><figcaption>自治系统和路由协议</figcaption></figure><p>每个自治系统都有一个唯一的自治系统编号，它的基本思路是希望通过不同的编号来区分不同的自治系统。通过路由协议和自治系统编号，路由器可以确定路由路径和路由信息的交换方式。某个自治系统缺乏足够的安全机制，就可以利用编号改变路径回避它。</p><p>自治系统的编号范围是<code>1~65535</code>，其中<code>1~64511</code>是注册的因特网编号，<code>64512~65535</code>是专用网络编号。</p><figure><img src="'+u+'" alt="自治系统和路由协议" tabindex="0" loading="lazy"><figcaption>自治系统和路由协议</figcaption></figure><h3 id="egp-和-igp" tabindex="-1"><a class="header-anchor" href="#egp-和-igp"><span>EGP 和 IGP</span></a></h3><p>自治系统（路由选择域）内部动态路由使用的协议是域内路由协议，即 IGP(<code>Interior Gateway Protocol</code>)。而自治系统之间的路由控制使用的是域间路由协议，即 EGP(<code>External Gateway Protocol</code>)。</p><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>IGP 和 EGP 的关系，跟 IP 地址网络号和主机号的关系类似。根据 IP 地址的网络号在网络中进行路由选择，根据主机号在网段内部进行主机识别一样。既可以根据 EGP 在区域网络之间进行路由选择，也可以根据 IGP 在区域网络内部进行主机识别。</p><p>路由协议被分为 EGP 和 IGP 两个层次。没有 EGP 就不可能有世界上各个不同机构网络之间的通信，没有 IGP 机构内部也就不可能进行通信。</p><p>IGP 是指在同一个自治系统内交换路由信息的路由协议。RIP 、RIP2 、OSPF 属于 IGP 。IGP 的主要目的是发现和计算自治系统内的路由信息。</p><p>EGP 与 IGP 不同，EGP 用于连接不同的自治系统，并在不同自治系统间交换路由信息。EGP 的主要目的是使用路由策略和路由过滤等手段，控制路由信息在自治系统间的传播。BGP 属于 EGP。</p><h2 id="动态路由协议类型" tabindex="-1"><a class="header-anchor" href="#动态路由协议类型"><span>动态路由协议类型</span></a></h2><p>按照路由的算法和路由信息的交换方式，路由协议可以分为距离矢量（<code>Distance-Vector，D-V</code>）路由协议和链路状态（<code>Link-State</code>）路由协议。其中典型的距离矢量协议是 RIP，典型的链路状态协议是 OSPF。</p><h3 id="距离矢量路由协议" tabindex="-1"><a class="header-anchor" href="#距离矢量路由协议"><span>距离矢量路由协议</span></a></h3><p>距离矢量路由协议指的是基于距离矢量的路由协议，RIP 是最具代表性的距离矢量路由协议。距离矢量这个概念包含两个关键的信息：距离和方向，其中距离是指到达目的网络的度量值（即所要经过路由器的个数），而方向指的是到达目的网络的下一跳设备。</p><figure><img src="'+m+'" alt="距离矢量路由协议" tabindex="0" loading="lazy"><figcaption>距离矢量路由协议</figcaption></figure><p>每一台运行距离矢量路由协议的路由器会周期性的将自己的路由表通告出去，相邻的路由器收到路由信息并更新自己的路由表，再继续向其它直连的路由器通告路由信息，最终网络中的每台路由器都能知道各个网段的路由，这个过程称为路由的泛洪过程。</p><figure><img src="'+G+'" alt="路由宣告" tabindex="0" loading="lazy"><figcaption>路由宣告</figcaption></figure><p>路由器之间互换目的网络的方向和距离的信息，并以这些信息更新路由表。这种方法在处理上比较简单，不过由于只有距离和方向的信息，所以当网络构造变得复杂时，在获得稳定的路由信息之前需要消耗一定时间（即路由收敛时间长），也极易发生路由循环等问题。</p><figure><img src="'+I+'" alt="路由收敛" tabindex="0" loading="lazy"><figcaption>路由收敛</figcaption></figure><h3 id="链路状态路由协议" tabindex="-1"><a class="header-anchor" href="#链路状态路由协议"><span>链路状态路由协议</span></a></h3><p>运行链路状态路由协议的路由器会使用一些特殊的信息描述网络的拓扑结构和 IP 网段，这些信息被称为链路状态信息（LSA），所有路由器都会产生自己直连接口的链路状态信息。</p><figure><img src="'+B+'" alt="链路状态路由协议" tabindex="0" loading="lazy"><figcaption>链路状态路由协议</figcaption></figure><p>路由器将网络中泛洪的链路状态信息搜集起来，存入一个数据库中，这个数据库就是 LSDB（链路状态数据库），LSDB 是对整个网络的拓扑结构及 IP 网段的描述，路由器拥有相同的 LSDB。对于任何一台路由器，网络拓扑都完全一样。</p><figure><img src="'+_+'" alt="LSDB" tabindex="0" loading="lazy"><figcaption>LSDB</figcaption></figure><p>接下来所有的路由器都基于 LSDB 使用最短路由优先算法进行计算，得到一棵已自己为根的、无环路的最短路径树，并将得到的路由加载到路由表中。</p><figure><img src="'+E+'" alt="带权有向图" tabindex="0" loading="lazy"><figcaption>带权有向图</figcaption></figure><p>链路状态算法使用增量更新机制，只有当链路的状态发生变化时，才发送路由更新信息。</p><figure><img src="'+S+'" alt="最短路径树" tabindex="0" loading="lazy"><figcaption>最短路径树</figcaption></figure><p>相比距离矢量路由协议，链路状态路由协议具有更大的扩展性和更快的收敛速度，但是它的算法消耗更多的内存和 CPU 处理能力。</p><h3 id="路由协议的性能指标" tabindex="-1"><a class="header-anchor" href="#路由协议的性能指标"><span>路由协议的性能指标</span></a></h3><p>不同的路由协议，有不同的特点。各个路由协议的性能指标体现如下：</p><ul><li>协议计算的正确性：是指路由协议的算法会不会产生错误的路由导致网络环路。不同的路由协议使用的算法不同，因此路由正确性也不相同。链路状态路由协议（如 OSPF）在算法上杜绝了产生路由环路的可能性，比距离矢量路由协议更优。</li><li>路由收敛速度：路由收敛是指全网路由器的路由表达到一致状态。收敛速度快，意味着网络拓扑结构发生变化时，路由器能够更快的感知，并及时更新相应的路由信息。OSPF、BGP 等协议的收敛速度快于 RIP。</li><li>协议所占的系统开销：路由器在运行路由协议时，需要消耗的系统资源，比如：CPU、内存等。工作原理的不同，各个路由协议对系统资源的需求也不同。OSPF 路由技术的系统开销要大于 RIP 协议。</li><li>协议自身的安全性：是指协议设计时，有没有考虑防止网络攻击。OSPF、RIPv2 有相应的防止攻击的认证方法，而 RIPv1 没有。</li><li>协议适用网络规模：不同路由协议所适用的网络规模、拓扑结构不同。RIP 协议有 16 跳的限制，所以只能应用在较小规模的网络中；而 OSPF 可以应用在几百台路由器的大规模网络中；BGP 能够管理全世界所有的路由器，其所管理的网络规模大小只受系统资源的限制。</li></ul><h3 id="主要路由协议" tabindex="-1"><a class="header-anchor" href="#主要路由协议"><span>主要路由协议</span></a></h3><p>各种路由协议都需要使用 IP 来进行报文封装，但其细节有所不同。</p><p>RIP 协议是最早的路由协议，是为小型网络中提供简单易用的动态路由。RIP 协议报文采用 UDP 封装，端口号是 520。由于 UDP 是不可靠的传输层协议，所以 RIP 协议需要周期性的广播协议报文来确保邻居收到路由信息。</p><p>OSPF 是目前应用最广泛的路由协议，可为大中型网络提供分层的、可靠的路由服务。OSFP 直接采用 IP 进行封装，所有协议报文都由 IP 封装后进行传输，协议号是 89。IP 是尽力而为的网络层协议，本身是不可靠的，所以为了保证传输的可靠性，OSPF 采用了复杂的确认机制来保证传输可靠。</p><p>BGP 采用 TCP 来保证协议传输的可靠性，TCP 端口号是 179。BGP 不需要自己设计可靠传输机制，降低了协议报文的复杂度和开销。</p><figure><img src="'+A+'" alt="路由协议的底层协议图" tabindex="0" loading="lazy"><figcaption>路由协议的底层协议图</figcaption></figure><p>几种主要的路由协议表如下：</p><table><thead><tr><th style="text-align:center;">路由协议名称</th><th style="text-align:center;">下一层协议</th><th style="text-align:center;">方式</th><th style="text-align:center;">适用范围</th><th style="text-align:center;">循环检测</th></tr></thead><tbody><tr><td style="text-align:center;">RIP</td><td style="text-align:center;">UDP</td><td style="text-align:center;">距离矢量</td><td style="text-align:center;">IGP</td><td style="text-align:center;">不可以</td></tr><tr><td style="text-align:center;">RIPv2</td><td style="text-align:center;">UDP</td><td style="text-align:center;">距离矢量</td><td style="text-align:center;">IGP</td><td style="text-align:center;">不可以</td></tr><tr><td style="text-align:center;">OSPF</td><td style="text-align:center;">IP</td><td style="text-align:center;">链路状态</td><td style="text-align:center;">IGP</td><td style="text-align:center;">可以</td></tr><tr><td style="text-align:center;">BGP</td><td style="text-align:center;">TCP</td><td style="text-align:center;">路径矢量</td><td style="text-align:center;">EGP</td><td style="text-align:center;">可以</td></tr></tbody></table><h2 id="bgp" tabindex="-1"><a class="header-anchor" href="#bgp"><span>BGP</span></a></h2><p>BGP 是不同自治系统的路由器之间交换路由信息的协议。</p><p>BGP 较新版本是BGP-4。可以将 BGP-4 简写为 BGP。</p><p>互联网的规模太大，使得自治系统之间路由选择非常困难。对于自治系统之间的路由选择，要寻找最佳路由是很不现实的。</p><p>当一条路径通过几个不同 AS 时，要想对这样的路径计算出有意义的代价是不太可能的。比较合理的做法是在 AS 之间交换“可达性”信息。</p><p>自治系统之间的路由选择必须考虑有关策略。由于相互连接的网络的性能相差很大，根据最短距离（即最少跳数）找出来的路径，可能并不合适。也有的路径的使用代价很高或很不安全。有一种情况，如自治系统 AS1 要发送数据报给自治系统 AS2，本来最好是经过自治系统 AS3。但 AS3 不愿意让这些数据报通过本自治系统的网络，因为&quot;这是他们的事情，和我们没有关系。&quot;但另一方面，自治系统 AS3 愿意让某些相邻自治系统的数据报通过自己的网络，特别是对那些付了服务费的某些自治系统更是如此。因此，自治系统之间的路由选择协议应当允许使用多种路由选择策略。这些策略包括政治、安全或经济方面的考虑。这些策略都是由网络管理人员对每一个路由器进行设置的，但这些策略并不是自治系统之间的路由选择协议本身。</p><p>因此，边界网关协议 BGP 只能是力求寻找一条能够到达目的网络且比较好的路由（不能兜圈子），而并非要寻找一条最佳路由。</p><p>BGP 采用了路径向量路由选择协议。</p><p>每一个自治系统的管理员要选择至少一个路由器作为该自治系统的“ BGP 发言人”。</p><p>一般说来，两个 BGP 发言人都是通过一个共享网络连接在一起的，而 BGP 发言人往往就是 BGP 边界路由器，但也可以不是 BGP 边界路由器。</p><p>一个 BGP 发言人与其他自治系统中的 BGP 发言人要交换路由信息，就要先建立 TCP 连接（端口号为 179），然后在此连接上交换 BGP 报文以建立 BGP 会话，利用 BGP 会话交换路由信息，如增加了新的路由，或撤销过时的路由，以及报告出差错的情况等等。</p><p>使用 TCP 连接能提供可靠的服务，也简化了路由选择协议。使用 TCP 连接交换路由信息的两个 BGP 发言人，彼此成为对方的邻站或对等站。</p><p>BGP 发言人和自治系统 AS 的关系：</p><figure><img src="'+q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>每一个 BGP 发言人除了必须运行 BGP 协议外，还必须运行该自治系统所使用的内部网关协议，如 OSPF 或 RIP。</p><p>BGP 所交换的网络可达性的信息就是要到达某个网络所要经过的一系列 AS。</p><p>当 BGP 发言人互相交换了网络可达性的信息后，各 BGP 发言人就根据所采用的策略从收到的路由信息中找出到达各 AS 的较好路由。</p><p><img src="'+w+'" alt="" loading="lazy"><br><br><br><img src="'+D+'" alt="" loading="lazy"></p><p>自治系统 AS2 的 BGP 发言人通知主干网 AS1 的 BGP 发言人：“要到达网络 N1、N2、N3 和 N4 可经过 AS2。” 主干网在收到这个通知后，就发出通知∶&quot;要到达网络N1、N2，N3 和 N4 可沿路径（AS1，AS2）。&quot;</p><p>主干网还可发出通知：“要到达网络 N5、N6 和 N7 可沿路径（AS1, AS3）。”</p><h3 id="bgp-协议的特点" tabindex="-1"><a class="header-anchor" href="#bgp-协议的特点"><span>BGP 协议的特点</span></a></h3><p>BGP 协议交换路由信息的结点数量级是自治系统数的量级，这要比这些自治系统中的网络数少很多。</p><p>每一个自治系统中 BGP 发言人（或边界路由器）的数目是很少的。这样就使得自治系统之间的路由选择不致过分复杂。</p><p>BGP 支持 CIDR，因此 BGP 的路由表也就应当包括目的网络前缀、下一跳路由器，以及到达该目的网络所要经过的各个自治系统序列。由于使用了路径向量的信息，就可以很容易地避免产生兜圈子的路由。如果一个BGP 发言人收到了其他 BGP 发言人发来的路径通知，它就要检查一下本自治系统是否在此通知的路径中。如果在这条路径中，就不能采用这条路径（因为会兜圈子）。</p><p>在 BGP 刚刚运行时，BGP 的邻站是交换整个的 BGP 路由表。但以后只需要在发生变化时更新有变化的部分。这样做对节省网络带宽和减少路由器的处理开销都有好处。</p><p>BGP-4 共使用四种报文：</p><ul><li>打开 (<code>OPEN</code>) 报文，用来与相邻的另一个 BGP 发言人建立关系。</li><li>更新 (<code>UPDATE</code>) 报文，用来发送某一路由的信息，以及列出要撤消的多条路由。</li><li>保活 (<code>KEEPALIVE</code>) 报文，用来确认打开报文和周期性地证实邻站关系。</li><li>通知 (<code>NOTIFICATION</code>) 报文，用来发送检测到的差错。</li></ul><p>若两个邻站属于两个不同 AS，而其中一个邻站打算和另一个邻站定期地交换路由信息，这就应当有一个商谈的过程（因为很可能对方路由器的负荷已很重因而不愿意再加重负担）。因此，一开始向邻站进行商谈时就必须发送<code>OPEN</code>报文。如果邻站接受这种邻站关系，就用<code>KEEPALIVE</code>报文响应。这样，两个 BGP 发言人的邻站关系就建立了。</p><p>一旦邻站关系建立了，就要继续维持这种关系。双方中的每一方都需要确信对方是存在的，且一直在保持这种邻站关系。为此，这两个 BGP 发言人彼此要周期性地交换<code>KEEPALIVE</code>报文（一般每隔30秒）。<code>KEEPALIVE</code>报文只有 19 字节长（只用 BGP 报文的通用首部），因此不会造成网络上太大的开销。</p><p><code>UPDATE</code>报文是 BGP 协议的核心内容。BGP 发言人可以用<code>UPDATE</code>报文撤销它以前曾经通知过的路由，也可以宣布增加新的路由。撤销路由可以一次撤销许多条，但增加新路由时，每个更新报文只能增加一条。BGP 可以很容易地解决距离向量路由选择算法中的&quot;坏消息传播得慢&quot;这一问题。当某个路由器或链路出故障时，由于 BGP 发言人可以从不止一个邻站获得路由信息，因此很容易选择出新的路由。距离向量算法往往不能给出正确的选择，是因为这些算法不能指出哪些邻站到目的站的路由是独立的。</p><p>BGP 报文具有通用首部，其长度为 19 字节。通用首部分为三个字段。标记字段为 16 字节长，用来鉴别收到的 BGP 报文（这是假定将来有人会发明出合理的鉴别方案）。当不使用鉴别时，标记字段要置为全 1。长度字段指出包括通用首部在内的整个 BGP 报文以字节为单位的长度，最小值是 19，最大值是 4096。类型字段的值为 1 到 4，分别对应于四种 BGP 报文中的一种。</p><figure><img src="'+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>OPEN</code>报文共有 6 个字段，即</p><ul><li>版本（1 字节，现在的值是 4）</li><li>本自治系统号（2 字节，使用全球唯一的 16 位自治系统号，由 ICANN 地区登记机构分配）</li><li>保持时间（2 字节，以秒计算的保持为邻站关系的时间）</li><li>BGP 标识符（4 字节，通常就是该路由器的 IP 地址）</li><li>可选参数长度（1 字节）</li><li>可选参数。</li></ul><p><code>UPDATE</code>报文共有 5 个字段，即</p><ul><li>不可行路由长度（2 字节，指明下一个字段的长度）</li><li>撤销的路由（列出所有要撤销的路由）</li><li>路径属性总长度（2 字节，指明下一个字段的长度）</li><li>路径属性（定义在这个报文中增加的路径的属性）</li><li>网络层可达性信息 NLRI （<code>Network Layer Reachability Information</code>）。</li></ul><p>最后这个字段定义发出此报文的网络，包括网络前缀的位数、IP 地址前缀。</p><p><code>KEEPALIVE</code>报文只有 BGP 的 19 字节长的通用首部。</p><p><code>NOTIFICATION</code>报文有3个字段，即差错代码（1 字节）、差错子代码（1 字节）和差错数据（给出有关差错的诊断信息）。</p>',130)]))}const v=e(z,[["render",T],["__file","路由协议详解.html.vue"]]),O=JSON.parse('{"path":"/network/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3.html","title":"","lang":"zh-CN","frontmatter":{"description":"路由的概念 在 TCP/IP 通信中，网络层的作用是实现终端的点对点通信。IP 协议通过 IP 地址将数据包发送给目的主机，能够让互联网上任何两台主机进行通信。IP 地址可以识别主机和路由器，路由器可以把全世界的网络连接起来。 网络层网络层 什么是路由器 路由器可以连接多个网络。它有多个端口，分别连接不同的网络区域。通过识别目的 IP 地址的网络号，再...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/network/%E8%B7%AF%E7%94%B1%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:description","content":"路由的概念 在 TCP/IP 通信中，网络层的作用是实现终端的点对点通信。IP 协议通过 IP 地址将数据包发送给目的主机，能够让互联网上任何两台主机进行通信。IP 地址可以识别主机和路由器，路由器可以把全世界的网络连接起来。 网络层网络层 什么是路由器 路由器可以连接多个网络。它有多个端口，分别连接不同的网络区域。通过识别目的 IP 地址的网络号，再..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T02:39:10.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-27T02:39:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-27T02:39:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"路由的概念","slug":"路由的概念","link":"#路由的概念","children":[{"level":3,"title":"什么是路由器","slug":"什么是路由器","link":"#什么是路由器","children":[]},{"level":3,"title":"什么是路由","slug":"什么是路由","link":"#什么是路由","children":[]},{"level":3,"title":"什么是路由表","slug":"什么是路由表","link":"#什么是路由表","children":[]},{"level":3,"title":"路由表来源","slug":"路由表来源","link":"#路由表来源","children":[]},{"level":3,"title":"路由优先级","slug":"路由优先级","link":"#路由优先级","children":[]},{"level":3,"title":"路由环路","slug":"路由环路","link":"#路由环路","children":[]},{"level":3,"title":"黑洞路由","slug":"黑洞路由","link":"#黑洞路由","children":[]}]},{"level":2,"title":"动态路由协议","slug":"动态路由协议","link":"#动态路由协议","children":[{"level":3,"title":"路由协议基本原理","slug":"路由协议基本原理","link":"#路由协议基本原理","children":[]},{"level":3,"title":"自治系统","slug":"自治系统","link":"#自治系统","children":[]},{"level":3,"title":"EGP 和 IGP","slug":"egp-和-igp","link":"#egp-和-igp","children":[]}]},{"level":2,"title":"动态路由协议类型","slug":"动态路由协议类型","link":"#动态路由协议类型","children":[{"level":3,"title":"距离矢量路由协议","slug":"距离矢量路由协议","link":"#距离矢量路由协议","children":[]},{"level":3,"title":"链路状态路由协议","slug":"链路状态路由协议","link":"#链路状态路由协议","children":[]},{"level":3,"title":"路由协议的性能指标","slug":"路由协议的性能指标","link":"#路由协议的性能指标","children":[]},{"level":3,"title":"主要路由协议","slug":"主要路由协议","link":"#主要路由协议","children":[]}]},{"level":2,"title":"BGP","slug":"bgp","link":"#bgp","children":[{"level":3,"title":"BGP 协议的特点","slug":"bgp-协议的特点","link":"#bgp-协议的特点","children":[]}]}],"git":{"createdTime":1745721550000,"updatedTime":1745721550000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":22.79,"words":6837},"filePathRelative":"network/路由协议详解.md","localizedDate":"2025年4月27日","autoDesc":true}');export{v as comp,O as data};
