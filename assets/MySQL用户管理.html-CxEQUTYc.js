import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as l,o as a}from"./app-Coac0FJ0.js";const n={};function o(c,s){return a(),t("div",null,s[0]||(s[0]=[l(`<p>MySQL 是一个多用户数据库，具有功能强大的访问控制系统，可以为不同用户指定不同权限。</p><h2 id="user权限表" tabindex="-1"><a class="header-anchor" href="#user权限表"><span>user权限表</span></a></h2><p>MySQL 在安装时会自动创建一个名为<code>mysql</code>的数据库，<code>mysql</code>数据库中存储的都是用户权限表。用户登录以后，MySQL 会根据这些权限表的内容为每个用户赋予相应的权限。</p><p><code>user</code>表是 MySQL 中最重要的一个权限表，用来记录允许连接到服务器的账号信息。需要注意的是，在<code>user</code>表里启用的所有权限都是全局级的，适用于所有数据库。</p><p>user 表中的字段大致可以分为 4 类，分别是用户列、权限列、安全列和资源控制列。</p><h3 id="用户列" tabindex="-1"><a class="header-anchor" href="#用户列"><span>用户列</span></a></h3><p>用户列存储了用户连接 MySQL 数据库时需要输入的信息。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>MySQL 5.7 版本不再使用<code>Password</code>来作为密码的字段，而改成了<code>authentication_string</code>。</p></div><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Host</td><td style="text-align:center;">char(60)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">主机名</td></tr><tr><td style="text-align:center;">User</td><td style="text-align:center;">char(32)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">用户名</td></tr><tr><td style="text-align:center;">authentication_string</td><td style="text-align:center;">text</td><td style="text-align:center;">YES</td><td style="text-align:center;">无</td><td style="text-align:center;">密码</td></tr></tbody></table><p>用户登录时，如果这 3 个字段同时匹配，MySQL 数据库系统才会允许其登录。创建新用户时，也是设置这 3 个字段的值。修改用户密码时，实际就是修改<code>user</code>表的<code>authentication_string</code>字段的值。因此，这 3 个字段决定了用户能否登录。</p><h3 id="权限列" tabindex="-1"><a class="header-anchor" href="#权限列"><span>权限列</span></a></h3><p>权限列的字段决定了用户的权限，用来描述在全局范围内允许对数据和数据库进行的操作。</p><p>权限大致分为两大类，分别是高级管理权限和普通权限：</p><ul><li>高级管理权限主要对数据库进行管理，例如关闭服务的权限、超级权限和加载用户等；</li><li>普通权限主要操作数据库，例如查询权限、修改权限等。</li></ul><p><code>user</code>表的权限列包括<code>Select_priv、Insert_ priv</code>等以<code>priv</code>结尾的字段，这些字段值的数据类型为<code>ENUM</code>，可取的值只有<code>Y</code>和<code>N</code>：<code>Y</code>表示该用户有对应的权限，<code>N</code>表示该用户没有对应的权限。从安全角度考虑，这些字段的默认值都为<code>N</code>。</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Select_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以通过SELECT 命令查询数据</td></tr><tr><td style="text-align:center;">Insert_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以通过 INSERT 命令插入数据</td></tr><tr><td style="text-align:center;">Update_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以通过UPDATE 命令修改现有数据</td></tr><tr><td style="text-align:center;">Delete_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以通过DELETE 命令删除现有数据</td></tr><tr><td style="text-align:center;">Create_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以创建新的数据库和表</td></tr><tr><td style="text-align:center;">Drop_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以删除现有数据库和表</td></tr><tr><td style="text-align:center;">Reload_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以执行刷新和重新加载MySQL所用的各种内部缓存的特定命令，包括日志、权限、主机、查询和表</td></tr><tr><td style="text-align:center;">Shutdown_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以关闭MySQL服务器。将此权限提供给root账户之外的任何用户时，都应当非常谨慎</td></tr><tr><td style="text-align:center;">Process_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以通过SHOW PROCESSLIST命令查看其他用户的进程</td></tr><tr><td style="text-align:center;">File_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以执行SELECT INTO OUTFILE和LOAD DATA INFILE命令</td></tr><tr><td style="text-align:center;">Grant_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以将自己的权限再授予其他用户</td></tr><tr><td style="text-align:center;">References_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以创建外键约束</td></tr><tr><td style="text-align:center;">Index_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以对索引进行增删查</td></tr><tr><td style="text-align:center;">Alter_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以重命名和修改表结构</td></tr><tr><td style="text-align:center;">Show_db_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以查看服务器上所有数据库的名字，包括用户拥有足够访问权限的数据库</td></tr><tr><td style="text-align:center;">Super_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以执行某些强大的管理功能，例如通过KILL命令删除用户进程；使用SET GLOBAL命令修改全局MySQL变量，执行关于复制和日志的各种命令。（超级 权限）</td></tr><tr><td style="text-align:center;">Create_tmp_table_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以创建临时表</td></tr><tr><td style="text-align:center;">Lock_tables_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以使用LOCK TABLES命令阻止对表的访问/修改</td></tr><tr><td style="text-align:center;">Execute_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以执行存储过程</td></tr><tr><td style="text-align:center;">Repl_slave_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以读取用于维护复制数据库环境的二进制日志文件</td></tr><tr><td style="text-align:center;">Repl_client_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以确定复制从服务器和主服务器的位置</td></tr><tr><td style="text-align:center;">Create_view_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以创建视图</td></tr><tr><td style="text-align:center;">Show_view_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以查看视图</td></tr><tr><td style="text-align:center;">Create_routine_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以更改或放弃存储过程和函数</td></tr><tr><td style="text-align:center;">Alter_routine_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以修改或删除存储函数及函数</td></tr><tr><td style="text-align:center;">Create_user_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以执行CREATE USER命令，这个命令用于创建新的MySQL账户</td></tr><tr><td style="text-align:center;">Event_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以创建、修改和删除事件</td></tr><tr><td style="text-align:center;">Trigger_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以创建和删除触发器</td></tr><tr><td style="text-align:center;">Create_tablespace_priv</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">是否可以创建表空间</td></tr></tbody></table><p>如果要修改权限，可以使用<code>GRANT</code>语句为用户赋予一些权限，也可以通过<code>UPDATE</code>语句更新<code>user</code>表的方式来设置权限。</p><h3 id="安全列" tabindex="-1"><a class="header-anchor" href="#安全列"><span>安全列</span></a></h3><p>安全列主要用来判断用户是否能够登录成功。</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">ssl_type</td><td style="text-align:center;">enum(&#39;&#39;,&#39;ANY&#39;,<br>&#39;X509&#39;, &#39;SPECIFIED&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;"></td><td style="text-align:center;">支持ssl标准加密安全字段</td></tr><tr><td style="text-align:center;">ssl_cipher</td><td style="text-align:center;">blob</td><td style="text-align:center;">NO</td><td style="text-align:center;"></td><td style="text-align:center;">支持ssl标准加密安全字段</td></tr><tr><td style="text-align:center;">x509_issuer</td><td style="text-align:center;">blob</td><td style="text-align:center;">NO</td><td style="text-align:center;"></td><td style="text-align:center;">支持x509标准字段</td></tr><tr><td style="text-align:center;">x509_subject</td><td style="text-align:center;">blob</td><td style="text-align:center;">NO</td><td style="text-align:center;"></td><td style="text-align:center;">支持x509标准字段</td></tr><tr><td style="text-align:center;">plugin</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">mysql_native_<br>password</td><td style="text-align:center;">引入plugins以进行用户连接时的密码验证，plugin创建外部/代理用户</td></tr><tr><td style="text-align:center;">password_expired</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">密码是否过期 (N 未过期，y 已过期)</td></tr><tr><td style="text-align:center;">password_last_changed</td><td style="text-align:center;">timestamp</td><td style="text-align:center;">YES</td><td style="text-align:center;"></td><td style="text-align:center;">记录密码最近修改的时间</td></tr><tr><td style="text-align:center;">password_lifetime</td><td style="text-align:center;">smallint(5)</td><td style="text-align:center;">unsigned</td><td style="text-align:center;">YES</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">account_locked</td><td style="text-align:center;">enum(&#39;N&#39;,&#39;Y&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">N</td><td style="text-align:center;">用户是否被锁定（Y 锁定，N 未锁定）</td></tr></tbody></table><p>注意：即使<code>password_expired</code>为<code>Y</code>，用户也可以使用密码登录 MySQL，但是不允许做任何操作。</p><p>通常标准的发行版不支持<code>ssl</code>，可以使用<code>SHOW VARIABLES LIKE &quot;have_openssl&quot;</code>语句来查看是否具有<code>ssl</code>功能。如果<code>have_openssl</code>的值为<code>DISABLED</code>，那么则不支持<code>ssl</code>加密功能。</p><h3 id="资源控制列" tabindex="-1"><a class="header-anchor" href="#资源控制列"><span>资源控制列</span></a></h3><p>资源控制列的字段用来限制用户使用的资源，<code>user</code>表中的资源控制列：</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">max_questions</td><td style="text-align:center;">int(11) unsigned</td><td style="text-align:center;">NO</td><td style="text-align:center;">0</td><td style="text-align:center;">规定每小时允许执行查询的操作次数</td></tr><tr><td style="text-align:center;">max_updates</td><td style="text-align:center;">int(11) unsigned</td><td style="text-align:center;">NO</td><td style="text-align:center;">0</td><td style="text-align:center;">规定每小时允许执行更新的操作次数</td></tr><tr><td style="text-align:center;">max_connections</td><td style="text-align:center;">int(11) unsigned</td><td style="text-align:center;">NO</td><td style="text-align:center;">0</td><td style="text-align:center;">规定每小时允许执行的连接操作次数</td></tr><tr><td style="text-align:center;">max_user_connections</td><td style="text-align:center;">int(11) unsigned</td><td style="text-align:center;">NO</td><td style="text-align:center;">0</td><td style="text-align:center;">规定允许同时建立的连接次数</td></tr></tbody></table><p>以上字段的默认值为 0，表示没有限制。一个小时内用户查询或者连接数量超过资源控制限制，用户将被锁定，直到下一个小时才可以在此执行对应的操作。可以使用<code>GRANT</code>语句更新这些字段的值。</p><h2 id="其它权限表" tabindex="-1"><a class="header-anchor" href="#其它权限表"><span>其它权限表</span></a></h2><p>在 MySQL 数据库中，权限表除了<code>user</code>表外，还有<code>db</code>表、<code>tables_priv</code>表、<code>columns_priv</code>表和<code>procs_priv</code>表。</p><h3 id="db表" tabindex="-1"><a class="header-anchor" href="#db表"><span>db表</span></a></h3><p><code>db</code>表中存储了用户对某个数据库的操作权限。表中的字段大致可以分为两类，分别是用户列和权限列。</p><h4 id="用户列-1" tabindex="-1"><a class="header-anchor" href="#用户列-1"><span>用户列</span></a></h4><p><code>db</code>表用户列有 3 个字段，分别是<code>Host、User、Db</code>，标识从某个主机连接某个用户对某个数据库的操作权限，这 3 个字段的组合构成了<code>db</code>表的主键。</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Host</td><td style="text-align:center;">char(60)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">主机名</td></tr><tr><td style="text-align:center;">Db</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">数据库名</td></tr><tr><td style="text-align:center;">User</td><td style="text-align:center;">char(32)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">用户名</td></tr></tbody></table><h4 id="权限列-1" tabindex="-1"><a class="header-anchor" href="#权限列-1"><span>权限列</span></a></h4><p><code>db</code>表中的权限列和<code>user</code>表中的权限列大致相同，只是<code>user</code>表中的权限是针对所有数据库的，而<code>db</code>表中的权限只针对指定的数据库。如果希望用户只对某个数据库有操作权限，可以先将<code>user</code>表中对应的权限设置为<code>N</code>，然后在<code>db</code>表中设置对应数据库的操作权限。</p><h3 id="tables-priv表和columns-priv表" tabindex="-1"><a class="header-anchor" href="#tables-priv表和columns-priv表"><span>tables_priv表和columns_priv表</span></a></h3><p><code>tables_priv</code>表用来对单个表进行权限设置，<code>columns_priv</code>表用来对单个数据列进行权限设置。<code>tables_priv</code>表结构如下表所示：</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Host</td><td style="text-align:center;">char(60)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">主机</td></tr><tr><td style="text-align:center;">Db</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">数据库名</td></tr><tr><td style="text-align:center;">User</td><td style="text-align:center;">char(32)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">用户名</td></tr><tr><td style="text-align:center;">Table_name</td><td style="text-align:center;">har(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表名</td></tr><tr><td style="text-align:center;">Grantor</td><td style="text-align:center;">char(93)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">修改该记录的用户</td></tr><tr><td style="text-align:center;">Timestamp</td><td style="text-align:center;">timestamp</td><td style="text-align:center;">NO</td><td style="text-align:center;">CURRENT_TIMESTAMP</td><td style="text-align:center;">修改该记录的时间</td></tr><tr><td style="text-align:center;">Table_priv</td><td style="text-align:center;">set(&#39;Select&#39;,&#39;Insert&#39;,<br>&#39;Update&#39;,&#39;Delete&#39;,<br>&#39;Create&#39;,&#39;Drop&#39;,<br>&#39;Grant&#39;,&#39;References&#39;,<br>&#39;Index&#39;,&#39;Alter&#39;,&#39;Create View&#39;,<br>&#39;Show view&#39;,&#39;Trigger&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表示对表的操 作权限，包括 Select、Insert、Update、Delete、Create、Drop、Grant、References、Index 和 Alter 等</td></tr><tr><td style="text-align:center;">Column_priv</td><td style="text-align:center;">set(&#39;Select&#39;,&#39;Insert&#39;,<br>&#39;Update&#39;,&#39;References&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表示对表中的列的操作权限，包括 Select、Insert、Update 和 References</td></tr></tbody></table><p><code>columns_priv</code>表结构如下表所示：</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Host</td><td style="text-align:center;">char(60)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">主机</td></tr><tr><td style="text-align:center;">Db</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">数据库名</td></tr><tr><td style="text-align:center;">User</td><td style="text-align:center;">char(32)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">用户名</td></tr><tr><td style="text-align:center;">Table_name</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表名</td></tr><tr><td style="text-align:center;">Column_name</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">数据列名称，用来指定对哪些数据列具有操作权限</td></tr><tr><td style="text-align:center;">Timestamp</td><td style="text-align:center;">timestamp</td><td style="text-align:center;">NO</td><td style="text-align:center;">CURRENT_TIMESTAMP</td><td style="text-align:center;">修改该记录的时间</td></tr><tr><td style="text-align:center;">Column_priv</td><td style="text-align:center;">set(&#39;Select&#39;,<br>&#39;Insert&#39;,<br>&#39;Update&#39;,<br>&#39;References&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表示对表中的列的操作权限，包括 Select、Insert、Update 和 References</td></tr></tbody></table><h3 id="procs-priv表" tabindex="-1"><a class="header-anchor" href="#procs-priv表"><span>procs_priv表</span></a></h3><p><code>procs_priv</code>表可以对存储过程和存储函数进行权限设置，<code>procs_priv</code>的表结构如表所示：</p><table><thead><tr><th style="text-align:center;">字段名</th><th style="text-align:center;">字段类型</th><th style="text-align:center;">是否为空</th><th style="text-align:center;">默认值</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">Host</td><td style="text-align:center;">char(60)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">主机名</td></tr><tr><td style="text-align:center;">Db</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">数据库名</td></tr><tr><td style="text-align:center;">User</td><td style="text-align:center;">char(32)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">用户名</td></tr><tr><td style="text-align:center;">Routine_name</td><td style="text-align:center;">char(64)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表示存储过程或函数的名称</td></tr><tr><td style="text-align:center;">Routine_type</td><td style="text-align:center;">enum(<br>&#39;FUNCTION&#39;,<br>&#39;PROCEDURE&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表示存储过程或函数的类型，Routine_type 字段有两个值，分别是 FUNCTION 和 PROCEDURE。FUNCTION 表示这是一个函数；PROCEDURE 表示这是一个存储过程。</td></tr><tr><td style="text-align:center;">Grantor</td><td style="text-align:center;">char(93)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">插入或修改该记录的用户</td></tr><tr><td style="text-align:center;">Proc_priv</td><td style="text-align:center;">set(<br>&#39;Execute&#39;,<br>&#39;Alter Routine&#39;,<br>&#39;Grant&#39;)</td><td style="text-align:center;">NO</td><td style="text-align:center;">无</td><td style="text-align:center;">表示拥有的权限，包括 Execute、Alter Routine、Grant 3种</td></tr><tr><td style="text-align:center;">Timestamp</td><td style="text-align:center;">timestamp</td><td style="text-align:center;">NO</td><td style="text-align:center;">CURRENT_TIMESTAMP</td><td style="text-align:center;">表示记录更新时间</td></tr></tbody></table><h2 id="创建用户" tabindex="-1"><a class="header-anchor" href="#创建用户"><span>创建用户</span></a></h2><p>MySQL 在安装时，会默认创建一个名为<code>root</code>的用户，该用户拥有超级权限，可以控制整个 MySQL 服务器。</p><p>MySQL 提供了以下 3 种方法创建用户：</p><ul><li>使用<code>CREATE USER</code>语句创建用户</li><li>在<code>mysql.user</code>表中添加用户</li><li>使用<code>GRANT</code>语句创建用户</li></ul><h3 id="使用create-user语句创建用户" tabindex="-1"><a class="header-anchor" href="#使用create-user语句创建用户"><span>使用CREATE USER语句创建用户</span></a></h3><p>可以使用<code>CREATE USER</code>语句来创建 MySQL 用户，并设置相应的密码。</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>CREATE USER &lt;用户&gt; [ IDENTIFIED BY [ PASSWORD ] &#39;password&#39; ] [ ,用户 [ IDENTIFIED BY [ PASSWORD ] &#39;password&#39; ]]</span></span></code></pre></div><p>参数说明：</p><ol><li>用户<br> 指定创建用户账号，格式为<code>user_name&#39;@&#39;host_name</code>。这里的<code>user_name</code>是用户名，<code>host_name</code>为主机名，即用户连接 MySQL 时所用主机的名字。如果在创建的过程中，只给出了用户名，而没指定主机名，那么主机名默认为“%”，表示一组主机，即对所有主机开放权限。</li><li><code>IDENTIFIED BY</code>子句<br> 用于指定用户密码。新用户可以没有初始密码，若该用户不设密码，可省略此子句。</li><li><code>PASSWORD &#39;password&#39;</code><br><code>PASSWORD</code>表示使用哈希值设置密码，该参数可选。如果密码是一个普通的字符串，则不需要使用<code>PASSWORD</code>关键字。<code>&#39;password&#39;</code>表示用户登录时使用的密码，需要用单引号括起来。</li></ol><p>使用<code>CREATE USER</code>语句时应注意以下几点：</p><ul><li><code>CREATE USER</code>语句可以不指定初始密码。但是从安全的角度来说，不推荐这种做法</li><li>使用<code>CREATE USER</code>语句必须拥有<code>mysql</code>数据库的<code>INSERT</code>权限或全局<code>CREATE USER</code>权限</li><li>使用<code>CREATE USER</code>语句创建一个用户后，MySQL 会在<code>mysql</code>数据库的<code>user</code>表中添加一条新记录</li><li><code>CREATE USER</code>语句可以同时创建多个用户，多个用户用逗号隔开</li></ul><p>新创建的用户拥有的权限很少，它们只能执行不需要权限的操作。如登录 MySQL、使用<code>SHOW</code>语句查询所有存储引擎和字符集的列表等。如果两个用户的用户名相同，但主机名不同，MySQL 会将它们视为两个用户，并允许为这两个用户分配不同的权限集合。</p><p>使用<code>CREATE USER</code>创建一个用户，用户名是<code>test1</code>，密码是<code>test1</code>，主机名是<code>localhost</code>。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> CREATE</span><span style="color:#F0F3F6;"> USER </span><span style="color:#ADDCFF;">&#39;test1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;"> IDENTIFIED </span><span style="color:#FF9492;">BY</span><span style="color:#ADDCFF;"> &#39;test1&#39;</span><span style="color:#F0F3F6;">;</span></span></code></pre></div><p>在实际应用中，我们应避免明文指定密码，可以通过<code>PASSWORD</code>关键字使用密码的哈希值设置密码。</p><p>在 MySQL 中，可以使用<code>password()</code>函数获取密码的哈希值：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> SELECT</span><span style="color:#FF9492;"> password</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;test1&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| </span><span style="color:#FF9492;">password</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;test1&#39;</span><span style="color:#F0F3F6;">)                         |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| </span><span style="color:#FF9492;">*</span><span style="color:#F0F3F6;">06C0BF5B64ECE2F648B5F048A71903906BA08E5C |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-------------------------------------------+</span></span></code></pre></div><p><code>*06C0BF5B64ECE2F648B5F048A71903906BA08E5C</code>就是<code>test1</code>的哈希值。下面创建用户<code>test1</code>，SQL 语句和执行过程如下：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> CREATE</span><span style="color:#F0F3F6;"> USER </span><span style="color:#ADDCFF;">&#39;test1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;"> IDENTIFIED </span><span style="color:#FF9492;">BY</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#ADDCFF;"> &#39;*06C0BF5B64ECE2F648B5F048A71903906BA08E5C&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected, </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;"> warning (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>执行成功后就可以使用密码<code>test1</code>登录了。</p><h3 id="使用-insert-语句新建用户" tabindex="-1"><a class="header-anchor" href="#使用-insert-语句新建用户"><span>使用 INSERT 语句新建用户</span></a></h3><p>可以使用<code>INSERT</code>语句将用户的信息添加到<code>mysql.user</code>表中，但必须拥有对<code>mysql.user</code>表的<code>INSERT</code>权限。通常<code>INSERT</code>语句只添加<code>Host、User</code>和<code>authentication_string</code>这 3 个字段的值。</p><p>MySQL 5.7 的<code>user</code>表中的密码字段从<code>Password</code>变成了<code>authentication_string</code>，如果是 MySQL 5.7 之前的版本，将<code>authentication_string</code>字段替换成<code>Password</code>即可。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">INSERT INTO</span><span style="color:#91CBFF;"> mysql</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#F0F3F6;">(Host, User, authentication_string, ssl_cipher, x509_issuer, x509_subject) </span><span style="color:#FF9492;">VALUES</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&#39;hostname&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;username&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">PASSWORD</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;password&#39;</span><span style="color:#F0F3F6;">), </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">);</span></span></code></pre></div><p>由于<code>mysql</code>数据库的<code>user</code>表中，<code>ssl_cipher、x509_issuer</code>和<code>x509_subject</code>这 3 个字段没有默认值，所以向<code>user</code>表插入新记录时，一定要设置这 3 个字段的值，否则<code>INSERT</code>语句将不能执行。</p><p>下面使用<code>INSERT</code>语句创建名为<code>test2</code>的用户，主机名是<code>localhost</code>，密码也是<code>test2</code>。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> INSERT INTO</span><span style="color:#91CBFF;"> mysql</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#F0F3F6;">(Host, User, authentication_string, ssl_cipher, x509_issuer, x509_subject)</span></span>
<span class="line"><span style="color:#FF9492;">       VALUES</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;test2&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">PASSWORD</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;test2&#39;</span><span style="color:#F0F3F6;">), </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">1</span><span style="color:#FF9492;"> row</span><span style="color:#F0F3F6;"> affected, </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;"> warning (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">02</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>结果显示，新建用户成功。但是这时如果通过该账户登录 MySQL 服务器，不会登录成功，因为<code>test2</code>用户还没有生效。</p><p>可以使用<code>FLUSH</code>命令让用户生效：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">FLUSH PRIVILEGES;</span></span></code></pre></div><p>使用以上命令可以让 MySQL 刷新系统权限相关表。执行<code>FLUSH</code>命令需要<code>RELOAD</code>权限。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p><code>user</code>表中的<code>User</code>和<code>Host</code>字段区分大小写，创建用户时要指定正确的用户名称或主机名。</p></div><h3 id="使用grant语句新建用户" tabindex="-1"><a class="header-anchor" href="#使用grant语句新建用户"><span>使用GRANT语句新建用户</span></a></h3><p>虽然<code>CREATE USER</code>和<code>INSERT INTO</code>语句都可以创建普通用户，但是这两种方式不便授予用户权限。于是 MySQL 提供了<code>GRANT</code>语句。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">GRANT</span><span style="color:#F0F3F6;"> priv_type </span><span style="color:#FF9492;">ON</span><span style="color:#91CBFF;"> database</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">table</span><span style="color:#FF9492;"> TO</span><span style="color:#F0F3F6;"> user [IDENTIFIED BY [PASSWORD] </span><span style="color:#ADDCFF;">&#39;password&#39;</span><span style="color:#F0F3F6;">]</span></span></code></pre></div><p>其中：</p><ul><li><code>priv_type</code>参数表示新用户的权限；</li><li><code>database.table</code>参数表示新用户的权限范围，即只能在指定的数据库和表上使用自己的权限；</li><li><code>user</code>参数指定新用户的账号，由用户名和主机名构成；</li><li><code>IDENTIFIED BY</code>关键字用来设置密码；</li><li><code>password</code>参数表示新用户的密码。</li></ul><p>下面使用<code>GRANT</code>语句创建名为<code>test3</code>的用户，主机名为<code>localhost</code>，密码为<code>test3</code>。该用户对所有数据库的所有表都有<code>SELECT</code>权限。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> GRANT</span><span style="color:#FF9492;"> SELECT</span><span style="color:#FF9492;"> ON*</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;test3&#39;</span><span style="color:#F0F3F6;">@localhost IDENTIFIED </span><span style="color:#FF9492;">BY</span><span style="color:#ADDCFF;"> &#39;test3&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected, </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;"> warning (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">01</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>其中，<code>*.*</code>表示所有数据库下的所有表。结果显示创建用户成功，且<code>test3</code>用户对所有表都有查询（<code>SELECT</code>）权限。</p><h2 id="修改用户" tabindex="-1"><a class="header-anchor" href="#修改用户"><span>修改用户</span></a></h2><p>在 MySQL 中，我们可以使用<code>RENAME USER</code>语句修改一个或多个已经存在的用户账号。</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>RENAME USER &lt;旧用户&gt; TO &lt;新用户&gt;</span></span></code></pre></div><p>其中：</p><ul><li>&lt;旧用户&gt;：系统中已经存在的 MySQL 用户账号。</li><li>&lt;新用户&gt;：新的 MySQL 用户账号。</li></ul><p>使用<code>RENAME USER</code>语句时应注意以下几点：</p><ul><li><code>RENAME USER</code>语句用于对原有的 MySQL 用户进行重命名。</li><li>若系统中旧账户不存在或者新账户已存在，该语句执行时会出现错误。</li><li>使用<code>RENAME USER</code>语句，必须拥有<code>mysql</code>数据库的<code>UPDATE</code>权限或全局<code>CREATE USER</code>权限。</li></ul><p>使用<code>RENAME USER</code>语句将用户名<code>test1</code>修改为<code>testUser1</code>，主机是<code>localhost</code>。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> RENAME USER </span><span style="color:#ADDCFF;">&#39;test1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;testUser1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">03</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><h2 id="删除用户" tabindex="-1"><a class="header-anchor" href="#删除用户"><span>删除用户</span></a></h2><p>在 MySQL 数据库中，可以使用<code>DROP USER</code>语句删除用户，也可以直接在<code>mysql.user</code>表中删除用户以及相关权限。</p><h3 id="_1-使用drop-user语句删除普通用户" tabindex="-1"><a class="header-anchor" href="#_1-使用drop-user语句删除普通用户"><span>1. 使用DROP USER语句删除普通用户</span></a></h3><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>DROP USER &lt;用户1&gt; [ , &lt;用户2&gt; ]…</span></span></code></pre></div><p>其中，用户用来指定需要删除的用户账号。</p><p>使用<code>DROP USER</code>语句应注意以下几点：</p><ul><li><code>DROP USER</code>语句可用于删除一个或多个用户，并撤销其权限。</li><li>使用<code>DROP USER</code>语句必须拥有<code>mysql</code>数据库的<code>DELETE</code>权限或全局<code>CREATE USER</code>权限。</li><li>在<code>DROP USER</code>语句的使用中，若没有明确地给出账户的主机名，则该主机名默认为“%”。</li></ul><p>注意：用户的删除不会影响他们之前所创建的表、索引或其他数据库对象，因为 MySQL 并不会记录是谁创建了这些对象。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> DROP</span><span style="color:#F0F3F6;"> USER </span><span style="color:#ADDCFF;">&#39;test1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span></code></pre></div><h3 id="_2-使用delete语句删除普通用户" tabindex="-1"><a class="header-anchor" href="#_2-使用delete语句删除普通用户"><span>2. 使用DELETE语句删除普通用户</span></a></h3><p>可以使用<code>DELETE</code>语句直接删除<code>mysql.user</code>表中相应的用户信息，但必须拥有<code>mysql.user</code>表的<code>DELETE</code>权限。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">DELETE</span><span style="color:#FF9492;"> FROM</span><span style="color:#91CBFF;"> mysql</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#FF9492;"> WHERE</span><span style="color:#F0F3F6;"> Host</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">&#39;hostname&#39;</span><span style="color:#FF9492;"> AND</span><span style="color:#F0F3F6;"> User</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">&#39;username&#39;</span><span style="color:#F0F3F6;">;</span></span></code></pre></div><p><code>Host</code>和<code>User</code>这两个字段都是<code>mysql.user</code>表的主键。因此，需要两个字段的值才能确定一条记录。</p><p>下面使用<code>DELETE</code>语句删除用户<code>&#39;test2&#39;@&#39;localhost&#39;</code>。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">DELETE</span><span style="color:#FF9492;"> FROM</span><span style="color:#91CBFF;"> mysql</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#FF9492;"> WHERE</span><span style="color:#F0F3F6;"> Host</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#FF9492;">AND</span><span style="color:#F0F3F6;"> User</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">&#39;test2&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">1</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>结果显示删除成功。可以使用<code>SELETE</code>语句查询<code>mysql.user</code>表，以确定该用户是否已经成功删除。</p><h2 id="查看用户权限" tabindex="-1"><a class="header-anchor" href="#查看用户权限"><span>查看用户权限</span></a></h2><p>在 MySQL 中，可以通过查看<code>mysql.user</code>表中的数据记录来查看相应的用户权限，也可以使用<code>SHOW GRANTS</code>语句查询用户的权限。</p><p><code>mysql</code>数据库下的<code>user</code>表中存储着用户的基本权限，可以使用<code>SELECT</code>语句来查看。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">SELECT</span><span style="color:#FF9492;"> *</span><span style="color:#FF9492;"> FROM</span><span style="color:#91CBFF;"> mysql</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#F0F3F6;">;</span></span></code></pre></div><p>要执行该语句，必须拥有对<code>user</code>表的查询权限。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意：新创建的用户只有登录 MySQL 服务器的权限，没有任何其它权限，不能查询<code>user</code>表。</p></div><p>除了使用<code>SELECT</code>语句之外，还可以使用<code>SHOW GRANTS FOR</code>语句查看权限。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">SHOW GRANTS </span><span style="color:#FF9492;">FOR</span><span style="color:#ADDCFF;"> &#39;username&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;hostname&#39;</span><span style="color:#F0F3F6;">;</span></span></code></pre></div><p>下面创建<code>testuser1</code>用户并查询权限：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> CREATE</span><span style="color:#F0F3F6;"> USER </span><span style="color:#ADDCFF;">&#39;testuser1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> SHOW GRANTS </span><span style="color:#FF9492;">FOR</span><span style="color:#ADDCFF;"> &#39;testuser1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-----------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| Grants </span><span style="color:#FF9492;">for</span><span style="color:#F0F3F6;"> testuser1@localhost                |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-----------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| </span><span style="color:#FF9492;">GRANT</span><span style="color:#F0F3F6;"> USAGE </span><span style="color:#FF9492;">ON</span><span style="color:#FF9492;"> *</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;testuser1&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;"> |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-----------------------------------------------+</span></span>
<span class="line"><span style="color:#91CBFF;">1</span><span style="color:#FF9492;"> row</span><span style="color:#FF9492;"> in</span><span style="color:#FF9492;"> set</span><span style="color:#F0F3F6;"> (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>其中，<code>USAGE ON *.*</code>表示该用户对任何数据库和任何表都没有权限。</p><p>下面查询<code>root</code>用户的权限，代码如下：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> SHOW GRANTS </span><span style="color:#FF9492;">FOR</span><span style="color:#ADDCFF;"> &#39;root&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">---------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| Grants </span><span style="color:#FF9492;">for</span><span style="color:#FF9492;"> root</span><span style="color:#F0F3F6;">@localhost                                           |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">---------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| </span><span style="color:#FF9492;">GRANT</span><span style="color:#F0F3F6;"> ALL PRIVILEGES </span><span style="color:#FF9492;">ON</span><span style="color:#FF9492;"> *</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;root&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#FF9492;"> WITH</span><span style="color:#FF9492;"> GRANT</span><span style="color:#FF9492;"> OPTION</span><span style="color:#F0F3F6;"> |</span></span>
<span class="line"><span style="color:#F0F3F6;">| </span><span style="color:#FF9492;">GRANT</span><span style="color:#F0F3F6;"> PROXY </span><span style="color:#FF9492;">ON</span><span style="color:#ADDCFF;"> &#39;&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;&#39;</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;root&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#FF9492;"> WITH</span><span style="color:#FF9492;"> GRANT</span><span style="color:#FF9492;"> OPTION</span><span style="color:#F0F3F6;">        |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">---------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#91CBFF;">2</span><span style="color:#FF9492;"> rows</span><span style="color:#FF9492;"> in</span><span style="color:#FF9492;"> set</span><span style="color:#F0F3F6;"> (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><h2 id="grant-用户授权" tabindex="-1"><a class="header-anchor" href="#grant-用户授权"><span>GRANT：用户授权</span></a></h2><p>授权就是为某个用户赋予某些权限MySQL 提供了<code>GRANT</code>语句来为用户设置权限。</p><p>在 MySQL 中，拥有<code>GRANT</code>权限的用户才可以执行<code>GRANT 语句</code>：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>GRANT priv_type [(column_list)] ON database.table</span></span>
<span class="line"><span>TO user [IDENTIFIED BY [PASSWORD] &#39;password&#39;]</span></span>
<span class="line"><span>[, user[IDENTIFIED BY [PASSWORD] &#39;password&#39;]] ...</span></span>
<span class="line"><span>[WITH with_option [with_option]...]</span></span></code></pre></div><p>其中：</p><ul><li><code>priv_type</code>参数表示权限类型；</li><li><code>columns_list</code>参数表示权限作用于哪些列上，省略该参数时，表示作用于整个表；</li><li><code>database.table</code>用于指定权限的级别；</li><li><code>user</code>参数表示用户账户，由用户名和主机名构成，格式是<code>&#39;username&#39;@&#39;hostname&#39;</code>；</li><li><code>IDENTIFIED BY</code>参数用来为用户设置密码；</li><li><code>password</code>参数是用户的新密码。</li></ul><p><code>WITH</code>关键字后面带有一个或多个<code>with_option</code>参数。这个参数有 5 个选项：</p><ul><li><code>GRANT OPTION</code>：被授权的用户可以将这些权限赋予给别的用户；</li><li><code>MAX_QUERIES_PER_HOUR count</code>：设置每个小时可以允许执行<code>count</code>次查询；</li><li><code>MAX_UPDATES_PER_HOUR count</code>：设置每个小时可以允许执行<code>count</code>次更新；</li><li><code>MAX_CONNECTIONS_PER_HOUR count</code>：设置每小时可以建立<code>count</code>个连接;</li><li><code>MAX_USER_CONNECTIONS count</code>：设置单个用户可以同时具有的<code>count</code>个连接。</li></ul><p>MySQL 中可以授予的权限有如下几组：</p><ul><li>列权限，和表中的一个具体列相关。例如，可以使用<code>UPDATE</code>语句更新表<code>students</code>中 name 列的值的权限。</li><li>表权限，和一个具体表中的所有数据相关。例如，可以使用<code>SELECT</code>语句查询表<code>students</code>的所有数据的权限。</li><li>数据库权限，和一个具体的数据库中的所有表相关。例如，可以在已有的数据库<code>mytest</code>中创建新表的权限。</li><li>用户权限，和 MySQL 中所有的数据库相关。例如，可以删除已有的数据库或者创建一个新的数据库的权限。</li></ul><p>对应地，在<code>GRANT</code>语句中可用于指定权限级别的值有以下几类格式：</p><ul><li><code>*</code>：表示当前数据库中的所有表。</li><li><code>*.*</code>：表示所有数据库中的所有表。</li><li><code>db_name.*</code>：表示某个数据库中的所有表，<code>db_name</code>指定数据库名。</li><li><code>db_name.tbl_name</code>：表示某个数据库中的某个表或视图，<code>db_name</code>指定数据库名，<code>tbl_name</code>指定表名或视图名。</li><li><code>db_name.routine_name</code>：表示某个数据库中的某个存储过程或函数，<code>routine_name</code>指定存储过程名或函数名。</li><li><code>TO</code>子句：如果权限被授予给一个不存在的用户，MySQL 会自动执行一条<code>CREATE USER</code>语句来创建这个用户，但同时必须为该用户设置密码。</li></ul><h3 id="权限类型说明" tabindex="-1"><a class="header-anchor" href="#权限类型说明"><span>权限类型说明</span></a></h3><ol><li>授予数据库权限时，&lt;权限类型&gt;可以指定为以下值：</li></ol><table><thead><tr><th style="text-align:center;">权限名称</th><th style="text-align:center;">对应user表中的字段</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">SELECT</td><td style="text-align:center;">Select_priv</td><td style="text-align:center;">表示授予用户可以使用 SELECT 语句访问特定数据库中所有表和视图的权限。</td></tr><tr><td style="text-align:center;">INSERT</td><td style="text-align:center;">Insert_priv</td><td style="text-align:center;">表示授予用户可以使用 INSERT 语句向特定数据库中所有表添加数据行的权限。</td></tr><tr><td style="text-align:center;">DELETE</td><td style="text-align:center;">Delete_priv</td><td style="text-align:center;">表示授予用户可以使用 DELETE 语句删除特定数据库中所有表的数据行的权限。</td></tr><tr><td style="text-align:center;">UPDATE</td><td style="text-align:center;">Update_priv</td><td style="text-align:center;">表示授予用户可以使用 UPDATE 语句更新特定数据库中所有数据表的值的权限。</td></tr><tr><td style="text-align:center;">REFERENCES</td><td style="text-align:center;">References_priv</td><td style="text-align:center;">表示授予用户可以创建指向特定的数据库中的表外键的权限。</td></tr><tr><td style="text-align:center;">CREATE</td><td style="text-align:center;">Create_priv</td><td style="text-align:center;">表示授权用户可以使用 CREATE TABLE 语句在特定数据库中创建新表的权限。</td></tr><tr><td style="text-align:center;">ALTER</td><td style="text-align:center;">Alter_priv</td><td style="text-align:center;">表示授予用户可以使用 ALTER TABLE 语句修改特定数据库中所有数据表的权限。</td></tr><tr><td style="text-align:center;">SHOW VIEW</td><td style="text-align:center;">Show_view_priv</td><td style="text-align:center;">表示授予用户可以查看特定数据库中已有视图的视图定义的权限。</td></tr><tr><td style="text-align:center;">CREATE ROUTINE</td><td style="text-align:center;">Create_routine_priv</td><td style="text-align:center;">表示授予用户可以为特定的数据库创建存储过程和存储函数的权限。</td></tr><tr><td style="text-align:center;">ALTER ROUTINE</td><td style="text-align:center;">Alter_routine_priv</td><td style="text-align:center;">表示授予用户可以更新和删除数据库中已有的存储过程和存储函数的权限。</td></tr><tr><td style="text-align:center;">INDEX</td><td style="text-align:center;">Index_priv</td><td style="text-align:center;">表示授予用户可以在特定数据库中的所有数据表上定义和删除索引的权限。</td></tr><tr><td style="text-align:center;">DROP</td><td style="text-align:center;">Drop_priv</td><td style="text-align:center;">表示授予用户可以删除特定数据库中所有表和视图的权限。</td></tr><tr><td style="text-align:center;">CREATE TEMPORARY TABLES</td><td style="text-align:center;">Create_tmp_table_priv</td><td style="text-align:center;">表示授予用户可以在特定数据库中创建临时表的权限。</td></tr><tr><td style="text-align:center;">CREATE VIEW</td><td style="text-align:center;">Create_view_priv</td><td style="text-align:center;">表示授予用户可以在特定数据库中创建新的视图的权限。</td></tr><tr><td style="text-align:center;">EXECUTE ROUTINE</td><td style="text-align:center;">Execute_priv</td><td style="text-align:center;">表示授予用户可以调用特定数据库的存储过程和存储函数的权限。</td></tr><tr><td style="text-align:center;">LOCK TABLES</td><td style="text-align:center;">Lock_tables_priv</td><td style="text-align:center;">表示授予用户可以锁定特定数据库的已有数据表的权限。</td></tr><tr><td style="text-align:center;">ALL 或<br>ALL PRIVILEGES<br>或 SUPER</td><td style="text-align:center;">Super_priv</td><td style="text-align:center;">表示以上所有权限/超级权限</td></tr></tbody></table><ol start="2"><li>授予表权限时，&lt;权限类型&gt;可以指定为以下值：</li></ol><table><thead><tr><th style="text-align:center;">权限名称</th><th style="text-align:center;">对应user表中的字段</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">SELECT</td><td style="text-align:center;">Select_priv</td><td style="text-align:center;">授予用户可以使用 SELECT 语句进行访问特定表的权限</td></tr><tr><td style="text-align:center;">INSERT</td><td style="text-align:center;">Insert_priv</td><td style="text-align:center;">授予用户可以使用 INSERT 语句向一个特定表中添加数据行的权限</td></tr><tr><td style="text-align:center;">DELETE</td><td style="text-align:center;">Delete_priv</td><td style="text-align:center;">授予用户可以使用 DELETE 语句从一个特定表中删除数据行的权限</td></tr><tr><td style="text-align:center;">DROP</td><td style="text-align:center;">Drop_priv</td><td style="text-align:center;">授予用户可以删除数据表的权限</td></tr><tr><td style="text-align:center;">UPDATE</td><td style="text-align:center;">Update_priv</td><td style="text-align:center;">授予用户可以使用 UPDATE 语句更新特定数据表的权限</td></tr><tr><td style="text-align:center;">ALTER</td><td style="text-align:center;">Alter_priv</td><td style="text-align:center;">授予用户可以使用 ALTER TABLE 语句修改数据表的权限</td></tr><tr><td style="text-align:center;">REFERENCES</td><td style="text-align:center;">References_priv</td><td style="text-align:center;">授予用户可以创建一个外键来参照特定数据表的权限</td></tr><tr><td style="text-align:center;">CREATE</td><td style="text-align:center;">Create_priv</td><td style="text-align:center;">授予用户可以使用特定的名字创建一个数据表的权限</td></tr><tr><td style="text-align:center;">INDEX</td><td style="text-align:center;">Index_priv</td><td style="text-align:center;">授予用户可以在表上定义索引的权限</td></tr><tr><td style="text-align:center;">ALL 或<br>ALL PRIVILEGES<br>或 SUPER</td><td style="text-align:center;">Super_priv</td><td style="text-align:center;">所有的权限名</td></tr></tbody></table><ol start="3"><li>授予列权限时，&lt;权限类型&gt;的值只能指定为<code>SELECT、INSERT</code>和<code>UPDATE</code>，同时权限的后面需要加上列名列表<code>column-list</code>。</li><li>最有效率的权限是用户权限。<br> 授予用户权限时，&lt;权限类型&gt;除了可以指定为授予数据库权限时的所有值之外，还可以是下面这些值：</li></ol><ul><li><code>CREATE USER</code>：表示授予用户可以创建和删除新用户的权限。</li><li><code>SHOW DATABASES</code>：表示授予用户可以使用<code>SHOW DATABASES</code>语句查看所有已有的数据库的定义的权限。</li></ul><p>使用<code>GRANT</code>语句创建一个新的用户<code>testUser</code>，密码为<code>testPwd</code>。用户<code>testUser</code>对所有的数据有查询、插入权限，并授予<code>GRANT</code>权限。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> GRANT</span><span style="color:#FF9492;"> SELECT</span><span style="color:#F0F3F6;">,</span><span style="color:#FF9492;">INSERT</span><span style="color:#FF9492;"> ON</span><span style="color:#FF9492;"> *</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span></span>
<span class="line"><span style="color:#FF9492;">    -&gt;</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;testUser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span></span>
<span class="line"><span style="color:#FF9492;">    -&gt;</span><span style="color:#F0F3F6;"> IDENTIFIED </span><span style="color:#FF9492;">BY</span><span style="color:#ADDCFF;"> &#39;testPwd&#39;</span></span>
<span class="line"><span style="color:#FF9492;">    -&gt;</span><span style="color:#FF9492;"> WITH</span><span style="color:#FF9492;"> GRANT</span><span style="color:#FF9492;"> OPTION</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected, </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;"> warning (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">05</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>使用<code>SHOW GRANTS</code>语句查询用户<code>testUser</code>的权限。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> SHOW GRANTS </span><span style="color:#FF9492;">FOR</span><span style="color:#ADDCFF;"> &#39;testUser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| Grants </span><span style="color:#FF9492;">for</span><span style="color:#F0F3F6;"> testUser@localhost                                           |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| </span><span style="color:#FF9492;">GRANT</span><span style="color:#FF9492;"> SELECT</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">INSERT</span><span style="color:#FF9492;"> ON</span><span style="color:#FF9492;"> *</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;testUser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#FF9492;"> WITH</span><span style="color:#FF9492;"> GRANT</span><span style="color:#FF9492;"> OPTION</span><span style="color:#F0F3F6;"> |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-------------------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#91CBFF;">1</span><span style="color:#FF9492;"> row</span><span style="color:#FF9492;"> in</span><span style="color:#FF9492;"> set</span><span style="color:#F0F3F6;"> (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>结果显示，<code>testUser</code>对所有数据库的所有表有查询、插入权限，并可以将这些权限赋予给别的用户。</p><h2 id="revoke-删除用户权限" tabindex="-1"><a class="header-anchor" href="#revoke-删除用户权限"><span>REVOKE：删除用户权限</span></a></h2><p>在 MySQL 中，可以使用<code>REVOKE</code>语句删除某个用户的某些权限（此用户不会被删除），在一定程度上可以保证系统的安全性。</p><p>使用<code>REVOKE</code>语句删除权限的语法格式有两种形式：</p><h3 id="第一种" tabindex="-1"><a class="header-anchor" href="#第一种"><span>第一种</span></a></h3><p>删除用户某些特定的权限：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">REVOKE</span><span style="color:#F0F3F6;"> priv_type [(column_list)]...</span></span>
<span class="line"><span style="color:#FF9492;">ON</span><span style="color:#91CBFF;"> database</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">table</span></span>
<span class="line"><span style="color:#FF9492;">FROM</span><span style="color:#F0F3F6;"> user [, user]...</span></span></code></pre></div><p><code>REVOKE</code>语句中的参数与<code>GRANT</code>语句的参数意思相同。其中：</p><ul><li><code>priv_type</code>参数表示权限的类型；</li><li><code>column_list</code>参数表示权限作用于哪些列上，没有该参数时作用于整个表上；</li><li><code>user</code>参数由用户名和主机名构成，格式为<code>username&#39;@&#39;hostname&#39;</code>。</li></ul><h3 id="第二种" tabindex="-1"><a class="header-anchor" href="#第二种"><span>第二种</span></a></h3><p>删除特定用户的所有权限：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">REVOKE</span><span style="color:#F0F3F6;"> ALL PRIVILEGES, </span><span style="color:#FF9492;">GRANT</span><span style="color:#FF9492;"> OPTION</span><span style="color:#FF9492;"> FROM</span><span style="color:#F0F3F6;"> user [, user] ...</span></span></code></pre></div><p>删除用户权限需要注意以下几点：</p><ul><li><code>REVOKE</code>语法和<code>GRANT</code>语句的语法格式相似，但具有相反的效果。</li><li>要使用<code>REVOKE</code>语句，必须拥有 MySQL 数据库的全局<code>CREATE USER</code>权限或<code>UPDATE</code>权限。</li></ul><p>使用<code>REVOKE</code>语句取消用户<code>testUser</code>的插入权限。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> REVOKE</span><span style="color:#FF9492;"> INSERT</span><span style="color:#FF9492;"> ON</span><span style="color:#FF9492;"> *</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#FF9492;"> FROM</span><span style="color:#ADDCFF;"> &#39;testUser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">01</span><span style="color:#F0F3F6;"> sec)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> SHOW GRANTS </span><span style="color:#FF9492;">FOR</span><span style="color:#ADDCFF;"> &#39;testUser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-----------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| Grants </span><span style="color:#FF9492;">for</span><span style="color:#F0F3F6;"> testUser@localhost                                   |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-----------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#F0F3F6;">| </span><span style="color:#FF9492;">GRANT</span><span style="color:#FF9492;"> SELECT</span><span style="color:#FF9492;"> ON</span><span style="color:#FF9492;"> *</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;testUser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#FF9492;"> WITH</span><span style="color:#FF9492;"> GRANT</span><span style="color:#FF9492;"> OPTION</span><span style="color:#F0F3F6;"> |</span></span>
<span class="line"><span style="color:#FF9492;">+</span><span style="color:#BDC4CC;">-----------------------------------------------------------------+</span></span>
<span class="line"><span style="color:#91CBFF;">1</span><span style="color:#FF9492;"> row</span><span style="color:#FF9492;"> in</span><span style="color:#FF9492;"> set</span><span style="color:#F0F3F6;"> (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><h2 id="登录和退出服务器" tabindex="-1"><a class="header-anchor" href="#登录和退出服务器"><span>登录和退出服务器</span></a></h2><p>启动 MySQL 服务后，可以使用以下命令来登录。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">h hostname|hostlP </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">p port </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">u username </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">p DatabaseName </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">e </span><span style="color:#ADDCFF;">&quot;SQL语句&quot;</span></span></code></pre></div><p>参数说明：</p><ul><li><code>-h</code>：指定连接 MySQL 服务器的地址。可以用两种方式表示，<code>hostname</code>为主机名，<code>hostIP</code>为主机 IP 地址。</li><li><code>-p</code>：指定连接 MySQL 服务器的端口号，<code>port</code>为连接的端口号。MySQL 的默认端口号是 3306，因此如果不指定该参数，默认使用 3306 连接 MySQL 服务器。</li><li><code>-u</code>：指定连接 MySQL 服务器的用户名，<code>username</code>为用户名。</li><li><code>-p</code>：提示输入密码，即提示<code>Enter password</code>。</li><li><code>DatabaseName</code>：指定连接到 MySQL 服务器后，登录到哪一个数据库中。如果没有指定，默认为<code>mysql</code>数据库。</li><li><code>-e</code>：指定需要执行的 SQL 语句，登录 MySQL 服务器后执行这个 SQL 语句，然后退出 MySQL 服务器。</li></ul><p>下面使用<code>root</code>用户登录到<code>test</code>数据库中：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">C:\\Users\\11645</span><span style="color:#F0F3F6;">&gt;</span><span style="color:#ADDCFF;">mysql</span><span style="color:#91CBFF;"> -h</span><span style="color:#ADDCFF;"> localhost</span><span style="color:#91CBFF;"> -u</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> test</span></span>
<span class="line"><span style="color:#FFB757;">Enter</span><span style="color:#ADDCFF;"> password:</span><span style="color:#91CBFF;"> ****</span></span>
<span class="line"><span style="color:#FFB757;">Welcome</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> monitor.</span><span style="color:#ADDCFF;">  Commands</span><span style="color:#ADDCFF;"> end</span><span style="color:#ADDCFF;"> with</span><span style="color:#F0F3F6;"> ; </span><span style="color:#FFB757;">or</span><span style="color:#FF9492;"> \\g</span><span style="color:#ADDCFF;">.</span></span>
<span class="line"><span style="color:#FFB757;">Your</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> connection</span><span style="color:#ADDCFF;"> id</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 2</span></span>
<span class="line"><span style="color:#FFB757;">Server</span><span style="color:#ADDCFF;"> version:</span><span style="color:#ADDCFF;"> 5.7.29-log</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> Community</span><span style="color:#ADDCFF;"> Server</span><span style="color:#F0F3F6;"> (GPL)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Copyright</span><span style="color:#F0F3F6;"> (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Oracle</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> a</span><span style="color:#ADDCFF;"> registered</span><span style="color:#ADDCFF;"> trademark</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> Oracle</span><span style="color:#ADDCFF;"> Corporation</span><span style="color:#ADDCFF;"> and/or</span><span style="color:#ADDCFF;"> its</span></span>
<span class="line"><span style="color:#FFB757;">affiliates.</span><span style="color:#ADDCFF;"> Other</span><span style="color:#ADDCFF;"> names</span><span style="color:#ADDCFF;"> may</span><span style="color:#ADDCFF;"> be</span><span style="color:#ADDCFF;"> trademarks</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> their</span><span style="color:#ADDCFF;"> respective</span></span>
<span class="line"><span style="color:#FFB757;">owners.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Type</span><span style="color:#ADDCFF;"> &#39;help;&#39;</span><span style="color:#ADDCFF;"> or</span><span style="color:#ADDCFF;"> &#39;\\h&#39;</span><span style="color:#ADDCFF;"> for</span><span style="color:#ADDCFF;"> help.</span><span style="color:#ADDCFF;"> Type</span><span style="color:#ADDCFF;"> &#39;\\c&#39;</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> clear</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> current</span><span style="color:#ADDCFF;"> input</span><span style="color:#ADDCFF;"> statement.</span></span></code></pre></div><p>上述命令中，通过值<code>localhost</code>指定 MySQL 服务器的地址，参数<code>-u</code>指定了登录 MySQL 服务器的用户账户，参数<code>-p</code>表示会出现输入密码提示信息，最后值<code>test</code>指定了登录成功后要使用的数据库。</p><p>由结果可以看到，输入命令后，会出现“Enter password”提示信息，在这条信息之后输入密码，然后按 Enter 键。密码正确后，就成功登录到 MySQL 服务器了。</p><p>下面使用<code>root</code>用户登录到自己计算机的<code>mysql</code>数据库，同时查询<code>student</code>表的表结构：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">C:\\Users\\11645</span><span style="color:#F0F3F6;">&gt;</span><span style="color:#ADDCFF;">mysql</span><span style="color:#91CBFF;"> -h</span><span style="color:#ADDCFF;"> localhost</span><span style="color:#91CBFF;"> -u</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> test</span><span style="color:#91CBFF;"> -e</span><span style="color:#ADDCFF;">&quot;DESC student&quot;</span></span>
<span class="line"><span style="color:#FFB757;">Enter</span><span style="color:#ADDCFF;"> password:</span><span style="color:#91CBFF;"> ****</span></span>
<span class="line"><span style="color:#FFB757;">+-------+-------------+------+-----+---------+-------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> Field</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Type</span><span style="color:#FF9492;">        |</span><span style="color:#FFB757;"> Null</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Key</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Default</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> Extra</span><span style="color:#FF9492;"> |</span></span>
<span class="line"><span style="color:#FFB757;">+-------+-------------+------+-----+---------+-------+</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> id</span><span style="color:#FF9492;">    |</span><span style="color:#FFB757;"> int(4</span><span style="color:#F0F3F6;">)      </span><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> NO</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> PRI</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> NULL</span><span style="color:#FF9492;">    |</span><span style="color:#FF9492;">       |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> name</span><span style="color:#FF9492;">  |</span><span style="color:#FFB757;"> varchar(20</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> YES</span><span style="color:#FF9492;">  |</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> NULL</span><span style="color:#FF9492;">    |</span><span style="color:#FF9492;">       |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> age</span><span style="color:#FF9492;">   |</span><span style="color:#FFB757;"> int(4</span><span style="color:#F0F3F6;">)      </span><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> YES</span><span style="color:#FF9492;">  |</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> NULL</span><span style="color:#FF9492;">    |</span><span style="color:#FF9492;">       |</span></span>
<span class="line"><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> stuno</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> int(11</span><span style="color:#F0F3F6;">)     </span><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> YES</span><span style="color:#FF9492;">  |</span><span style="color:#FF9492;">     |</span><span style="color:#FFB757;"> NULL</span><span style="color:#FF9492;">    |</span><span style="color:#FF9492;">       |</span></span>
<span class="line"><span style="color:#FFB757;">+-------+-------------+------+-----+---------+-------+</span></span></code></pre></div><p>结果显示，执行命令并输入正确密码后，窗口中就会显示出<code>student</code>表的基本结构。</p><p>用户也可以直接在<code>mysql</code>命令的<code>-p</code>后加上登录密码，登录密码与<code>-p</code>之间没有空格。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">C:\\Users\\11645</span><span style="color:#F0F3F6;">&gt;</span><span style="color:#ADDCFF;">mysql</span><span style="color:#91CBFF;"> -h</span><span style="color:#ADDCFF;"> localhost</span><span style="color:#91CBFF;"> -u</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> -proot</span></span>
<span class="line"><span style="color:#FFB757;">mysql:</span><span style="color:#F0F3F6;"> [Warning] Using a password on the command line interface can be insecure.</span></span>
<span class="line"><span style="color:#FFB757;">Welcome</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> monitor.</span><span style="color:#ADDCFF;">  Commands</span><span style="color:#ADDCFF;"> end</span><span style="color:#ADDCFF;"> with</span><span style="color:#F0F3F6;"> ; </span><span style="color:#FFB757;">or</span><span style="color:#FF9492;"> \\g</span><span style="color:#ADDCFF;">.</span></span>
<span class="line"><span style="color:#FFB757;">Your</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> connection</span><span style="color:#ADDCFF;"> id</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 4</span></span>
<span class="line"><span style="color:#FFB757;">Server</span><span style="color:#ADDCFF;"> version:</span><span style="color:#ADDCFF;"> 5.7.29-log</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> Community</span><span style="color:#ADDCFF;"> Server</span><span style="color:#F0F3F6;"> (GPL)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Copyright</span><span style="color:#F0F3F6;"> (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Oracle</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> a</span><span style="color:#ADDCFF;"> registered</span><span style="color:#ADDCFF;"> trademark</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> Oracle</span><span style="color:#ADDCFF;"> Corporation</span><span style="color:#ADDCFF;"> and/or</span><span style="color:#ADDCFF;"> its</span></span>
<span class="line"><span style="color:#FFB757;">affiliates.</span><span style="color:#ADDCFF;"> Other</span><span style="color:#ADDCFF;"> names</span><span style="color:#ADDCFF;"> may</span><span style="color:#ADDCFF;"> be</span><span style="color:#ADDCFF;"> trademarks</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> their</span><span style="color:#ADDCFF;"> respective</span></span>
<span class="line"><span style="color:#FFB757;">owners.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Type</span><span style="color:#ADDCFF;"> &#39;help;&#39;</span><span style="color:#ADDCFF;"> or</span><span style="color:#ADDCFF;"> &#39;\\h&#39;</span><span style="color:#ADDCFF;"> for</span><span style="color:#ADDCFF;"> help.</span><span style="color:#ADDCFF;"> Type</span><span style="color:#ADDCFF;"> &#39;\\c&#39;</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> clear</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> current</span><span style="color:#ADDCFF;"> input</span><span style="color:#ADDCFF;"> statement.</span></span></code></pre></div><p>上述命令执行后，后面不会提示输入密码。因为<code>-p</code>后面有密码，MySQL 会直接使用这个密码。</p><p>退出 MySQL 服务器的方式很简单，只要在命令行输入<code>EXIT</code>或<code>QUIT</code>即可。“\\q”是<code>QUIT</code>的缩写，也可以用来退出 MySQL 服务器。退出后就会显示 Bye。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">QUIT</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">Bye</span></span></code></pre></div><h2 id="root修改普通用户密码" tabindex="-1"><a class="header-anchor" href="#root修改普通用户密码"><span>root修改普通用户密码</span></a></h2><p>在 MySQL 中，<code>root</code>用户拥有很高的权限，不仅可以修改自己的密码，还可以修改其他用户的密码。</p><h3 id="使用set语句修改普通用户的密码" tabindex="-1"><a class="header-anchor" href="#使用set语句修改普通用户的密码"><span>使用SET语句修改普通用户的密码</span></a></h3><p>在 MySQL 中，只有<code>root</code>用户可以通过更新 MySQL 数据库来更改密码。使用<code>root</code>用户登录到 MySQL 服务器后，可以使用<code>SET</code>语句来修改普通用户密码。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">SET</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#FF9492;"> FOR</span><span style="color:#ADDCFF;"> &#39;username&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;hostname&#39;</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&#39;newpwd&#39;</span><span style="color:#F0F3F6;">);</span></span></code></pre></div><p>其中，<code>username</code>参数是普通用户的用户名，<code>hostname</code>参数是普通用户的主机名，<code>newpwd</code>是要更改的新密码。</p><blockquote><p>注意：新密码必须使用<code>PASSWORD()</code>函数来加密，如果不使用<code>PASSWORD()</code>加密，也会执行成功，但是用户会无法登录。</p></blockquote><p>如果是普通用户修改密码，可省略<code>FOR</code>子句来更改自己的密码。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">SET</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&#39;newpwd&#39;</span><span style="color:#F0F3F6;">);</span></span></code></pre></div><p>首先创建一个没有密码的<code>testuser</code>用户：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> CREATE</span><span style="color:#F0F3F6;"> USER </span><span style="color:#ADDCFF;">&#39;testuser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">14</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p><code>root</code>用户登录 MySQL 服务器后，再使用<code>SET</code>语句将<code>testuser</code>用户的密码修改为<code>newpwd</code>：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> SET</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#FF9492;"> FOR</span><span style="color:#ADDCFF;"> &#39;testuser&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;localhost&#39;</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;newpwd&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected, </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;"> warning (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">01</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>下面验证<code>testuser</code>用户密码是否修改成功。退出 MySQL 服务器，使用<code>testuser</code>用户登录，输入密码<code>newpwd</code>：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">C:\\Users\\leovo</span><span style="color:#F0F3F6;">&gt;</span><span style="color:#ADDCFF;">mysql</span><span style="color:#91CBFF;"> -utestuser</span><span style="color:#91CBFF;"> -p</span></span>
<span class="line"><span style="color:#FFB757;">Enter</span><span style="color:#ADDCFF;"> password:</span><span style="color:#91CBFF;"> ******</span></span>
<span class="line"><span style="color:#FFB757;">Welcome</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> monitor.</span><span style="color:#ADDCFF;">  Commands</span><span style="color:#ADDCFF;"> end</span><span style="color:#ADDCFF;"> with</span><span style="color:#F0F3F6;"> ; </span><span style="color:#FFB757;">or</span><span style="color:#FF9492;"> \\g</span><span style="color:#ADDCFF;">.</span></span>
<span class="line"><span style="color:#FFB757;">Your</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> connection</span><span style="color:#ADDCFF;"> id</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 15</span></span>
<span class="line"><span style="color:#FFB757;">Server</span><span style="color:#ADDCFF;"> version:</span><span style="color:#ADDCFF;"> 5.7.29-log</span><span style="color:#ADDCFF;"> MySQL</span><span style="color:#ADDCFF;"> Community</span><span style="color:#ADDCFF;"> Server</span><span style="color:#F0F3F6;"> (GPL)</span></span>
<span class="line"><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">Copyright</span><span style="color:#F0F3F6;"> (c) 2000, 2020, Oracle and/or its affiliates. All rights reserved.</span></span>
<span class="line"><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">Oracle</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> a</span><span style="color:#ADDCFF;"> registered</span><span style="color:#ADDCFF;"> trademark</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> Oracle</span><span style="color:#ADDCFF;"> Corporation</span><span style="color:#ADDCFF;"> and/or</span><span style="color:#ADDCFF;"> its</span></span>
<span class="line"><span style="color:#FFB757;">affiliates.</span><span style="color:#ADDCFF;"> Other</span><span style="color:#ADDCFF;"> names</span><span style="color:#ADDCFF;"> may</span><span style="color:#ADDCFF;"> be</span><span style="color:#ADDCFF;"> trademarks</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> their</span><span style="color:#ADDCFF;"> respective</span></span>
<span class="line"><span style="color:#FFB757;">owners.</span></span>
<span class="line"><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">Type</span><span style="color:#ADDCFF;"> &#39;help;&#39;</span><span style="color:#ADDCFF;"> or</span><span style="color:#ADDCFF;"> &#39;\\h&#39;</span><span style="color:#ADDCFF;"> for</span><span style="color:#ADDCFF;"> help.</span><span style="color:#ADDCFF;"> Type</span><span style="color:#ADDCFF;"> &#39;\\c&#39;</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> clear</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> current</span><span style="color:#ADDCFF;"> input</span><span style="color:#ADDCFF;"> statement.</span></span></code></pre></div><p>由运行结果可以看出，<code>testuser</code>用户登录成功，修改密码成功。</p><p>使用<code>testuser</code>用户登录 MySQL 服务器，再使用<code>SET</code>语句将密码更改为<code>newpwd1</code>：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>mysql&gt; SET PASSWORD = PASSWORD(&#39;newpwd1&#39;);</span></span>
<span class="line"><span>Query OK, 0 rows affected, 1 warning (0.00 sec)</span></span></code></pre></div><p>由运行结果可以看出，修改密码成功。</p><h3 id="使用update语句修改普通用户的密码" tabindex="-1"><a class="header-anchor" href="#使用update语句修改普通用户的密码"><span>使用UPDATE语句修改普通用户的密码</span></a></h3><p>使用<code>root</code>用户登录 MySQL 服务器后，可以使用<code>UPDATE</code>语句修改 MySQL 数据库的<code>user</code>表的<code>authentication_string</code>字段，从而修改普通用户的密码。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">UPDATE</span><span style="color:#91CBFF;"> MySQL</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#FF9492;"> SET</span><span style="color:#F0F3F6;"> authentication_string </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;newpwd&quot;</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">WHERE</span><span style="color:#F0F3F6;"> User </span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;"> &quot;username&quot;</span><span style="color:#FF9492;"> AND</span><span style="color:#F0F3F6;"> Host </span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;"> &quot;hostname&quot;</span><span style="color:#F0F3F6;">;</span></span></code></pre></div><p>其中，<code>username</code>参数是普通用户的用户名，<code>hostname</code>参数是普通用户的主机名，<code>newpwd</code>是要更改的新密码。</p><blockquote><p>注意，执行<code>UPDATE</code>语句后，需要执行<code>FLUSH PRIVILEGES</code>语句重新加载用户权限。</p></blockquote><p>使用<code>root</code>用户登录 MySQL 服务器，再使用<code>UPDATE</code>语句将<code>testuser</code>用户的密码修改为<code>newpwd2</code>：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">UPDATE</span><span style="color:#ADDCFF;"> MySQL.user</span><span style="color:#ADDCFF;"> SET</span><span style="color:#ADDCFF;"> authentication_string</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> PASSWORD</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&quot;newpwd2&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">WHERE</span><span style="color:#ADDCFF;"> User</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> &quot;testuser&quot;</span><span style="color:#ADDCFF;"> AND</span><span style="color:#ADDCFF;"> Host</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> &quot;localhost&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> row</span><span style="color:#ADDCFF;"> affected,</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> warning</span><span style="color:#F0F3F6;"> (0.07 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FFB757;">Rows</span><span style="color:#ADDCFF;"> matched:</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;">  Changed:</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;">  Warnings:</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">FLUSH</span><span style="color:#ADDCFF;"> PRIVILEGES</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> affected</span><span style="color:#F0F3F6;"> (0.03 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>由运行结果可以看出，密码修改成功。<code>testuser</code>的密码被修改成了<code>newpwd2</code>。使用<code>FLUSH PRIVILEGES</code>重新加载权限后，就可以使用新的密码登录<code>testuser</code>用户了。</p><h3 id="使用-grant-语句修改普通用户密码" tabindex="-1"><a class="header-anchor" href="#使用-grant-语句修改普通用户密码"><span>使用 GRANT 语句修改普通用户密码</span></a></h3><p>除了前面介绍的方法，还可以在全局级别使用<code>GRANT USAGE</code>语句指定某个账户的密码而不影响账户当前的权限。需要注意的是，使用<code>GRANT</code>语句修改密码，必须拥有<code>GRANT</code>权限。一般情况下最好使用该方法来指定或修改密码。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">GRANT</span><span style="color:#F0F3F6;"> USAGE </span><span style="color:#FF9492;">ON</span><span style="color:#FF9492;"> *</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#FF9492;"> TO</span><span style="color:#ADDCFF;"> &#39;username&#39;</span><span style="color:#F0F3F6;">@</span><span style="color:#ADDCFF;">&#39;hostname&#39;</span><span style="color:#F0F3F6;"> IDENTIFIED </span><span style="color:#FF9492;">BY</span><span style="color:#ADDCFF;"> &#39;newpwd&#39;</span><span style="color:#F0F3F6;">;</span></span></code></pre></div><p>其中，<code>username</code>参数是普通用户的用户名，<code>hostname</code>参数是普通用户的主机名，<code>newpwd</code>是要更改的新密码。</p><p>使用<code>root</code>用户登录 MySQL 服务器，再使用<code>GRANT</code>语句将<code>testuser</code>用户的密码修改为<code>newpwd3</code>：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">mysql</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">GRANT</span><span style="color:#ADDCFF;"> USAGE</span><span style="color:#ADDCFF;"> ON</span><span style="color:#91CBFF;"> *</span><span style="color:#ADDCFF;">.</span><span style="color:#91CBFF;">*</span><span style="color:#ADDCFF;"> TO</span><span style="color:#ADDCFF;"> &#39;testuser&#39;@&#39;localhost&#39;</span><span style="color:#ADDCFF;"> IDENTIFIED</span><span style="color:#ADDCFF;"> BY</span><span style="color:#ADDCFF;"> &#39;newpwd3&#39;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> affected,</span><span style="color:#91CBFF;"> 1</span><span style="color:#ADDCFF;"> warning</span><span style="color:#F0F3F6;"> (0.05 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><h2 id="修改root密码" tabindex="-1"><a class="header-anchor" href="#修改root密码"><span>修改root密码</span></a></h2><p>在 MySQL 中，<code>root</code>用户拥有很高的权限，因此必须保证<code>root</code>用户密码的安全。修改<code>root</code>用户密码的方式有很多种。</p><h3 id="使用mysqladmin命令在命令行指定新密码" tabindex="-1"><a class="header-anchor" href="#使用mysqladmin命令在命令行指定新密码"><span>使用mysqladmin命令在命令行指定新密码</span></a></h3><p><code>root</code>用户可以使用<code>mysqladmin</code>命令来修改密码：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysqladmin </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">u username </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">h hostname </span><span style="color:#FF9492;">-</span><span style="color:#F0F3F6;">p </span><span style="color:#FF9492;">password</span><span style="color:#ADDCFF;"> &quot;newpwd&quot;</span></span></code></pre></div><p>参数说明：</p><ul><li><code>usermame</code>指需要修改密码的用户名称，在这里指定为<code> root</code>用户；</li><li><code>hostname</code>指需要修改密码的用户主机名，该参数可以不写，默认是<code>localhost</code>；</li><li><code>password</code>为关键字，而不是指旧密码；</li><li><code>newpwd</code>为新设置的密码，必须用双引号括起来。如果使用单引号会引发错误，可能会造成修改后的密码不是你想要的。</li></ul><p>执行完上面的语句，<code>root</code>用户的密码将被修改为<code>newpwd</code>。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">C:\\Users\\leovo</span><span style="color:#F0F3F6;">&gt;</span><span style="color:#ADDCFF;">mysqladmin</span><span style="color:#91CBFF;"> -u</span><span style="color:#ADDCFF;"> root</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> password</span><span style="color:#ADDCFF;"> &quot;rootpwd&quot;</span></span>
<span class="line"><span style="color:#FFB757;">Enter</span><span style="color:#ADDCFF;"> password:</span><span style="color:#91CBFF;"> ****</span></span>
<span class="line"><span style="color:#FFB757;">mysqladmin:</span><span style="color:#F0F3F6;"> [Warning] Using a password on the command line interface can be insecure.</span></span>
<span class="line"><span style="color:#FFB757;">Warning:</span><span style="color:#ADDCFF;"> Since</span><span style="color:#ADDCFF;"> password</span><span style="color:#ADDCFF;"> will</span><span style="color:#ADDCFF;"> be</span><span style="color:#ADDCFF;"> sent</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> server</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> plain</span><span style="color:#ADDCFF;"> text,</span><span style="color:#ADDCFF;"> use</span><span style="color:#ADDCFF;"> ssl</span><span style="color:#ADDCFF;"> connection</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> ensure</span><span style="color:#ADDCFF;"> password</span><span style="color:#ADDCFF;"> safety.</span></span></code></pre></div><p>运行结果中，输入密码后会提示在命令行界面上使用密码可能不安全的警告信息，因为在命令行输入密码时，MySQL 服务器就会提示这些安全警告信息。</p><h3 id="修改mysql数据库的user表" tabindex="-1"><a class="header-anchor" href="#修改mysql数据库的user表"><span>修改MySQL数据库的user表</span></a></h3><p>因为所有账户信息都保存在<code>user</code>表中，因此可以直接通过修改<code>user</code>表来改变<code>root</code>用户的密码。</p><p><code>root</code>用户登录到 MySQL 服务器后，可以使用<code>UPDATE</code>语句修改 MySQL 数据库的<code>user</code>表的<code>authentication_string</code>字段，从而修改用户的密码。</p><p>使用<code>UPDATA</code>语句修改<code>root</code>用户密码：</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">UPDATE</span><span style="color:#91CBFF;"> mysql</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#FF9492;"> set</span><span style="color:#F0F3F6;"> authentication_string </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&quot;rootpwd) WHERE User = &quot;</span><span style="color:#FF9492;">root</span><span style="color:#ADDCFF;">&quot; and Host=&quot;</span><span style="color:#F0F3F6;">localhost</span><span style="color:#ADDCFF;">&quot;;</span></span></code></pre></div><p>新密码必须使用<code>PASSWORD()</code>函数来加密。执行<code>UPDATE</code>语句后，需要执行<code>FLUSH PRIVILEGES</code>语句重新加载用户权限。</p><p>下面使用<code>UPDATE</code>语句将<code>root</code>用户的密码修改为<code>rootpwd2</code>。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#FF9492;"> UPDATE</span><span style="color:#91CBFF;"> mysql</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">user</span><span style="color:#FF9492;"> set</span><span style="color:#F0F3F6;"> authentication_string </span><span style="color:#FF9492;">=</span><span style="color:#FF9492;"> password</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&quot;rootpwd2&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    -&gt;</span><span style="color:#FF9492;"> WHERE</span><span style="color:#F0F3F6;"> User </span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;"> &quot;root&quot;</span><span style="color:#FF9492;"> and</span><span style="color:#F0F3F6;"> Host </span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;"> &quot;localhost&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">1</span><span style="color:#FF9492;"> row</span><span style="color:#F0F3F6;"> affected, </span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;"> warning (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">00</span><span style="color:#F0F3F6;"> sec)</span></span>
<span class="line"><span style="color:#FF9492;">Rows</span><span style="color:#FF9492;"> matched</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">  Changed: </span><span style="color:#91CBFF;">1</span><span style="color:#F0F3F6;">  Warnings:</span><span style="color:#91CBFF;">0</span></span>
<span class="line"><span style="color:#F0F3F6;">mysql</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> FLUSH PRIVILEGES;</span></span>
<span class="line"><span style="color:#F0F3F6;">Query OK, </span><span style="color:#91CBFF;">0</span><span style="color:#FF9492;"> rows</span><span style="color:#F0F3F6;"> affected (</span><span style="color:#91CBFF;">0</span><span style="color:#F0F3F6;">.</span><span style="color:#91CBFF;">06</span><span style="color:#F0F3F6;"> sec)</span></span></code></pre></div><p>退出后就必须使用新密码来登录了。</p><h3 id="使用set语句修改root用户的密码" tabindex="-1"><a class="header-anchor" href="#使用set语句修改root用户的密码"><span>使用SET语句修改root用户的密码</span></a></h3><p><code>SET PASSWORD</code>语句可以用来重新设置其他用户的登录密码或者自己使用的账户的密码。</p><div class="language-sql" data-highlighter="shiki" data-ext="sql" data-title="sql" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">SET</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> PASSWORD</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&quot;rootpwd&quot;</span><span style="color:#F0F3F6;">);</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">MySQL</span><span style="color:#F0F3F6;">&gt; </span><span style="color:#ADDCFF;">SET</span><span style="color:#ADDCFF;"> PASSWORD</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> password</span><span style="color:#F0F3F6;"> (</span><span style="color:#ADDCFF;">&quot;rootpwd3&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#FFB757;">Query</span><span style="color:#ADDCFF;"> OK,</span><span style="color:#91CBFF;"> 0</span><span style="color:#ADDCFF;"> rows</span><span style="color:#ADDCFF;"> affected</span><span style="color:#F0F3F6;"> (0.00 </span><span style="color:#ADDCFF;">sec</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><h2 id="忘记root密码后如何重置" tabindex="-1"><a class="header-anchor" href="#忘记root密码后如何重置"><span>忘记root密码后如何重置</span></a></h2><p>在忘记 MySQL 密码的情况下，可以通过<code>--skip-grant-tables</code>关闭服务器的认证，然后重置<code>root</code>的密码，具体操作步骤如下。</p><ol><li>关闭正在运行的 MySQL 服务。打开 cmd 进入 MySQL 的<code>bin</code>目录。</li><li>输入<code>mysqld --console --skip-grant-tables --shared-memory</code>命令。<code>–skip-grant-tables</code>会让 MySQL 服务器跳过验证步骤，允许所有用户以匿名的方式，无需做密码验证就可以直接登录 MySQL 服务器，并且拥有所有的操作权限。</li><li>上一个 DOS 窗口不要关闭，打开一个新的 DOS 窗口，此时仅输入 mysql 命令，不需要用户名和密码，即可连接到 MySQL。</li><li>输入命令<code>update mysql.user set authentication_string=password(&#39;root&#39;) where user=&#39;root&#39; and Host =&#39;localhost&#39;;</code>设置新密码。<br> 注意：MySQL 5.7 版本中的<code>user</code>表里已经去掉了<code>password</code>字段，改为了<code>authentication_string</code>。</li><li>刷新权限（必须步骤），输入<code>flush privileges;</code>命令。</li><li>因为之前使用<code>--skip-grant-tables</code>启动，所以需要重启 MySQL 服务器去掉<code>--skip-grant-tables</code>。输入无误后输入<code>quit;</code>命令退出 MySQL 服务。</li><li>重启 MySQL 服务，使用用户名<code>root</code>和刚才设置的新密码<code>root</code>登录就可以了。</li></ol><h2 id="修改密码的3种方式" tabindex="-1"><a class="header-anchor" href="#修改密码的3种方式"><span>修改密码的3种方式</span></a></h2><p>3 种修改 MySQL 数据库密码的方法。</p><h3 id="_1-使用-set-password-命令" tabindex="-1"><a class="header-anchor" href="#_1-使用-set-password-命令"><span>1. 使用 SET PASSWORD 命令</span></a></h3><ol><li>输入命令<code>mysql -u root -p</code>指定<code>root</code>用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的<code>bin</code>目录下登录操作。</li><li>使用<code>SET PASSWORD</code>修改密码命令格式为<code>set password for username @localhost = password(newpwd);</code><br> ，其中<code>username</code>为要修改密码的用户名，<code>newpwd</code>为要修改的新密码。</li><li>输入<code>quit;</code>命令退出 MySQL 重新登录，输入新密码“root”登录就可以了；</li></ol><h3 id="_2-使用mysqladmin修改密码" tabindex="-1"><a class="header-anchor" href="#_2-使用mysqladmin修改密码"><span>2. 使用mysqladmin修改密码</span></a></h3><p>使用 mysqladmin 命令修改 MySQL 的<code>root</code>用户密码格式为<code>mysqladmin -u</code>用户名 -p旧密码<code>password</code>新密码。</p><p>注意：下图修改密码的命令中<code>-uroot</code>和<code>-proot</code>是整体，不要写成<code>-u root -p root</code>，<code>-u</code>和<code>root</code>间可以加空格，但是会有警告出现，所以就不要加空格了。</p><h3 id="_3-update直接编辑user表" tabindex="-1"><a class="header-anchor" href="#_3-update直接编辑user表"><span>3. UPDATE直接编辑user表</span></a></h3><ol><li>输入命令<code>mysql -u root -p</code>指定<code>root</code>用户登录 MySQL，输入后按回车键输入密码。如果没有配置环境变量，请在 MySQL 的<code>bin</code>目录下登录操作。</li><li>输入<code>use mysql;</code>命令连接权限数据库。</li><li>输入命令<code>update mysql.user set authentication_string=password(&#39;新密码&#39;) where user=&#39;用户名&#39; and Host =&#39;localhost&#39;;</code>设置新密码。</li><li>输入<code>flush privileges;</code>命令刷新权限。</li><li>输入<code>quit;</code>命令退出 MySQL 重新登录，此时密码已经修改为刚才输入的新密码了。</li></ol><h2 id="权限控制实现原理" tabindex="-1"><a class="header-anchor" href="#权限控制实现原理"><span>权限控制实现原理</span></a></h2><p>MySQL 权限表在数据库启动时载入内存，用户通过身份认证后，系统会在内存中进行相应权限的存取。当 MySQL 允许一个用户执行各种操作时，它将首先核实该用户向 MySQL 服务器发送的连接请求，然后确认用户的操作请求是否被允许。</p><p>当用户进行连接时，MySQL 实现权限控制主要有以下两个阶段：</p><h3 id="_1-连接核实阶段" tabindex="-1"><a class="header-anchor" href="#_1-连接核实阶段"><span>1. 连接核实阶段</span></a></h3><p>登录 MySQL 服务器时，客户端连接请求中会提供用户名称、主机地址和密码，MySQL 服务器会使用<code>user</code>表中的<code>Host、User</code>和<code>authentication_string</code>字段执行身份检查。</p><p>只有客户端请求的主机名和用户名在<code>user</code>表中有匹配的记录，并且密码正确时，MySQL 服务器才会通过身份认证，接受连接，否则拒绝连接。</p><p>MySQL 通过 IP 地址和用户名联合进行身份认证。例如 MySQL 安装后默认创建的用户<code>root@localhost</code>，表示用户<code>root</code>只能从本地（<code>localhost</code>）进行连接时才能通过认证。此用户从其它任何主机对数据库进行连接时都将被拒绝。也就是说，用户名相同，IP 地址不同，MySQL 则将其视为不同的用户。</p><p>服务器接受连接后进入请求核实阶段等待用户请求。如果连接核实没有通过，服务器则完全拒绝访问。</p><h3 id="_2-请求核实阶段" tabindex="-1"><a class="header-anchor" href="#_2-请求核实阶段"><span>2. 请求核实阶段</span></a></h3><p>建立连接后，服务器进入请求核实阶段，对在此连接上的每个请求，服务器都会检查用户是否有足够的权限来执行它。这正是授权表中的权限列发挥作用的地方。</p><p>权限按照以下权限表的顺序得到数据库权限：<code>user→db→tables_priv→columns_priv→procs_priv</code>。在这几个权限表中，权限范围依次递减，全局权限覆盖局部权限。</p><p>请求核实的过程如下所示：</p><ol><li>用户向 MySQL 发出操作请求。</li><li>MySQL 首先检查<code>user</code>表，匹配<code>User、Host</code>字段值，查看请求的全局权限在 user 表中是否被授权。授权则允许操作执行，如果指定的权限在 user 表中没有被授权。MySQL 将检查<code>db</code>表。</li><li><code>db</code>表是下一安全层级，其中的权限限定于数据库层级，在该层级的<code>SELECT</code>权限允许用户查看指定数据库的所有表中的数据。<br> MySQL 检查<code>db</code>权限表中的权限信息，匹配<code>User、Host</code>字段值，查看请求的数据库级别的权限在<code>db</code>表中是否被授权。授权则允许操作执行，否则 MySQL 继续向下查找。</li><li>MySQL 检查<code>tables_priv</code>权限表中的权限信息，匹配<code>User、Host</code>字段值，查看请求的数据表级别的权限在<code>tables_priv</code>表中是否被授权。授权则允许操作执行，否则 MySQL 继续向下查找。</li><li>MySQL 检查<code>columns_priv</code>权限表中的权限信息，匹配<code>User、Host</code>字段值，查看请求的列级别的权限在<code>columns_priv</code>表中是否被授权。授权则允许操作执行，否则 MySQL 继续向下查找。</li><li>如果所有权限表都检查完毕，还是没有找到允许的权限操作，那么 MySQL 将返回错误信息，即用户请求的操作不能执行，操作失败。</li></ol><p>提示：上面提到 MySQL 通过向下层级的顺序检查权限表，但并不意味着所有的权限都要执行该过程。例如，一个用户登录到 MySQL 服务器之后只执行对 MySQL 的管理操作，此时只涉及管理权限，因此 MySQL 只检查 user 表。</p>`,259)]))}const d=e(n,[["render",o],["__file","MySQL用户管理.html.vue"]]),F=JSON.parse('{"path":"/sql/mysql/MySQL%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86.html","title":"MySQL用户管理","lang":"zh-CN","frontmatter":{"title":"MySQL用户管理","date":"2024-06-20T00:00:00.000Z","tags":"MySQL","categories":"SQL","order":16,"description":"MySQL 是一个多用户数据库，具有功能强大的访问控制系统，可以为不同用户指定不同权限。 user权限表 MySQL 在安装时会自动创建一个名为mysql的数据库，mysql数据库中存储的都是用户权限表。用户登录以后，MySQL 会根据这些权限表的内容为每个用户赋予相应的权限。 user表是 MySQL 中最重要的一个权限表，用来记录允许连接到服务器的...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/sql/mysql/MySQL%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86.html"}],["meta",{"property":"og:title","content":"MySQL用户管理"}],["meta",{"property":"og:description","content":"MySQL 是一个多用户数据库，具有功能强大的访问控制系统，可以为不同用户指定不同权限。 user权限表 MySQL 在安装时会自动创建一个名为mysql的数据库，mysql数据库中存储的都是用户权限表。用户登录以后，MySQL 会根据这些权限表的内容为每个用户赋予相应的权限。 user表是 MySQL 中最重要的一个权限表，用来记录允许连接到服务器的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-01T01:55:29.000Z"}],["meta",{"property":"article:published_time","content":"2024-06-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-01T01:55:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MySQL用户管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-11-01T01:55:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"user权限表","slug":"user权限表","link":"#user权限表","children":[{"level":3,"title":"用户列","slug":"用户列","link":"#用户列","children":[]},{"level":3,"title":"权限列","slug":"权限列","link":"#权限列","children":[]},{"level":3,"title":"安全列","slug":"安全列","link":"#安全列","children":[]},{"level":3,"title":"资源控制列","slug":"资源控制列","link":"#资源控制列","children":[]}]},{"level":2,"title":"其它权限表","slug":"其它权限表","link":"#其它权限表","children":[{"level":3,"title":"db表","slug":"db表","link":"#db表","children":[]},{"level":3,"title":"tables_priv表和columns_priv表","slug":"tables-priv表和columns-priv表","link":"#tables-priv表和columns-priv表","children":[]},{"level":3,"title":"procs_priv表","slug":"procs-priv表","link":"#procs-priv表","children":[]}]},{"level":2,"title":"创建用户","slug":"创建用户","link":"#创建用户","children":[{"level":3,"title":"使用CREATE USER语句创建用户","slug":"使用create-user语句创建用户","link":"#使用create-user语句创建用户","children":[]},{"level":3,"title":"使用 INSERT 语句新建用户","slug":"使用-insert-语句新建用户","link":"#使用-insert-语句新建用户","children":[]},{"level":3,"title":"使用GRANT语句新建用户","slug":"使用grant语句新建用户","link":"#使用grant语句新建用户","children":[]}]},{"level":2,"title":"修改用户","slug":"修改用户","link":"#修改用户","children":[]},{"level":2,"title":"删除用户","slug":"删除用户","link":"#删除用户","children":[{"level":3,"title":"1. 使用DROP USER语句删除普通用户","slug":"_1-使用drop-user语句删除普通用户","link":"#_1-使用drop-user语句删除普通用户","children":[]},{"level":3,"title":"2. 使用DELETE语句删除普通用户","slug":"_2-使用delete语句删除普通用户","link":"#_2-使用delete语句删除普通用户","children":[]}]},{"level":2,"title":"查看用户权限","slug":"查看用户权限","link":"#查看用户权限","children":[]},{"level":2,"title":"GRANT：用户授权","slug":"grant-用户授权","link":"#grant-用户授权","children":[{"level":3,"title":"权限类型说明","slug":"权限类型说明","link":"#权限类型说明","children":[]}]},{"level":2,"title":"REVOKE：删除用户权限","slug":"revoke-删除用户权限","link":"#revoke-删除用户权限","children":[{"level":3,"title":"第一种","slug":"第一种","link":"#第一种","children":[]},{"level":3,"title":"第二种","slug":"第二种","link":"#第二种","children":[]}]},{"level":2,"title":"登录和退出服务器","slug":"登录和退出服务器","link":"#登录和退出服务器","children":[]},{"level":2,"title":"root修改普通用户密码","slug":"root修改普通用户密码","link":"#root修改普通用户密码","children":[{"level":3,"title":"使用SET语句修改普通用户的密码","slug":"使用set语句修改普通用户的密码","link":"#使用set语句修改普通用户的密码","children":[]},{"level":3,"title":"使用UPDATE语句修改普通用户的密码","slug":"使用update语句修改普通用户的密码","link":"#使用update语句修改普通用户的密码","children":[]},{"level":3,"title":"使用 GRANT 语句修改普通用户密码","slug":"使用-grant-语句修改普通用户密码","link":"#使用-grant-语句修改普通用户密码","children":[]}]},{"level":2,"title":"修改root密码","slug":"修改root密码","link":"#修改root密码","children":[{"level":3,"title":"使用mysqladmin命令在命令行指定新密码","slug":"使用mysqladmin命令在命令行指定新密码","link":"#使用mysqladmin命令在命令行指定新密码","children":[]},{"level":3,"title":"修改MySQL数据库的user表","slug":"修改mysql数据库的user表","link":"#修改mysql数据库的user表","children":[]},{"level":3,"title":"使用SET语句修改root用户的密码","slug":"使用set语句修改root用户的密码","link":"#使用set语句修改root用户的密码","children":[]}]},{"level":2,"title":"忘记root密码后如何重置","slug":"忘记root密码后如何重置","link":"#忘记root密码后如何重置","children":[]},{"level":2,"title":"修改密码的3种方式","slug":"修改密码的3种方式","link":"#修改密码的3种方式","children":[{"level":3,"title":"1. 使用 SET PASSWORD 命令","slug":"_1-使用-set-password-命令","link":"#_1-使用-set-password-命令","children":[]},{"level":3,"title":"2. 使用mysqladmin修改密码","slug":"_2-使用mysqladmin修改密码","link":"#_2-使用mysqladmin修改密码","children":[]},{"level":3,"title":"3. UPDATE直接编辑user表","slug":"_3-update直接编辑user表","link":"#_3-update直接编辑user表","children":[]}]},{"level":2,"title":"权限控制实现原理","slug":"权限控制实现原理","link":"#权限控制实现原理","children":[{"level":3,"title":"1. 连接核实阶段","slug":"_1-连接核实阶段","link":"#_1-连接核实阶段","children":[]},{"level":3,"title":"2. 请求核实阶段","slug":"_2-请求核实阶段","link":"#_2-请求核实阶段","children":[]}]}],"git":{"createdTime":1730426129000,"updatedTime":1730426129000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":35.93,"words":10778},"filePathRelative":"sql/mysql/MySQL用户管理.md","localizedDate":"2024年6月20日","autoDesc":true}');export{d as comp,F as data};
