import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,o as p}from"./app-BAoNGAQX.js";const o="/wsq-blog/assets/springboot-file-excel-easyexcel-2-DcX686tV.png",e="/wsq-blog/assets/springboot-file-excel-easyexcel-4-DG0fJ0dG.png",F={};function t(c,s){return p(),n("div",null,s[0]||(s[0]=[l(`<p>EasyExcel 是一个基于 Java 的、快速、简洁、解决大文件内存溢出的 Excel 处理工具。它能让你在不用考虑性能、内存的等因素的情况下，快速完成 Excel 的读、写等功能。它是基于 POI 来封装实现的，主要解决其易用性，封装性和性能问题。</p><h2 id="实现案例" tabindex="-1"><a class="header-anchor" href="#实现案例"><span>实现案例</span></a></h2><h3 id="pom-依赖" tabindex="-1"><a class="header-anchor" href="#pom-依赖"><span>POM 依赖</span></a></h3><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;com.alibaba&lt;/</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;easyexcel&lt;/</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">version</span><span style="color:#F0F3F6;">&gt;3.1.1&lt;/</span><span style="color:#72F088;">version</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><h3 id="导出excel" tabindex="-1"><a class="header-anchor" href="#导出excel"><span>导出Excel</span></a></h3><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;">// User类</span></span>
<span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> tech.springboot.file.excel.easyexcel.entity;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> com.alibaba.excel.annotation.ExcelProperty;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> lombok.AllArgsConstructor;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> lombok.Builder;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> lombok.Data;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> lombok.NoArgsConstructor;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Builder</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Data</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">AllArgsConstructor</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">NoArgsConstructor</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> User</span><span style="color:#FF9492;"> implements</span><span style="color:#91CBFF;"> BaseEntity</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">ExcelProperty</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;ID&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> Long</span><span style="color:#F0F3F6;"> id;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">ExcelProperty</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Name&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> String</span><span style="color:#F0F3F6;"> userName;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">ExcelProperty</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Email&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> String</span><span style="color:#F0F3F6;"> email;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">ExcelProperty</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Phone&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> long</span><span style="color:#F0F3F6;"> phoneNumber;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">ExcelProperty</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Description&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#F0F3F6;"> String</span><span style="color:#F0F3F6;"> description;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p><code>UserController</code>中导出的方法</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">ApiOperation</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Download Excel&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">GetMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/excel/download&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> download</span><span style="color:#F0F3F6;">(HttpServletResponse response) {</span></span>
<span class="line"><span style="color:#FF9492;">    try</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">        response.</span><span style="color:#DBB7FF;">reset</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        response.</span><span style="color:#DBB7FF;">setContentType</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;application/vnd.ms-excel&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        response.</span><span style="color:#DBB7FF;">setHeader</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Content-disposition&quot;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;attachment;filename=user_excel_&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> System.</span><span style="color:#DBB7FF;">currentTimeMillis</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;.xlsx&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        userService.</span><span style="color:#DBB7FF;">downloadExcel</span><span style="color:#F0F3F6;">(response.</span><span style="color:#DBB7FF;">getOutputStream</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">catch</span><span style="color:#F0F3F6;"> (Exception </span><span style="color:#FFB757;">e</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        e.</span><span style="color:#DBB7FF;">printStackTrace</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p><code>UserServiceImple</code>中导出 Excel 的主方法</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> downloadExcel</span><span style="color:#F0F3F6;">(ServletOutputStream outputStream) {</span></span>
<span class="line"><span style="color:#F0F3F6;">    EasyExcelFactory.</span><span style="color:#DBB7FF;">write</span><span style="color:#F0F3F6;">(outputStream, User.class).</span><span style="color:#DBB7FF;">sheet</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;User&quot;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">doWrite</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">this</span><span style="color:#FF9492;">::</span><span style="color:#F0F3F6;">getUserList);</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"><span style="color:#FF9492;">private</span><span style="color:#F0F3F6;"> List</span><span style="color:#FF9492;">&lt;</span><span style="color:#F0F3F6;">User</span><span style="color:#FF9492;">&gt;</span><span style="color:#DBB7FF;"> getUserList</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#F0F3F6;"> Collections.</span><span style="color:#DBB7FF;">singletonList</span><span style="color:#F0F3F6;">(User.</span><span style="color:#DBB7FF;">builder</span><span style="color:#F0F3F6;">()</span></span>
<span class="line"><span style="color:#F0F3F6;">            .</span><span style="color:#DBB7FF;">id</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">1L</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">userName</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;pdai&quot;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">email</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;pdai@pdai.tech&quot;</span><span style="color:#F0F3F6;">).</span><span style="color:#DBB7FF;">phoneNumber</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">121231231231L</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">            .</span><span style="color:#DBB7FF;">description</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;hello world&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">            .</span><span style="color:#DBB7FF;">build</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h3 id="导入excel" tabindex="-1"><a class="header-anchor" href="#导入excel"><span>导入Excel</span></a></h3><p>我们将上面导出的 excel 文件导入。</p><p><code>UserController</code>中导入的方法</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">ApiOperation</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Upload Excel&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">PostMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/excel/upload&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#F0F3F6;"> ResponseResult</span><span style="color:#FF9492;">&lt;</span><span style="color:#F0F3F6;">String</span><span style="color:#FF9492;">&gt;</span><span style="color:#DBB7FF;"> upload</span><span style="color:#F0F3F6;">(@</span><span style="color:#FF9492;">RequestParam</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">value</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;file&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">required</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> true</span><span style="color:#F0F3F6;">) MultipartFile file) {</span></span>
<span class="line"><span style="color:#FF9492;">    try</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">        userService.</span><span style="color:#DBB7FF;">upload</span><span style="color:#F0F3F6;">(file.</span><span style="color:#DBB7FF;">getInputStream</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">catch</span><span style="color:#F0F3F6;"> (Exception </span><span style="color:#FFB757;">e</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        e.</span><span style="color:#DBB7FF;">printStackTrace</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#FF9492;">        return</span><span style="color:#F0F3F6;"> ResponseResult.</span><span style="color:#DBB7FF;">fail</span><span style="color:#F0F3F6;">(e.</span><span style="color:#DBB7FF;">getMessage</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    return</span><span style="color:#F0F3F6;"> ResponseResult.</span><span style="color:#DBB7FF;">success</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p><code>UserServiceImpl</code>中导入 Excel 的主方法</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> upload</span><span style="color:#F0F3F6;">(InputStream inputStream) throws IOException {</span></span>
<span class="line"><span style="color:#BDC4CC;">    // ReadListener不是必须的，它主要的设计是读取excel数据的后置处理(并考虑一次性读取到内存潜在的内存泄漏问题)</span></span>
<span class="line"><span style="color:#F0F3F6;">    EasyExcelFactory.</span><span style="color:#DBB7FF;">read</span><span style="color:#F0F3F6;">(inputStream, User.class, </span><span style="color:#FF9492;">new</span><span style="color:#F0F3F6;"> ReadListener&lt;</span><span style="color:#FF9492;">User</span><span style="color:#F0F3F6;">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">        public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> invoke</span><span style="color:#F0F3F6;">(User </span><span style="color:#FFB757;">user</span><span style="color:#F0F3F6;">, AnalysisContext </span><span style="color:#FFB757;">analysisContext</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">            cachedDataList.</span><span style="color:#DBB7FF;">add</span><span style="color:#F0F3F6;">(user);</span></span>
<span class="line"><span style="color:#F0F3F6;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">        public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doAfterAllAnalysed</span><span style="color:#F0F3F6;">(AnalysisContext </span><span style="color:#FFB757;">analysisContext</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">            cachedDataList.</span><span style="color:#DBB7FF;">forEach</span><span style="color:#F0F3F6;">(user </span><span style="color:#FF9492;">-&gt;</span><span style="color:#F0F3F6;"> log.</span><span style="color:#DBB7FF;">info</span><span style="color:#F0F3F6;">(user.</span><span style="color:#DBB7FF;">toString</span><span style="color:#F0F3F6;">()));</span></span>
<span class="line"><span style="color:#F0F3F6;">        }</span></span>
<span class="line"><span style="color:#F0F3F6;">    }).</span><span style="color:#DBB7FF;">sheet</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">doRead</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>通过 PostMan 进行接口测试</p><figure><img src="`+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里注意下，需要有字体的支持，比如如果没有字体支撑将会报如下告警：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>Warning: the font &quot;Times&quot; is not available, so &quot;Lucida Bright&quot; has been substituted, but may have unexpected appearance or behavor. Re-enable the &quot;Times&quot; font to remove this warning.</span></span></code></pre></div><h3 id="填充excel模板" tabindex="-1"><a class="header-anchor" href="#填充excel模板"><span>填充Excel模板</span></a></h3><p>我们先来准备一个 excel 模板，考虑了横向表和纵向列表，以及单一信息等，基本上能满足多数的应用场景。</p><figure><img src="'+e+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code>UserController</code>中下载填充后的 Excel 方法</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">ApiOperation</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Fill Excel Template&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">GetMapping</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/excel/fill&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> fillTemplate</span><span style="color:#F0F3F6;">(HttpServletResponse response) {</span></span>
<span class="line"><span style="color:#FF9492;">    try</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">        response.</span><span style="color:#DBB7FF;">reset</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        response.</span><span style="color:#DBB7FF;">setContentType</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;application/vnd.ms-excel&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        response.</span><span style="color:#DBB7FF;">setHeader</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;Content-disposition&quot;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;attachment;filename=user_excel_template_&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> System.</span><span style="color:#DBB7FF;">currentTimeMillis</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;.xlsx&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        userService.</span><span style="color:#DBB7FF;">fillExcelTemplate</span><span style="color:#F0F3F6;">(response.</span><span style="color:#DBB7FF;">getOutputStream</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#F0F3F6;">    } </span><span style="color:#FF9492;">catch</span><span style="color:#F0F3F6;"> (Exception </span><span style="color:#FFB757;">e</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        e.</span><span style="color:#DBB7FF;">printStackTrace</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p><code>UserServiceImpl</code>中填充 excel 模板的方法</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;">// 模板注意 用{} 来表示你要用的变量 如果本来就有&quot;{&quot;,&quot;}&quot; 特殊字符 用&quot;\\{&quot;,&quot;\\}&quot;代替</span></span>
<span class="line"><span style="color:#BDC4CC;">// {} 代表普通变量 {.} 代表是list的变量 {前缀.} 前缀可以区分不同的list</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> fillExcelTemplate</span><span style="color:#F0F3F6;">(ServletOutputStream outputStream) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    // 确保文件可访问，这个例子的excel模板，放在根目录下面</span></span>
<span class="line"><span style="color:#F0F3F6;">    String</span><span style="color:#F0F3F6;"> templateFileName</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;/Users/pdai/Downloads/user_excel_template.xlsx&quot;</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    // 方案1</span></span>
<span class="line"><span style="color:#FF9492;">    try</span><span style="color:#F0F3F6;"> (ExcelWriter</span><span style="color:#F0F3F6;"> excelWriter</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> EasyExcelFactory.</span><span style="color:#DBB7FF;">write</span><span style="color:#F0F3F6;">(outputStream).</span><span style="color:#DBB7FF;">withTemplate</span><span style="color:#F0F3F6;">(templateFileName).</span><span style="color:#DBB7FF;">build</span><span style="color:#F0F3F6;">()) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        WriteSheet</span><span style="color:#F0F3F6;"> writeSheet</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> EasyExcelFactory.</span><span style="color:#DBB7FF;">writerSheet</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">build</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">        FillConfig</span><span style="color:#F0F3F6;"> fillConfig</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> FillConfig.</span><span style="color:#DBB7FF;">builder</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">direction</span><span style="color:#F0F3F6;">(WriteDirectionEnum.HORIZONTAL).</span><span style="color:#DBB7FF;">build</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 如果有多个list 模板上必须有{前缀.} 这里的前缀就是 userList，然后多个list必须用 FillWrapper包裹</span></span>
<span class="line"><span style="color:#F0F3F6;">        excelWriter.</span><span style="color:#DBB7FF;">fill</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> FillWrapper</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;userList&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">getUserList</span><span style="color:#F0F3F6;">()), fillConfig, writeSheet);</span></span>
<span class="line"><span style="color:#F0F3F6;">        excelWriter.</span><span style="color:#DBB7FF;">fill</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> FillWrapper</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;userList&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">getUserList</span><span style="color:#F0F3F6;">()), fillConfig, writeSheet);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        excelWriter.</span><span style="color:#DBB7FF;">fill</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> FillWrapper</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;userList2&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">getUserList</span><span style="color:#F0F3F6;">()), writeSheet);</span></span>
<span class="line"><span style="color:#F0F3F6;">        excelWriter.</span><span style="color:#DBB7FF;">fill</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> FillWrapper</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;userList2&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#DBB7FF;">getUserList</span><span style="color:#F0F3F6;">()), writeSheet);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        Map</span><span style="color:#FFB757;">&lt;</span><span style="color:#FF9492;">String</span><span style="color:#FFB757;">, </span><span style="color:#FF9492;">Object</span><span style="color:#FFB757;">&gt; </span><span style="color:#F0F3F6;">map</span><span style="color:#FF9492;"> =</span><span style="color:#FF9492;"> new</span><span style="color:#F0F3F6;"> HashMap&lt;&gt;();</span></span>
<span class="line"><span style="color:#F0F3F6;">        map.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;user&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;pdai&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        map.</span><span style="color:#DBB7FF;">put</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;date&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#FF9492;">new</span><span style="color:#DBB7FF;"> Date</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">        excelWriter.</span><span style="color:#DBB7FF;">fill</span><span style="color:#F0F3F6;">(map, writeSheet);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>访问<code>http://localhost:8080/user/excel/fill</code>下载。</p>`,28)]))}const y=a(F,[["render",t],["__file","springBoot—集成EasyExcel.html.vue"]]),d=JSON.parse('{"path":"/java/springBoot/springBoot%E2%80%94%E9%9B%86%E6%88%90EasyExcel.html","title":"","lang":"zh-CN","frontmatter":{"description":"EasyExcel 是一个基于 Java 的、快速、简洁、解决大文件内存溢出的 Excel 处理工具。它能让你在不用考虑性能、内存的等因素的情况下，快速完成 Excel 的读、写等功能。它是基于 POI 来封装实现的，主要解决其易用性，封装性和性能问题。 实现案例 POM 依赖 导出Excel UserController中导出的方法 UserServ...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/java/springBoot/springBoot%E2%80%94%E9%9B%86%E6%88%90EasyExcel.html"}],["meta",{"property":"og:description","content":"EasyExcel 是一个基于 Java 的、快速、简洁、解决大文件内存溢出的 Excel 处理工具。它能让你在不用考虑性能、内存的等因素的情况下，快速完成 Excel 的读、写等功能。它是基于 POI 来封装实现的，主要解决其易用性，封装性和性能问题。 实现案例 POM 依赖 导出Excel UserController中导出的方法 UserServ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-01T01:55:29.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-01T01:55:29.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-11-01T01:55:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"实现案例","slug":"实现案例","link":"#实现案例","children":[{"level":3,"title":"POM 依赖","slug":"pom-依赖","link":"#pom-依赖","children":[]},{"level":3,"title":"导出Excel","slug":"导出excel","link":"#导出excel","children":[]},{"level":3,"title":"导入Excel","slug":"导入excel","link":"#导入excel","children":[]},{"level":3,"title":"填充Excel模板","slug":"填充excel模板","link":"#填充excel模板","children":[]}]}],"git":{"createdTime":1730426129000,"updatedTime":1730426129000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":2.53,"words":758},"filePathRelative":"java/springBoot/springBoot—集成EasyExcel.md","localizedDate":"2024年11月1日","autoDesc":true}');export{y as comp,d as data};
