import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as n,o as e}from"./app-Coac0FJ0.js";const p="/wsq-blog/assets/%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C%E7%A0%81-DXNKt4H8.jpg",l="/wsq-blog/assets/%E6%A8%A1%E4%BA%8C%E9%99%A4%E6%B3%95-C5D-YiNi.jpg",i="/wsq-blog/assets/%E7%A1%AE%E8%AE%A4%E6%A0%A1%E9%AA%8C%E4%BD%8D%E5%88%86%E5%B8%83-DeS-t_Rg.png",m="/wsq-blog/assets/H1%E6%A0%A1%E9%AA%8C%E4%BD%8D%E7%9A%84%E5%80%BC-BhWWwO1m.png",c="/wsq-blog/assets/%E6%9C%80%E7%BB%88%E6%B5%B7%E6%98%8E%E7%A0%81-BcBRNagf.png",r="/wsq-blog/assets/%E5%87%BA%E9%94%99%E4%BD%8D-DG6Z8NEr.png",d={};function o(h,s){return e(),t("div",null,s[0]||(s[0]=[n('<p>差错检测的方式有多种，常见的有奇偶校验、海明码、CRC 校验等。他们的工作原理都是发送端对数据按照某种算法计算出来校验码，将校验码和数据一起发送到接收端，然后接收端进行检验确定数据是否发生变化。</p><h2 id="奇偶校验码" tabindex="-1"><a class="header-anchor" href="#奇偶校验码"><span>奇偶校验码</span></a></h2><p>奇偶校验码，在需要传输的一串二进制数据(有效信息位)中，添加一位冗余码(校验位)，即奇偶校验码=有效信息位+校验位。</p><p>具体可分为，奇校验和偶校验：</p><ul><li>奇校验：整个校验码（有效信息位和校验位）中 1 的个数为奇数</li><li>偶校验：整个校验码（有效信息位和校验位）中 1 的个数为偶数</li></ul><p>比如现在有 8 比特的数据，其中 7 位是有效信息位，还有 1 位是校验位，校验位在最高位还是最低位都可以，这里以在最低位为例：</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>我们可以发现：</p><ul><li>奇校验就是校验有效信息位+校验位中，1 的个数是否是奇数</li><li>偶校验就是校验有效信息位+校验位中，1 的个数是否是偶数</li></ul><p>我们人类可以直接通过数 1 的个数来分辨，但对于计算机来说，利用异或运算就能直接判断 1 的个数。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>异或运算，简单来说就是 ab 两个值，如果相同的话为 0，不同的话则为 1。异或的数学符号为“⊕”，计算机符号为“xor”</p></div><p>当传输过程中，只要有 1 位数据发生了变化，此时奇偶校验码中 1 的个数就会发生奇偶转换，也就能够检测到出错，但并不能纠错，因为无法确认哪一位出问题了，即有检错能力无纠错能力。</p><p>另外如果是 2 位出现了误码，可能会出现奇偶校验码中的 1 的个数，并没有发生奇偶转换，那么会误以为还是正常的。</p><p>奇偶校验只能检 1 位错，并且无纠错能力，但其也有优点，比如开销足够小，常用于校验 1 字节长(8 位)的数据，因为 1 字节长的数据如果出问题，大概率是 1 位出问题，2 位及其以上出错的概率较低。一般用于储存器读写和网络通讯传输数据等场景。</p><h2 id="循环冗余校验码" tabindex="-1"><a class="header-anchor" href="#循环冗余校验码"><span>循环冗余校验码</span></a></h2><p>循环冗余校验码，简称 CRC，是一种根据网络数据包或计算机文件等数据产生简短固定位数校验码的一种信道编码技术，主要用来检测或校验数据传输或者保存后可能出现的错误。</p><p>CRC 通过某种数学运算来建立数据位和校验位的约定关系，它的基本思想：</p><ol><li>发送端和接收端双方约好一个生成多项式，用<code>G(X)</code>来代称</li><li>发送端基于有效信息数据和生成多项式<code>G(X)</code>相除，计算出余数(差错检测码)，再将差错检测码拼在有效信息数据后，作为发送数据</li><li>接收端接受到的数据除以生成多项式<code>G(X)</code>，可以除尽则编码正确；若有余数，则余数指明出错位所在的位置</li></ol><h3 id="模二算术运算" tabindex="-1"><a class="header-anchor" href="#模二算术运算"><span>模二算术运算</span></a></h3><p>上面我们 CRC 中的除法是模二除法，所谓模二算术运算，与四则运算相同，模二运算也包括模二加、模二减、模二乘、模二除这四种二进制运算；与四则运算不同的是模二运算不考虑进位和借位。</p><ul><li>模二加法：<code>0+0=0，0+1=1，1+0=1，1+1=0</code>（相同为 0，相异为 1，类似于异或）</li><li>模二减法：<code>0-0=0，0-1=1，1-0=1，1-1=0</code>（相同为 0，相异为 1，类似于异或）</li><li>模二乘法：<code>0x0=0，0x1=0，1x0=0，1x1=1</code>（有 0 结果 0，与普通四则运算里的乘法一样，唯一的区别是，模二乘法在部分积相加时按模二加，模二除法部分余数相减时按模二减）</li><li>模二除法：是模二乘法的逆运算，也是我们重点需要理解的，我们这里直接举个例子(二进制)：<br><img src="'+l+'" alt="" loading="lazy"></li></ul><p><code>1111000/1101=1011</code>余<code>111</code>，其实我们可以发现模二除法计算过程中，主要用到了模二乘法和模二减法。</p><p>模二除法与 CRC 算法密切相关，如果某一步被除数最高位为 1，则可除，即对应位商为 1；当最后余数的位数小于除数位数时，除法停止；当被除数的位数小于除数位数时，则商数为 0，被除数就是余数。</p><h3 id="生成多项式" tabindex="-1"><a class="header-anchor" href="#生成多项式"><span>生成多项式</span></a></h3><p>需要注意的是，我们上面所说的生成多项式其实是常数。</p><p>一个<code>r</code>位的二进制常数可以用<code>r-1</code>次的生成多项式表示，比如<code>G=1101</code>，其<code>G(x)=x^3+x^2+1</code>。</p><h3 id="通过例子体会crc" tabindex="-1"><a class="header-anchor" href="#通过例子体会crc"><span>通过例子体会CRC</span></a></h3><p>我们这里再举一个例子，比如有效信息数据<code>1111</code>和生成多项式<code>G(x)=x^3+x^2+1</code>。</p><p>发送端：</p><ul><li>约定的常数<code>G=1101</code>，有 4 位</li><li>有效信息数据左移 (4-1)(多项式的最高次幂) 位，同时右侧补 0，得<code>1111000</code></li><li><code>1111000</code>与<code>1101</code>做模二除法，得余数<code>111</code>，如果余数不足 3 位，在前面补 0</li><li>将余数加(模二加法)到有效信息数据后，得<code>1111111=1111000 + 111</code></li></ul><p>接收端：接收到的数据<code>1111111/1101</code>，若余数为 0，则数据正确。</p><p>CRC 校验码如果任意一位发生错误(前提不是差错检测码部分出错)，则都会得到一个确定的余数，那么当选择合适的生成多项式时，会使得余数各不相同，所以能进行 1 位纠错，但纠错能力较为有限。</p><p>但 CRC 是目前计算机通信领域最为普遍的校验方式，因为 CRC 校验码的检错能力极强，且检测成本较低，如果发现错误，直接触发网络数据表重传机制，对通信效率和安全提供了保障。</p><p>因此在网络通讯、编码器和电路的检测等领域使用较为广泛。在检错的正确率与速度、成本等方面，都比奇偶校验等校验方式具有优势。</p><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>在标准的以太帧格式中，最后有 4 个字节长度的冗余位，用于存储 CRC 校验的值，这个冗余位又常称为帧检验序列<code>FCS(Frame Check Sequence)</code>。</p></div><h2 id="海明校验码" tabindex="-1"><a class="header-anchor" href="#海明校验码"><span>海明校验码</span></a></h2><p>海明码，由 Richard Hamming 于 1950 年提出，其实际上就是多重奇偶校验码，用于数据的校验与纠正。</p><p>其原理是在有效信息位中加入多个校验位形成海明码，将海明码中的每一位分组，进行奇偶校验；如果某一位出问题，会及时检错，并且校验位还能标注出错的位置。</p><p>比如我们接下来以<code>101101100</code>为例，来写出偶校验的海明码，来全面讲解海明码的具体原理与纠错实现。</p><h3 id="确认校验位位数" tabindex="-1"><a class="header-anchor" href="#确认校验位位数"><span>确认校验位位数</span></a></h3><p>首先就是要加入多个校验位，怎么确认其位数？</p><p>假设校验码有<code>n</code>位(也被称为编码字)，有效信息位有<code>m</code>位，校验位有<code>r</code>位。我们可以知道校验位的状态有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^r - 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span> 个状态，要想校验位能够区分整个校验码是否正确，校验位的状态的个数要足够覆盖有效信息位加上校验位本身，因为校验位也有可能出错，那么就有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup><mo>−</mo><mn>1</mn><mo>&gt;</mo><mo>=</mo><mi>m</mi><mo>+</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">2^r - 1&gt;=m+r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7477em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6835em;vertical-align:-0.0391em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup><mo>&gt;</mo><mo>=</mo><mi>m</mi><mo>+</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^r &gt;=m+r+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7035em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>。</p><p>常见的数据位和校验位之间的位数关系：</p><table><thead><tr><th style="text-align:center;">数据位位数m</th><th style="text-align:center;">校验位位数r</th><th style="text-align:center;">校验位占比</th></tr></thead><tbody><tr><td style="text-align:center;">4</td><td style="text-align:center;">3</td><td style="text-align:center;">0.75</td></tr><tr><td style="text-align:center;">8</td><td style="text-align:center;">4</td><td style="text-align:center;">0.50</td></tr><tr><td style="text-align:center;">16</td><td style="text-align:center;">5</td><td style="text-align:center;">0.31</td></tr><tr><td style="text-align:center;">32</td><td style="text-align:center;">6</td><td style="text-align:center;">0.18</td></tr><tr><td style="text-align:center;">64</td><td style="text-align:center;">7</td><td style="text-align:center;">0.11</td></tr></tbody></table><p>我们再来看看<code>101101100</code>，其<code>m=9</code>，由公式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>r</mi></msup><mo>&gt;</mo><mo>=</mo><mi>m</mi><mo>+</mo><mi>r</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^r &gt;=m+r+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7035em;vertical-align:-0.0391em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，可得<code>r=4</code>，所以 <code>n=m+r=13</code>。</p><p>再补充一个概念，码距，两个合法码字对应位上数字的不同位的个数</p><ul><li>00 和 01，其码距为 1，00 和 11 其码距为 2</li><li>一般来说，码距越大，其检测错误的位数越大，纠正错误的位数也越大(当码距不小于 2 的数据校验码，开始具有检错的能力)，另外纠错能力恒小于等于检错能力</li></ul><h3 id="确认校验位分布" tabindex="-1"><a class="header-anchor" href="#确认校验位分布"><span>确认校验位分布</span></a></h3><p>海明码规定，校验位在校验码中的位置，是 2 的整数幂处，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">2^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>......</p><figure><img src="'+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="计算各校验位的值" tabindex="-1"><a class="header-anchor" href="#计算各校验位的值"><span>计算各校验位的值</span></a></h3><p>我们接着把检验码中，各有效信息位都转化成校验位累加关系，实质是校验位的状态能够覆盖整个校验码的各位，如下：</p><div class="language-text" data-highlighter="shiki" data-ext="text" data-title="text" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>1=1</span></span>
<span class="line"><span>2=2</span></span>
<span class="line"><span>3=1+2</span></span>
<span class="line"><span>4=4</span></span>
<span class="line"><span>5=1+4</span></span>
<span class="line"><span>6=2+4</span></span>
<span class="line"><span>7=1+2+4</span></span>
<span class="line"><span>8=8</span></span>
<span class="line"><span>9=1+8</span></span>
<span class="line"><span>10=2+8</span></span>
<span class="line"><span>11=1+2+8</span></span>
<span class="line"><span>12=4+8</span></span>
<span class="line"><span>13=1+4+8</span></span></code></pre></div><p>上述各位的表达式，可能不够清晰，我们可以再通过表格来将上述表达式，重新排版一下：</p><table><thead><tr><th>索引号</th><th>H4(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">2^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>) 8</th><th>H3(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>) 4</th><th>H2(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">2^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>) 2</th><th>H1(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span>) 1</th></tr></thead><tbody><tr><td>3</td><td></td><td></td><td>[x]</td><td>[x]</td></tr><tr><td>5</td><td></td><td>[x]</td><td></td><td>[x]</td></tr><tr><td>6</td><td></td><td>[x]</td><td>[x]</td><td></td></tr><tr><td>7</td><td></td><td>[x]</td><td>[x]</td><td>[x]</td></tr><tr><td>9</td><td>[x]</td><td></td><td></td><td>[x]</td></tr><tr><td>10</td><td>[x]</td><td></td><td>[x]</td><td></td></tr><tr><td>11</td><td>[x]</td><td></td><td>[x]</td><td>[x]</td></tr><tr><td>12</td><td>[x]</td><td>[x]</td><td></td><td></td></tr><tr><td>13</td><td>[x]</td><td>[x]</td><td></td><td>[x]</td></tr></tbody></table><p>我们把校验位单独拎出来，当列名，其他有效信息位当行号：</p><ul><li>横向看，每一位有效信息位，可以被哪几个校验位覆盖(控制)</li><li>纵向看，将有效信息位以校验位为基准，进行分组校验(奇偶检验)</li></ul><p>举个例子，我们来求解一下<code>H1</code>校验位的值<code>H1</code>这个组，有效消息位索引是 3、5、7、9、11、13 的值，然后加上<code>H1</code>这个校验位，<code>1⊕1⊕0⊕1⊕0⊕0⊕H1</code>需要满足偶校验的标准，所以<code>H1</code>位的值=1</p><figure><img src="`+m+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同理可得<code>H2=0,H3=1,H4=1</code>。</p><div class="language-text" data-highlighter="shiki" data-ext="text" data-title="text" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>1⊕1⊕1⊕1⊕0⊕H2=0 -&gt;H2=0</span></span>
<span class="line"><span>1⊕0⊕1⊕1⊕0⊕H3=0 -&gt;H3=1</span></span>
<span class="line"><span>1⊕0⊕1⊕1⊕0⊕H4=0 -&gt;H4=1</span></span></code></pre></div><p>最后我们可以得到最终的偶校验的海明码：</p><figure><img src="`+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="假如第6位报错-如何检错纠错" tabindex="-1"><a class="header-anchor" href="#假如第6位报错-如何检错纠错"><span>假如第6位报错，如何检错纠错？</span></a></h3><p>假设由于网络波动，电压变化等各种原因，导致第 6 位(最终的海明码)出错，其值变为 0，我们来看看海明码如何检错和纠错？</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><code>H1</code>分组校验：<code>1⊕1⊕0⊕1⊕0⊕0⊕1=0</code>(从高位到低位)，偶校验通过</li><li><code>H2</code>分组校验：<code>1⊕1⊕1⊕0⊕0⊕0=1</code>，偶校验不通过</li><li><code>H3</code>分组校验：<code>1⊕0⊕1⊕0⊕0⊕1=1</code>，偶校验不通过</li><li><code>H4</code>分组校验：<code>1⊕0⊕1⊕1⊕0⊕1</code>，偶校验通过</li></ul><p>所以我们可以很轻易地知道<code>H2</code>和<code>H3</code>组中有问题，取二者交集，索引 6、7 两位最有可能出错；然后又因为<code>H1</code>校验位已经校验过索引 7，所以最终索引 6 出错，其值应该被纠正为 1。</p><table><thead><tr><th>索引号</th><th>H4(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">2^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>) 8</th><th>H3(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">2^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>) 4</th><th>H2(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>1</mn></msup></mrow><annotation encoding="application/x-tex">2^1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span>) 2</th><th>H1(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>0</mn></msup></mrow><annotation encoding="application/x-tex">2^0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span></span></span></span>) 1</th></tr></thead><tbody><tr><td>3</td><td></td><td></td><td>[x]</td><td>[x]</td></tr><tr><td>5</td><td></td><td>[x]</td><td></td><td>[x]</td></tr><tr><td>6</td><td></td><td>[x]</td><td>[x]</td><td></td></tr><tr><td>7</td><td></td><td>[x]</td><td>[x]</td><td>[x]</td></tr><tr><td>9</td><td>[x]</td><td></td><td></td><td>[x]</td></tr><tr><td>10</td><td>[x]</td><td></td><td>[x]</td><td></td></tr><tr><td>11</td><td>[x]</td><td></td><td>[x]</td><td>[x]</td></tr><tr><td>12</td><td>[x]</td><td>[x]</td><td></td><td></td></tr><tr><td>13</td><td>[x]</td><td>[x]</td><td></td><td>[x]</td></tr></tbody></table><p>但如果 2 位发生错误，6、7 位同时发生错误，<code>H1、H2、H3</code>分组校验不通过，不知道错误在哪个位置，但可以知道数据有误。所以海明码具有 1 位纠错能力，2 位检错能力。</p><p>当然我们可以提升其检错和纠错能力，加入的奇偶校验位的数目越多，错误检错和纠错能力随之提升，但代价是成本也随之更高。</p>',71)]))}const u=a(d,[["render",o],["__file","校验码.html.vue"]]),y=JSON.parse('{"path":"/network/%E6%A0%A1%E9%AA%8C%E7%A0%81.html","title":"校验码","lang":"zh-CN","frontmatter":{"title":"校验码","date":"2025-01-05T00:00:00.000Z","tags":"network","categories":"计算机网络","order":2,"description":"差错检测的方式有多种，常见的有奇偶校验、海明码、CRC 校验等。他们的工作原理都是发送端对数据按照某种算法计算出来校验码，将校验码和数据一起发送到接收端，然后接收端进行检验确定数据是否发生变化。 奇偶校验码 奇偶校验码，在需要传输的一串二进制数据(有效信息位)中，添加一位冗余码(校验位)，即奇偶校验码=有效信息位+校验位。 具体可分为，奇校验和偶校验：...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/network/%E6%A0%A1%E9%AA%8C%E7%A0%81.html"}],["meta",{"property":"og:title","content":"校验码"}],["meta",{"property":"og:description","content":"差错检测的方式有多种，常见的有奇偶校验、海明码、CRC 校验等。他们的工作原理都是发送端对数据按照某种算法计算出来校验码，将校验码和数据一起发送到接收端，然后接收端进行检验确定数据是否发生变化。 奇偶校验码 奇偶校验码，在需要传输的一串二进制数据(有效信息位)中，添加一位冗余码(校验位)，即奇偶校验码=有效信息位+校验位。 具体可分为，奇校验和偶校验：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T09:49:11.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T09:49:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"校验码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-05T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T09:49:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"奇偶校验码","slug":"奇偶校验码","link":"#奇偶校验码","children":[]},{"level":2,"title":"循环冗余校验码","slug":"循环冗余校验码","link":"#循环冗余校验码","children":[{"level":3,"title":"模二算术运算","slug":"模二算术运算","link":"#模二算术运算","children":[]},{"level":3,"title":"生成多项式","slug":"生成多项式","link":"#生成多项式","children":[]},{"level":3,"title":"通过例子体会CRC","slug":"通过例子体会crc","link":"#通过例子体会crc","children":[]}]},{"level":2,"title":"海明校验码","slug":"海明校验码","link":"#海明校验码","children":[{"level":3,"title":"确认校验位位数","slug":"确认校验位位数","link":"#确认校验位位数","children":[]},{"level":3,"title":"确认校验位分布","slug":"确认校验位分布","link":"#确认校验位分布","children":[]},{"level":3,"title":"计算各校验位的值","slug":"计算各校验位的值","link":"#计算各校验位的值","children":[]},{"level":3,"title":"假如第6位报错，如何检错纠错？","slug":"假如第6位报错-如何检错纠错","link":"#假如第6位报错-如何检错纠错","children":[]}]}],"git":{"createdTime":1730426129000,"updatedTime":1745401751000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":2}]},"readingTime":{"minutes":10.12,"words":3036},"filePathRelative":"network/校验码.md","localizedDate":"2025年1月5日","autoDesc":true}');export{u as comp,y as data};
