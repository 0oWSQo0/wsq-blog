import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as s}from"./app-Coac0FJ0.js";const o="/wsq-blog/assets/0-B-69NCUi.png",d="/wsq-blog/assets/1-DNR0eRS7.png",c="/wsq-blog/assets/2-d9VKxStM.png",l="/wsq-blog/assets/3-CNWJaym0.png",i="/wsq-blog/assets/4--PDnu3BU.png",r="/wsq-blog/assets/5-CZUcFGn_.png",g="/wsq-blog/assets/6-B0i-oFsV.png",p="/wsq-blog/assets/7-E7b8Meks.png",h="/wsq-blog/assets/8-n7EuZjg2.png",f="/wsq-blog/assets/9-DQ6VH4W4.png",u="/wsq-blog/assets/10-YOey1Omz.png",m="/wsq-blog/assets/11-6kqgV6n8.png",D="/wsq-blog/assets/12-BJp9pBj4.png",N="/wsq-blog/assets/13-DGNTwpdL.png",S="/wsq-blog/assets/14-CM8jC4q0.png",b="/wsq-blog/assets/15-Bgim-LMR.png",P="/wsq-blog/assets/16-DO_Lk0Xh.png",w="/wsq-blog/assets/17-DRziG-_B.png",x="/wsq-blog/assets/18-BzsOHUKm.png",_="/wsq-blog/assets/19-FbQwkU9-.png",y="/wsq-blog/assets/20-CIPT_Jwe.png",I="/wsq-blog/assets/21-C2WV994G.png",z="/wsq-blog/assets/22-CJVkz0zX.png",v="/wsq-blog/assets/23-BdYblhh4.png",q="/wsq-blog/assets/24-CB77BTJL.png",k="/wsq-blog/assets/25-BFb_c2qX.png",C="/wsq-blog/assets/26-fQnu60D4.png",T="/wsq-blog/assets/27-DfAKHDiL.png",A="/wsq-blog/assets/28-AmyE-cQM.png",B="/wsq-blog/assets/29-CpDau4j0.png",M="/wsq-blog/assets/30-BM7iSGk-.png",U="/wsq-blog/assets/31-D3f0dBB9.png",F="/wsq-blog/assets/32-C9ZGT55n.png",Q="/wsq-blog/assets/33-D86TrasC.png",E={};function O(Z,e){return s(),a("div",null,e[0]||(e[0]=[n('<p>我们平时在访问网站时，不使用 IP 地址，而是网站域名。但是抓包发现：交互报文是以 IP 地址进行的。那么 IP 地址是从哪来的呢？这是因为 DNS 把网站域名自动转换为 IP 地址。</p><figure><img src="'+o+'" alt="报文交互抓包" tabindex="0" loading="lazy"><figcaption>报文交互抓包</figcaption></figure><h2 id="dns-出现" tabindex="-1"><a class="header-anchor" href="#dns-出现"><span>DNS 出现</span></a></h2><p>TCP/IP 是基于 IP 地址进行通信的，但是 IP 地址不太好记。于是出现了另一种方便记忆的标识符，那就是主机名。为计算机配置主机名，在进行网络通信时，直接使用主机名，而不用输入一大串的 IP 地址。同时，系统通过一个叫<code>hosts</code>的文件，实现主机名转换 IP 地址的功能。<code>hosts</code>文件包括主机名和 IP 地址的对应关系。当需要通过主机名访问主机时，它就会查看本地的<code>hosts</code>文件，从文件中找到相对应的 IP 地址，然后进行报文发送。如果在<code>hosts</code>文件中没找到相关信息，则主机访问失败。</p><p><code>hosts</code>文件是主机的本地文件，优点是查找响应速度快。它主要用来存储一些本地网络的主机名和 IP 地址的对应信息。这样，主机在以主机名访问本地网络主机时，通过<code>hosts</code>文件可以迅速获得相应的 IP 地址。</p><figure><img src="'+d+'" alt="hosts文件" tabindex="0" loading="lazy"><figcaption>hosts文件</figcaption></figure><p>每台主机的<code>hosts</code>文件都需要单独手工更新。随着网络规模的不断扩大、接入计算机的数量不断增加，维护难度越来越大，每台主机同步更新，几乎是一件不可能完成的任务。</p><figure><img src="'+c+'" alt="hosts维护难" tabindex="0" loading="lazy"><figcaption>hosts维护难</figcaption></figure><p>为了解决<code>hosts</code>文件维护困难的问题，出现了 DNS 域名系统，一个可以解决主机名和 IP 地址互相转换的系统。无论网络规模变得多么庞大，都能在一个小范围内通过 DNS 进行管理。</p><figure><img src="'+l+'" alt="DNS域名系统" tabindex="0" loading="lazy"><figcaption>DNS域名系统</figcaption></figure><h2 id="dns-介绍" tabindex="-1"><a class="header-anchor" href="#dns-介绍"><span>DNS 介绍</span></a></h2><p>DNS，全称<code>Domain Name System</code>。采用<code>client/server</code>模式，<code>DNS client</code>发出查询请求，<code>DNS server</code>响应请求。<code>DNS client</code>通过查询<code>DNS server</code>获得主机的 IP 地址，进而完成后续的 TCP/IP 通信过程。</p><figure><img src="'+i+'" alt="DNS client/server" tabindex="0" loading="lazy"><figcaption>DNS client/server</figcaption></figure><p>当 Windows 系统用户使用<code>nslookup hostname/domainname</code>命令时，DNS 会自动查找注册了主机名和 IP 地址的数据库，并返回对应的 IP 地址。</p><figure><img src="'+r+'" alt="nslookup命令演示" tabindex="0" loading="lazy"><figcaption>nslookup命令演示</figcaption></figure><h3 id="dns-域名" tabindex="-1"><a class="header-anchor" href="#dns-域名"><span>DNS 域名</span></a></h3><p>域名是为了识别主机名或机构的一种分层的名称。因为单独的一台域名服务器是不可能知道所有域名信息，所以域名系统是一个分布式数据库系统，域名（主机名）到 IP 地址的解析可以由若干个域名服务器共同完成。每一个站点维护自己的信息数据库，并运行一个服务器程序供互联网上的客户端查询。DNS 提供了客户端与服务器的通信协议，也提供了服务器之间交换信息的协议。由于是分布式系统，即使单个服务器出现故障，也不会导致整个系统失效，消除了单点故障。</p><h3 id="dns-域名组成" tabindex="-1"><a class="header-anchor" href="#dns-域名组成"><span>DNS 域名组成</span></a></h3><p>DNS 域的本质是一种管理范围的划分，最大的域是根域，向下可以划分为顶级域、二级域、三级域、四级域等。相对应的域名是根域名、顶级域名、二级域名、三级域名等。不同等级的域名使用点号分隔，级别最低的域名写在最左边，而级别最高的域名写在最右边。</p><figure><img src="'+g+'" alt="DNS域" tabindex="0" loading="lazy"><figcaption>DNS域</figcaption></figure><p>举个栗子：网站域名<code>www.tsinghua.edu.cn</code>中，从右到左开始，<code>cn</code>是顶级域名，代表中国，<code>edu</code>是二级域名，代表教育机构，<code>tsinghua</code>是三级域名，表示清华大学，<code>www</code>则表示三级域名中的主机，并提供了 web 服务。</p><figure><img src="'+p+'" alt="清华大学域名" tabindex="0" loading="lazy"><figcaption>清华大学域名</figcaption></figure><p>除了<code>www</code>主机外，常见的主机还有<code>arch 、sem 、mail</code>，域名如下：</p><figure><img src="'+h+'" alt="清华大学常见域名" tabindex="0" loading="lazy"><figcaption>清华大学常见域名</figcaption></figure><p>每一级的域名都由英文字母和数字组成，域名不区分大小写，长度不能超过 63 字节，一个完整的域名不能超过 255 个字节。根域名用 “.”（点）表示。目前我们看到的域名例子都是完全合格域名（FQDN），FQDN 的完整格式是以点结尾的域名。接入互联网的主机、服务器或其它网络设备都可以拥有一个唯一的 FQDN。与 FQDN 对应的，系统中的默认域名是非合格域名，会把当前的区域域名添加到尾部。例如，<code>tsinghua</code>域内的主机上查找<code>mail</code>，本地解析器就会将这个名称转换为 FQDN，即<code>mail.tsinghua.edu.cn</code>，然后解析出 IP 地址。</p><figure><img src="'+f+'" alt="完全合格域名" tabindex="0" loading="lazy"><figcaption>完全合格域名</figcaption></figure><h3 id="dns-域名空间" tabindex="-1"><a class="header-anchor" href="#dns-域名空间"><span>DNS 域名空间</span></a></h3><p>域名空间结构像是一棵倒过来的树，也叫做树形结构。根域名就是树根，用点号表示，往下是这棵树的各层枝叶。根域名的下一层叫顶级域名，顶级域名包括三大类：</p><figure><img src="'+u+'" alt="三大顶级域名" tabindex="0" loading="lazy"><figcaption>三大顶级域名</figcaption></figure><h4 id="国家顶级域名" tabindex="-1"><a class="header-anchor" href="#国家顶级域名"><span>国家顶级域名</span></a></h4><p>国家顶级域名采用 ISO3166 的规定。比如：<code>.cn</code>表示中国，<code>.us</code>表示美国，<code>.uk</code>表示英国等。现在使用的国家顶级域名大约在 200个左右。</p><figure><img src="'+m+'" alt="国家顶级域名" tabindex="0" loading="lazy"><figcaption>国家顶级域名</figcaption></figure><h4 id="国际顶级域名" tabindex="-1"><a class="header-anchor" href="#国际顶级域名"><span>国际顶级域名</span></a></h4><p>国际顶级域名采用<code>.int</code>。国际性的组织可以在<code>.int</code>下注册。</p><h4 id="通用顶级域名" tabindex="-1"><a class="header-anchor" href="#通用顶级域名"><span>通用顶级域名</span></a></h4><figure><img src="'+D+'" alt="通用顶级域名" tabindex="0" loading="lazy"><figcaption>通用顶级域名</figcaption></figure><p>最早的顶级域名共有 6 个。分别为：</p><ul><li><code>.com</code>表示公司企业，</li><li><code>.net</code>表示网络服务机构，</li><li><code>.org</code>表示非盈利组织，</li><li><code>.edu</code>表示教育机构（仅限美国），</li><li><code>.gov</code>表示政府部门（仅限美国），</li><li><code>.mil</code>表示军事部门（仅限美国）。</li></ul><p>随着互联网用户不断增加，又增加了 7 个通用顶级域名。分别为：</p><ul><li><code>.aero</code>用于航空运输业，</li><li><code>.biz</code>用于公司和企业，</li><li><code>.coop</code>用于合作团体，</li><li><code>.info</code>用于各种情况，</li><li><code>.museum</code>用于博物馆，</li><li><code>.name</code>用于个人，</li><li><code>.pro</code>用于自由职业者。</li></ul><p>顶级域名下面是二级域名。国家顶级域名下注册的二级域名均由国家自行确定。我国二级域名分为类别域名和行政域名两大类，类别域名如：<code>.com，.edu，.gov</code>等分别代表不同的机构；行政域名如：<code>.bj</code>表示北京，<code>.sh</code>表示上海，代表我国各省、自治区及直辖市等。</p><figure><img src="'+N+'" alt="二级域名" tabindex="0" loading="lazy"><figcaption>二级域名</figcaption></figure><p>二级域名下面是三级域名、四级域名等。命名树上任何一个节点的域名就是从这个节点到最高层的域名串起来，中间以<code>.</code>分隔。</p><figure><img src="'+S+'" alt="域名组成" tabindex="0" loading="lazy"><figcaption>域名组成</figcaption></figure><p>在域名结构中，节点在所属域中的主机名标识可以相同，但是域名必须不同。比如：清华大学和新浪公司下都有一台主机的标识是<code>mail</code>，但是两者的域名却是不同的，前者为<code>mail.tsinghua.edu.cn</code>，而后者为<code>mail.sina.com.cn</code>。</p><figure><img src="'+b+'" alt="主机名相同，域名不同" tabindex="0" loading="lazy"><figcaption>主机名相同，域名不同</figcaption></figure><h2 id="dns-域名解析" tabindex="-1"><a class="header-anchor" href="#dns-域名解析"><span>DNS 域名解析</span></a></h2><p>将域名转换为对应的 IP 地址的过程叫做域名解析。在域名解析过程中，<code>DNS client</code>的主机调用解析器（<code>Resolver</code>），向<code>DNS server</code>发出请求，<code>DNS server</code>完成域名解析。</p><figure><img src="'+P+'" alt="域名解析" tabindex="0" loading="lazy"><figcaption>域名解析</figcaption></figure><p>域名解析是按照 DNS 分层结构的特点，自顶向下进行的。但是如果每一个域名解析都从根域名服务器开始，那么根域名服务器有可能无法承载海量的流量。在实际应用中，大多数域名解析都是在本地域名服务器完成。通过合理设置本地域名服务器，由本地域名服务器负责大部分的域名解析请求，提高域名解析效率。</p><figure><img src="'+w+'" alt="本地域名服务器" tabindex="0" loading="lazy"><figcaption>本地域名服务器</figcaption></figure><h3 id="dns-解析器" tabindex="-1"><a class="header-anchor" href="#dns-解析器"><span>DNS 解析器</span></a></h3><p>从应用程序的角度看，访问 DNS 是通过一个叫解析器的应用程序来完成的。发送一个 TCP 或 UDP 数据包之前，解析器必须将域名（主机名）转换为 IP 地址。一个解析器至少要注册一个域名服务器的 IP 地址。通常，它至少包括本地域名服务器的 IP 地址。</p><figure><img src="'+x+'" alt="解析器" tabindex="0" loading="lazy"><figcaption>解析器</figcaption></figure><h3 id="dns-域名服务器" tabindex="-1"><a class="header-anchor" href="#dns-域名服务器"><span>DNS 域名服务器</span></a></h3><p>DNS 域名空间的层次结构，允许不同的域名服务器管理域名空间的不同部分。域名服务器是指管理域名的主机及软件，它可以管理所在分层的域。其所管理的分层叫做区域（<code>zone</code>）。一个<code>zone</code>是 DNS 域名空间的一棵子树，它可以单独管理而不受其它<code>zone</code>影响。每层都设有一个域名服务器。</p><figure><img src="'+_+'" alt="域名服务器" tabindex="0" loading="lazy"><figcaption>域名服务器</figcaption></figure><p>根所设置的 DNS 叫做根域名服务器，它对 DNS 的检索数据功能起着至关重要的作用。根域名服务器中注册了顶级域名服务器的 IP 地址。如果想要新增一个一级域名，或者修改已有的顶级域名，就要在根域名服务器中进行新增或变更。</p><p>类似的，顶级域名服务器中注册了二级域名服务器的 IP 地址。如果域名服务器下面没有其它分层，就可以自由地指定主机名称。如果想重新设置域名服务器的 IP 地址或修改域名，必须在上一层的域名服务器中进行修改。</p><p>域名和域名服务器都需要按照分层进行设置。如果域名服务器出现故障，那么针对这个域的 DNS 查询就无法正常工作。因此，为了提高可用性，至少设置两台域名服务器。一旦第一台域名服务器无法提供查询时，就会自动转到第二个甚至第三个域名服务器上进行。</p><h3 id="dns-域名服务器类型" tabindex="-1"><a class="header-anchor" href="#dns-域名服务器类型"><span>DNS 域名服务器类型</span></a></h3><h4 id="本地域名服务器" tabindex="-1"><a class="header-anchor" href="#本地域名服务器"><span>本地域名服务器</span></a></h4><p>互联网接入服务运营商或者一个大的网络机构，像公司、大学等都有一台或多台可以自行管理的域名服务器，这类域名服务器称为本地域名服务器，也称为默认域名服务器。本地域名服务器离客户端较近。当一个 DNS客户端发出 DNS 查询时，首先送到本地域名服务器。如果本地域名服务器数据库中有对应的域名信息，会将查询的域名转换为 IP 地址返回客户端。如果没有，它会以 DNS 客户端的身份向根域名服务器进行查询。根域名服务器收到本地域名服务器的查询后，会返回相关域名服务器的 IP 地址，本地域名服务器再向相关域名服务器发送查询请求。</p><figure><img src="'+y+'" alt="本地域名服务器" tabindex="0" loading="lazy"><figcaption>本地域名服务器</figcaption></figure><h4 id="根域名服务器" tabindex="-1"><a class="header-anchor" href="#根域名服务器"><span>根域名服务器</span></a></h4><p>通常根域名服务器用来管理顶级域，本身并不对域名进行解析，但它知道相关域名服务器的 IP 地址。IPv4 根域名服务器全球有 13 台，主机名分别为 A ~ M。1 台为主根服务器在美国，其余 12 个均为辅根服务器，其中 9 个在美国，2 个在欧洲，位于英国和瑞典，1 台在亚洲，位于日本。所有的域名服务器都必须注册根域名服务器的 IP 地址，因为 DNS 根据 IP 地址进行检索时，需要按顺序从根域名服务器开始。</p><figure><img src="'+I+'" alt="根域名服务器" tabindex="0" loading="lazy"><figcaption>根域名服务器</figcaption></figure><h4 id="授权域名服务器" tabindex="-1"><a class="header-anchor" href="#授权域名服务器"><span>授权域名服务器</span></a></h4><p>互联网上的主机在域名服务器上进行注册，这个域名服务器就是主机的授权域名服务器。通常，主机的授权域名服务器就是本地域名服务器。实际上，主机会有两个授权域名服务器，防止单点故障。授权域名服务器上有注册主机域名与 IP 地址的映射信息，当查询注册主机域名时，它会返回相应主机的 IP 地址。如果主机域名和 IP 地址需要进行变更，只需要在授权域名服务器处理即可，不用再向其它域名服务器进行申请或报告。</p><figure><img src="'+z+'" alt="授权域名服务器" tabindex="0" loading="lazy"><figcaption>授权域名服务器</figcaption></figure><h4 id="主域名服务器" tabindex="-1"><a class="header-anchor" href="#主域名服务器"><span>主域名服务器</span></a></h4><p>主域名服务器是完成一个或多个区域域名解析工作的主要域名服务器，通常也是一个或多个区域的授权域名服务器。主域名服务器有区域内主机地址信息的源数据文件，并且是区域传送中区域数据的唯一来源。</p><h4 id="辅助域名服务器" tabindex="-1"><a class="header-anchor" href="#辅助域名服务器"><span>辅助域名服务器</span></a></h4><p>辅助域名服务器可以协助主域名服务器提供域名查询服务，在主机很多的情况下，可以有效分担主域名服务器的压力。辅助域名服务器也有冗余功能，当主域名服务器故障时，辅助域名服务器能够在数据有效期内继续为主机提供域名解析服务。</p><figure><img src="'+v+'" alt="主/辅助域名服务器" tabindex="0" loading="lazy"><figcaption>主/辅助域名服务器</figcaption></figure><p>一台主域名服务器可以有多台辅助域名服务器，一台辅助域名服务器也可以是其它区域的主域名服务器。辅助域名服务器中包含区域内主机地址数据的授权信息，通过区域配置文件副本的方式存储。辅助域名服务器也是区域的授权域名服务器，可以完成本区域内域名查询的授权回答。</p><p>辅助域名服务器并不建立数据文件，它获得区域数据的唯一途径就是通过区域传送的方式，从主域名服务器上获得区域数据的最新副本。获得数据副本的方式有两种，第一种是辅助域名服务器定期主动获得主域名服务器的副本，或更新副本中的数据。第二种是主域名服务器在区域数据发生变化时，及时通知辅助域名服务器更新副本中的数据。</p><h3 id="dns-域名完整解析过程" tabindex="-1"><a class="header-anchor" href="#dns-域名完整解析过程"><span>DNS 域名完整解析过程</span></a></h3><figure><img src="'+q+'" alt="域名解析过程" tabindex="0" loading="lazy"><figcaption>域名解析过程</figcaption></figure><p>DNS 客户端进行域名<code>www.tsinghua.edu.cn</code>的解析过程如下：</p><ol><li>DNS 客户端向本地域名服务器发送请求，查询<code>www.tsinghua.edu.cn</code>主机的 IP 地址；</li><li>本地域名服务器查询数据库，发现没有域名为<code>www.tsinghua.edu.cn</code>的主机，于是将请求发送给根域名服务器；</li><li>根域名服务器查询数据库，发现没有这个主机域名记录，但是根域名服务器知道 cn 域名服务器可以解析这个域名，于是将 cn 域名服务器的 IP 地址返回给本地域名服务器；</li><li>本地域名服务器向 cn 域名服务器查询<code>www.tsinghua.edu.cn</code>主机的 IP 地址；</li><li>cn 域名服务器查询数据库，也没有相关记录，但是知道<code>edu.cn</code>域名服务器可以解析这个域名，于是将<code>edu.cn</code>域名服务器的 IP 地址返回给本地域名服务器；</li><li>本地域名服务器再向<code>edu.cn</code>域名服务器查询<code>www.tsinghua.edu.cn</code>主机 IP 地址；</li><li><code>edu.cn</code>域名服务器查询数据库，也没有相关记录，但是知道<code>tsinghua.edu.cn</code>域名服务器可以解析这个域名，于是将<code>tsinghua.edu.cn</code>的域名服务器 IP 地址返回给本地域名服务器；</li><li>本地域名服务器向<code>tsinghua.edu.cn</code>域名服务器查询<code>www.tsinghua.edu.cn</code>主机的 IP 地址；</li><li><code>tsinghua.edu.cn</code>域名服务器查询数据库，发现有主机域名记录，于是给本地域名服务器返回<code>www.tsinghua.edu.cn</code>对应的 IP 地址；</li><li>最后本地域名服务器将<code>www.tsinghua.edu.cn</code>的 IP 地址返回给客户端，整个解析过程完成。</li></ol><h2 id="dns-记录类型" tabindex="-1"><a class="header-anchor" href="#dns-记录类型"><span>DNS 记录类型</span></a></h2><table><thead><tr><th style="text-align:center;">记录类型</th><th style="text-align:left;">说明</th><th style="text-align:left;">备注</th></tr></thead><tbody><tr><td style="text-align:center;">SOA</td><td style="text-align:left;">SOA 叫起始授权机构记录，SOA 记录用于在众多 NS 记录中指明哪一台是主服务器</td><td style="text-align:left;"></td></tr><tr><td style="text-align:center;">A</td><td style="text-align:left;">把主机名解析为 IP 地址</td><td style="text-align:left;"><code>www.test.com =&gt; 1.1.1.1</code></td></tr><tr><td style="text-align:center;">指针 PTR</td><td style="text-align:left;">反向查询，把 IP 地址解析为主机名</td><td style="text-align:left;"><code>1.1.1.1 =&gt; www.test.com</code></td></tr><tr><td style="text-align:center;">名字服务器 NS</td><td style="text-align:left;">为一个域指定授权域名服务器，该域的所有子域也被委派给这个服务器</td><td style="text-align:left;">比如某个区域由 ns1.domain.com 进行解析</td></tr><tr><td style="text-align:center;">邮件服务器 MX</td><td style="text-align:left;">指明区域的邮件服务器及优先级</td><td style="text-align:left;">建立电子邮件服务，需要 MX 记录指向邮件服务器地址</td></tr><tr><td style="text-align:center;">别名 CNAME</td><td style="text-align:left;">指定主机名的别名，把主机名解析为另一个主机名</td><td style="text-align:left;"><code>www.test.com</code> 别名为 webserver12.test.com</td></tr></tbody></table><h2 id="dns-传输层协议" tabindex="-1"><a class="header-anchor" href="#dns-传输层协议"><span>DNS 传输层协议</span></a></h2><p>DNS 域名服务器使用的端口号是 53，并且同时支持 UDP 和 TCP 协议。为什么同时使用两种协议呢？</p><p>因为 DNS 响应报文中有一个删减标志位，用 TC 表示。当响应报文使用 UDP 封装，且报文长度大于 512 字节时，那么服务器只返回前 512 字节，同时 TC 标志位置位，表示报文进行了删减。当客户端收到 TC 置位的响应报文后，将采用 TCP 封装查询请求。DNS 服务器返回的响应报文长度大于 512 字节。</p><figure><img src="'+k+'" alt="TC标志位" tabindex="0" loading="lazy"><figcaption>TC标志位</figcaption></figure><p>UDP 报文的最大长度是 512 字节，最多可以包含 13 台根域名服务器数据，因此 IPv4 根域名服务器只能限制在 13 个，且每个服务器使用单个字母命名，也是 IPv4 根服务器是从 A~M 命名的原因。</p><figure><img src="'+C+'" alt="UDP最长报文" tabindex="0" loading="lazy"><figcaption>UDP最长报文</figcaption></figure><p>当辅助域名服务器启动时，将从主域名服务器执行区域传送。正常运行过程中，辅助域名服务器也会定时向主域名服务器进行查询，以便了解主域名服务器数据是否发送变化。如果有变化，将执行一次区域传送。因为区域传送的数据多，所以传送的数据采用 TCP 封装。</p><figure><img src="'+T+'" alt="TCP封装" tabindex="0" loading="lazy"><figcaption>TCP封装</figcaption></figure><p>因此，UDP 用于<code>client</code>和<code>server</code>的查询和响应，TCP 用于主从<code>server</code>之间的传送。</p><h2 id="dns-查询方式" tabindex="-1"><a class="header-anchor" href="#dns-查询方式"><span>DNS 查询方式</span></a></h2><p>DNS 域名解析包括两种查询方式，一种是递归查询，另一种是迭代查询。本地域名服务器向根域名服务器的查询通常是采用迭代查询。</p><h3 id="递归查询" tabindex="-1"><a class="header-anchor" href="#递归查询"><span>递归查询</span></a></h3><p>DNS 服务器如果不能直接响应解析请求，它将继续请求其它的 DNS 服务器，直到查询域名解析的结果。查询的结果可以是域名主机的 IP 地址，或者是域名无法解析。无论哪种结果，DNS 服务器都会将结果返回给客户端。</p><p>举个栗子：当本地域名服务器接收了客户端的查询请求，本地域名服务器将代表客户端来找答案，而在本地域名服务器执行工作时，客户端只是等待，直到本地域名服务器将最终查询结果返回客户端。</p><figure><img src="'+A+'" alt="递归查询" tabindex="0" loading="lazy"><figcaption>递归查询</figcaption></figure><h2 id="迭代查询" tabindex="-1"><a class="header-anchor" href="#迭代查询"><span>迭代查询</span></a></h2><p>如果 DNS 服务器查不到相应记录，会向客户端返回一个可能知道结果的域名服务器 IP 地址，由客户端继续向新的服务器发送查询请求。对域名服务器的迭代查询，只得到一个提示，则继续查询。</p><p>举个栗子：本地域名服务器发送请求到根域名服务器，根域名服务器并没有相应记录，它只是给本地域名服务器返回一个提示，引导本地域名服务器到另一台域名服务器进行查询。</p><figure><img src="'+B+'" alt="迭代查询" tabindex="0" loading="lazy"><figcaption>迭代查询</figcaption></figure><p>客户端在查询 IP 地址时，向本地域名服务器进行递归查询。如果本地域名服务器的数据库有相应数据，则直接返回相应数据。如果没有，则本地域名服务器向根域名服务器进行迭代查询。从根开始对这棵树按照顺序进行遍历，直到找到指定的域名服务器，并由这个域名服务器返回相应的数据。客户端和本地域名服务器会将收到的信息保存在缓存里，这样可以减少每次查询时的性能消耗。</p><h3 id="dns-反向查询" tabindex="-1"><a class="header-anchor" href="#dns-反向查询"><span>DNS 反向查询</span></a></h3><p>在 DNS 查询中，客户端希望知道域名对应的 IP 地址，这种查询称为正向查询。大部分的 DNS 查询都是正向查询。与正向查询对应的，是反向查询。它允许 DNS 客户端通过 IP 地址查找对应的域名。</p><figure><img src="'+M+'" alt="DNS反向查询" tabindex="0" loading="lazy"><figcaption>DNS反向查询</figcaption></figure><p>为实现反向查询，在 DNS 标准中定义了特色域<code>in-addr.arpa</code>域，并保留在域名空间中，以便执行反向查询。为创建反向域名空间，<code>in-addr.arpa</code>域中的子域是按照 IP 地址相反的顺序构造的。</p><p>举个栗子：<code>www.tsinghua.edu.cn</code>的 IP 地址是<code>166.111.4.100</code>，那么在<code>in-addr.arpa</code>域中对应的节点就是<code>100.4.111.166</code>。</p><figure><img src="'+U+'" alt="反向查询" tabindex="0" loading="lazy"><figcaption>反向查询</figcaption></figure><h2 id="dns-应用场景" tabindex="-1"><a class="header-anchor" href="#dns-应用场景"><span>DNS 应用场景</span></a></h2><h3 id="静态域名解析" tabindex="-1"><a class="header-anchor" href="#静态域名解析"><span>静态域名解析</span></a></h3><p>域名解析分为动态域名解析和静态域名解析。在解析域名时，首先采用静态域名解析，如果静态解析不成功，再采用动态域名解析。</p><p>静态域名解析是通过静态域名解析表进行的，手动建立域名和 IP 地址之间的对应关系表，该表的作用类似于 Windows 操作系统下的<code>hosts</code>文件，可以将一些常用的域名放入表中。当<code>DNS client</code>需要域名所对应的 IP 地址时，即到静态域名解析表中去查找指定的域名，从而获得所对应的 IP 地址，提高域名解析的效率。</p><figure><img src="'+F+'" alt="静态域名解析" tabindex="0" loading="lazy"><figcaption>静态域名解析</figcaption></figure><h3 id="动态域名解析" tabindex="-1"><a class="header-anchor" href="#动态域名解析"><span>动态域名解析</span></a></h3><p>动态域名解析需要专用的域名服务器（<code>DNS server</code>）运行域名解析服务器程序，提供从域名到 IP 地址的映射关系，负责接收客户端（<code>DNS client</code>）提出的域名解析请求。</p><figure><img src="'+i+'" alt="动态域名解析" tabindex="0" loading="lazy"><figcaption>动态域名解析</figcaption></figure><h2 id="dns-代理" tabindex="-1"><a class="header-anchor" href="#dns-代理"><span>DNS 代理</span></a></h2><p>在使用了 DNS 代理功能的组网中，<code>DNS client</code>将 DNS 请求报文直接发送给<code>DNS proxy</code>。<code>DNS proxy</code>会先查找本地域名解析表，如果未查询到对应的解析表项，会将 DNS 请求报文转发给 <code>DNS Server</code>，并在收到<code>DNS server</code>的应答报文后将其返回给 <code>DNS client</code>，从而实现域名解析。</p><figure><img src="'+Q+'" alt="DNS代理" tabindex="0" loading="lazy"><figcaption>DNS代理</figcaption></figure><p>因此，当 <code>DNS server</code> 的地址发生变化时，只需改变<code>DNS proxy</code>上的配置，无需逐一改变局域网内每个<code>DNS client</code>的配置，从而简化了网络管理。</p>',121)]))}const W=t(E,[["render",O],["__file","DNS详解.html.vue"]]),j=JSON.parse('{"path":"/network/DNS%E8%AF%A6%E8%A7%A3.html","title":"DNS详解","lang":"zh-CN","frontmatter":{"title":"DNS详解","date":"2025-01-15T00:00:00.000Z","tags":"network","categories":"计算机网络","order":5,"description":"我们平时在访问网站时，不使用 IP 地址，而是网站域名。但是抓包发现：交互报文是以 IP 地址进行的。那么 IP 地址是从哪来的呢？这是因为 DNS 把网站域名自动转换为 IP 地址。 报文交互抓包报文交互抓包 DNS 出现 TCP/IP 是基于 IP 地址进行通信的，但是 IP 地址不太好记。于是出现了另一种方便记忆的标识符，那就是主机名。为计算机配...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/network/DNS%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:title","content":"DNS详解"}],["meta",{"property":"og:description","content":"我们平时在访问网站时，不使用 IP 地址，而是网站域名。但是抓包发现：交互报文是以 IP 地址进行的。那么 IP 地址是从哪来的呢？这是因为 DNS 把网站域名自动转换为 IP 地址。 报文交互抓包报文交互抓包 DNS 出现 TCP/IP 是基于 IP 地址进行通信的，但是 IP 地址不太好记。于是出现了另一种方便记忆的标识符，那就是主机名。为计算机配..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T09:49:11.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T09:49:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DNS详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T09:49:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"DNS 出现","slug":"dns-出现","link":"#dns-出现","children":[]},{"level":2,"title":"DNS 介绍","slug":"dns-介绍","link":"#dns-介绍","children":[{"level":3,"title":"DNS 域名","slug":"dns-域名","link":"#dns-域名","children":[]},{"level":3,"title":"DNS 域名组成","slug":"dns-域名组成","link":"#dns-域名组成","children":[]},{"level":3,"title":"DNS 域名空间","slug":"dns-域名空间","link":"#dns-域名空间","children":[]}]},{"level":2,"title":"DNS 域名解析","slug":"dns-域名解析","link":"#dns-域名解析","children":[{"level":3,"title":"DNS 解析器","slug":"dns-解析器","link":"#dns-解析器","children":[]},{"level":3,"title":"DNS 域名服务器","slug":"dns-域名服务器","link":"#dns-域名服务器","children":[]},{"level":3,"title":"DNS 域名服务器类型","slug":"dns-域名服务器类型","link":"#dns-域名服务器类型","children":[]},{"level":3,"title":"DNS 域名完整解析过程","slug":"dns-域名完整解析过程","link":"#dns-域名完整解析过程","children":[]}]},{"level":2,"title":"DNS 记录类型","slug":"dns-记录类型","link":"#dns-记录类型","children":[]},{"level":2,"title":"DNS 传输层协议","slug":"dns-传输层协议","link":"#dns-传输层协议","children":[]},{"level":2,"title":"DNS 查询方式","slug":"dns-查询方式","link":"#dns-查询方式","children":[{"level":3,"title":"递归查询","slug":"递归查询","link":"#递归查询","children":[]}]},{"level":2,"title":"迭代查询","slug":"迭代查询","link":"#迭代查询","children":[{"level":3,"title":"DNS 反向查询","slug":"dns-反向查询","link":"#dns-反向查询","children":[]}]},{"level":2,"title":"DNS 应用场景","slug":"dns-应用场景","link":"#dns-应用场景","children":[{"level":3,"title":"静态域名解析","slug":"静态域名解析","link":"#静态域名解析","children":[]},{"level":3,"title":"动态域名解析","slug":"动态域名解析","link":"#动态域名解析","children":[]}]},{"level":2,"title":"DNS 代理","slug":"dns-代理","link":"#dns-代理","children":[]}],"git":{"createdTime":1730426129000,"updatedTime":1745401751000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":2}]},"readingTime":{"minutes":19.63,"words":5890},"filePathRelative":"network/DNS详解.md","localizedDate":"2025年1月15日","autoDesc":true}');export{W as comp,j as data};
