import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,o as p}from"./app-BAoNGAQX.js";const e="/wsq-blog/assets/1-Ok_Zmoh2.png",o="/wsq-blog/assets/3-CMIc6iLt.png",t={};function c(r,s){return p(),n("div",null,s[0]||(s[0]=[l('<p>Ansible 2.9.x。</p><h2 id="ansible-简介" tabindex="-1"><a class="header-anchor" href="#ansible-简介"><span>ansible 简介</span></a></h2><p>Ansible 是一种自动化运维工具，基于 Paramiko 开发的，并且基于模块化工作，Ansible 是一种集成 IT 系统的配置管理、应用部署、执行特定任务的开源平台，它是基于 Python 语言，由 Paramiko 和 PyYAML 两个关键模块构建。集合了众多运维工具的优点，实现了批量系统配置、批量程序部署、批量运行命令等功能。</p><p>Ansible 是基于模块工作的，本身没有批量部署的能力，真正具有批量部署的是 Ansible 所运行的模块，Ansible 只是提供一种框架。Ansible 不需要在远程主机上安装 Client、Agents，因为它们是基于 SSH 来和远程主机通讯的。</p><p>Ansible 的很多模块在执行时都会先判断目标节点是否要执行任务，所以，可以放心大胆地让 Ansible 去执行任务，重复执行某个任务绝大多数时候不会产生任何副作用。</p><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><ul><li>部署简单，只需在主控端部署 Ansible 环境，被控端无需做任何操作；</li><li>默认使用SSH协议对设备进行管理；</li><li>有大量常规运维操作模块，可实现日常绝大部分操作；</li><li>配置简单、功能强大、扩展性强；</li><li>支持 API 及自定义模块，可通过 Python 轻松扩展；</li><li>通过 Playbooks 来定制强大的配置、状态管理；</li><li>轻量级，无需在客户端安装agent，更新时，只需在操作机上进行一次更新即可；</li><li>提供一个功能强大、操作性强的Web管理界面和REST API接口——AWX平台。</li></ul><h3 id="ansible-架构" tabindex="-1"><a class="header-anchor" href="#ansible-架构"><span>ansible 架构</span></a></h3><figure><img src="'+e+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从上图可以了解到 Ansible 由以下部分组成：</p><ul><li>核心：Ansible</li><li>核心模块（<code>Core Modules</code>）：这些都是 Ansible 自带的模块</li><li>扩展模块（<code>Custom Modules</code>）：如果核心模块不足以完成某种功能，可以添加扩展模块</li><li>插件（<code>Plugins</code>）：完成模块功能的补充</li><li>剧本（<code>Playbooks</code>）：Ansible 的任务配置文件，将多个任务定义在剧本中，由 Ansible 完成执行</li><li>连接插件（<code>Connectior Plugins</code>）：Ansible 基于连接插件连接到各个主机上，虽然 Ansible 是使用 SSH 连接到各个主机的，但是它还支持其他的连接方法，所以需要有连接插件</li><li>主机清单（<code>Host Inventory</code>）：定义 Ansible 管理的主机</li></ul><h2 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h2><p>安装有两种方式，<code>yum</code>安装和<code>pip</code>程序安装。</p><h3 id="使用pip安装" tabindex="-1"><a class="header-anchor" href="#使用pip安装"><span>使用pip安装</span></a></h3><p>首先，我们需要安装一个<code>python-pip</code>包，安装完成以后，则直接使用<code>pip</code>命令来安装我们的包，具体操作过程如下：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">yum</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> python-pip</span></span>
<span class="line"><span style="color:#FFB757;">pip</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> ansible</span></span></code></pre></div><h3 id="使用yum安装" tabindex="-1"><a class="header-anchor" href="#使用yum安装"><span>使用yum安装</span></a></h3><p><code>yum</code>安装是我们很熟悉的安装方式了。我们需要先安装一个<code>epel-release</code>包，然后再安装我们的<code>ansible</code>即可。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">wget</span><span style="color:#91CBFF;"> -O</span><span style="color:#ADDCFF;"> /etc/yum.repos.d/CentOS-Base.repo</span><span style="color:#ADDCFF;"> http://mirrors.aliyun.com/repo/Centos-7.repo</span></span>
<span class="line"><span style="color:#FFB757;">yum</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> epel-release</span><span style="color:#91CBFF;"> -y</span></span>
<span class="line"><span style="color:#FFB757;">yum</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> ansible</span><span style="color:#ADDCFF;"> –y</span></span></code></pre></div><h2 id="相关文件" tabindex="-1"><a class="header-anchor" href="#相关文件"><span>相关文件</span></a></h2><p>Ansible 是一款自动化运维工具，它并不是一个服务。 因此，它没有对应的 Service 文件。Ansible 无需长期运行，只在需要使用时运行其二进制文件即可。（安装完成后，直接使用即可）</p><p>安装目录如下(<code>yum</code>安装)：</p><table><thead><tr><th>目录</th><th>说明</th></tr></thead><tbody><tr><td>/etc/ansible/</td><td>配置文件目录</td></tr><tr><td>/etc/ansible/ansible.cfg</td><td>主配置文件</td></tr><tr><td>/etc/ansible/hosts</td><td>主机清单</td></tr><tr><td>/etc/ansible/roles</td><td>存放角色的目录</td></tr><tr><td>/usr/bin/</td><td>执行文件目录</td></tr><tr><td>/usr/lib/pythonX.X/site-packages/ansible/</td><td>Lib库依赖目录</td></tr><tr><td>/usr/share/doc/ansible-X.X.X/</td><td>Help文档目录</td></tr><tr><td>/usr/share/man/man1/</td><td>Man文档目录</td></tr></tbody></table><h2 id="主配置文件" tabindex="-1"><a class="header-anchor" href="#主配置文件"><span>主配置文件</span></a></h2><p>Ansible 的配置文件可以放在多个不同地方，优先级从高到低顺序如下：</p><ol><li>环境变量<code>ANSIBLE_CONFIG</code>指向的路径文件(<code>export ANSIBLE_CONFIG=/etc/ansible.cfg</code>)</li><li>项目目录下的<code>ansible.cfg</code></li><li><code>~/.ansible.cfg</code></li><li><code>/etc/ansible.cfg</code>(默认)</li></ol><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 验证</span><span style="color:#ADDCFF;"> Ansible</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible --version</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 2.9.6</span></span>
<span class="line"><span style="color:#FFB757;">  config</span><span style="color:#ADDCFF;"> file</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> /etc/ansible/ansible.cfg</span></span>
<span class="line"><span style="color:#FFB757;">  configured</span><span style="color:#ADDCFF;"> module</span><span style="color:#ADDCFF;"> search</span><span style="color:#ADDCFF;"> path</span><span style="color:#ADDCFF;"> =</span><span style="color:#F0F3F6;"> [</span><span style="color:#ADDCFF;">&#39;/root/.ansible/plugins/modules&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;/usr/share/ansible/plugins/modules&#39;]</span></span>
<span class="line"><span style="color:#FFB757;">  ansible</span><span style="color:#ADDCFF;"> python</span><span style="color:#ADDCFF;"> module</span><span style="color:#ADDCFF;"> location</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> /usr/lib/python3/dist-packages/ansible</span></span>
<span class="line"><span style="color:#FFB757;">  executable</span><span style="color:#ADDCFF;"> location</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> /usr/bin/ansible</span></span>
<span class="line"><span style="color:#FFB757;">  python</span><span style="color:#ADDCFF;"> version</span><span style="color:#ADDCFF;"> =</span><span style="color:#91CBFF;"> 3.8.10</span><span style="color:#F0F3F6;"> (default, </span><span style="color:#ADDCFF;">May</span><span style="color:#91CBFF;"> 26</span><span style="color:#ADDCFF;"> 2023,</span><span style="color:#ADDCFF;"> 14:05:08</span><span style="color:#F0F3F6;">) [GCC 9.4.0]</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 复制</span><span style="color:#ADDCFF;"> Ansible</span><span style="color:#ADDCFF;"> 配置文件至当前目录</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] cp /etc/ansible/ansible.cfg </span><span style="color:#91CBFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 再次验证</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible --version</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#91CBFF;"> 2.9.6</span></span>
<span class="line"><span style="color:#FFB757;">    config</span><span style="color:#ADDCFF;"> file</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> /root/ansible.cfg</span><span style="color:#BDC4CC;">        # 注意配置文件路径优先级为当前目录的 ansible.cfg</span></span>
<span class="line"><span style="color:#FFB757;">    configured</span><span style="color:#ADDCFF;"> module</span><span style="color:#ADDCFF;"> search</span><span style="color:#ADDCFF;"> path</span><span style="color:#ADDCFF;"> =</span><span style="color:#F0F3F6;"> [</span><span style="color:#ADDCFF;">&#39;/root/.ansible/plugins/modules&#39;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&#39;/usr/share/ansible/plugins/modules&#39;]</span></span>
<span class="line"><span style="color:#FFB757;">    ansible</span><span style="color:#ADDCFF;"> python</span><span style="color:#ADDCFF;"> module</span><span style="color:#ADDCFF;"> location</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> /usr/lib/python3/dist-packages/ansible</span></span>
<span class="line"><span style="color:#FFB757;">    executable</span><span style="color:#ADDCFF;"> location</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> /usr/bin/ansible</span></span>
<span class="line"><span style="color:#FFB757;">    python</span><span style="color:#ADDCFF;"> version</span><span style="color:#ADDCFF;"> =</span><span style="color:#91CBFF;"> 3.8.10</span><span style="color:#F0F3F6;"> (default, </span><span style="color:#ADDCFF;">May</span><span style="color:#91CBFF;"> 26</span><span style="color:#ADDCFF;"> 2023,</span><span style="color:#ADDCFF;"> 14:05:08</span><span style="color:#F0F3F6;">) [GCC 9.4.0]</span></span></code></pre></div><p>Ansible 的默认配置文件<code>/etc/ansible/ansible.cfg</code>有许多参数，一些常见的参数：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>[defaults]</span></span>
<span class="line"><span># inventory     = /etc/ansible/hosts    // 主机列表配置文件</span></span>
<span class="line"><span># library = /usr/share/my_modules       // 库文件存放目录</span></span>
<span class="line"><span># remote_tmp = $HOME/.ansible/tmp       // 临时py命令文件存放在远程主机目录</span></span>
<span class="line"><span># local_tmp     = $HOME/.ansible/tmp    // 本机的临时命令执行目录</span></span>
<span class="line"><span># forks         = 5                     // 默认并发数</span></span>
<span class="line"><span># sudo_user     = root                  // 默认 sudo 用户</span></span>
<span class="line"><span># ask_sudo_pass = True                  </span></span>
<span class="line"><span># ask_pass     = True                  // 每次执行 ansible 命令是否询问 ssh 密码</span></span>
<span class="line"><span># remote_port   = 22                   // 指定连接被管节点的管理端口，默认为22端口</span></span>
<span class="line"><span># host_key_checking = False            // 检查对应服务器的 host_key, 建议取消此行注释, 实现第一次连接自动信任目标主机</span></span>
<span class="line"><span># log_path=/var/log/ansible.log        // 日志文件, 建议启用</span></span>
<span class="line"><span># module_name = command                // 默认模块, 可以修改为 shell 模块</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[privilege_escalation]                 # 如果是普通用户则需要配置提权</span></span>
<span class="line"><span># become=True</span></span>
<span class="line"><span># become_method=sudo</span></span>
<span class="line"><span># become_user=root</span></span>
<span class="line"><span># become_ask_pass=False</span></span></code></pre></div><h2 id="主机清单" tabindex="-1"><a class="header-anchor" href="#主机清单"><span>主机清单</span></a></h2><p>Ansible 的主要功能在于批量主机操作，为了便捷地使用其中的部分主机，可以在<code>Inventory</code>主机清单文件中将其分组组织。</p><p>默认的<code>inventory file</code>为<code>/etc/ansible/hosts</code>，当然也可以自定义，然后使用<code>-i</code>指定<code>inventory</code>文件位置。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>注意： 生产环境建议在每个项目目录下创建项目独立的 hosts 文件</p></div><h3 id="主机清单文件格式" tabindex="-1"><a class="header-anchor" href="#主机清单文件格式"><span>主机清单文件格式</span></a></h3><ul><li><code>inventory</code>文件遵循 INI 文件风格</li><li>中括号中的字符为组名。可以将同一个主机同时归并到多个不同的组中</li><li>此外，当如若目标主机使用了非默认的 SSH 端口，还可以在主机名称之后使用冒号加端口号来标明</li><li>如果主机名称遵循相似的命名模式，还可以使用列表的方式标识各主机</li></ul><h3 id="主机清单参数" tabindex="-1"><a class="header-anchor" href="#主机清单参数"><span>主机清单参数</span></a></h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>ansible_ssh_host</td><td>将要连接的远程主机名，与你想要设定的主机的别名不同的话,可通过此变量设置</td></tr><tr><td>ansible_ssh_port</td><td>ssh端口号，如果不是默认的端口号，通过此变量设置</td></tr><tr><td>ansible_ssh_user</td><td>默认的 ssh 用户名</td></tr><tr><td>ansible_ssh_pass</td><td>ssh 密码</td></tr><tr><td>ansible_sudo_pass</td><td>sudo 密码</td></tr><tr><td>ansible_connection</td><td>与主机的连接类型，比如:local、ssh 或 paramiko</td></tr><tr><td>ansible_ssh_private_key_file</td><td>ssh 使用的私钥文件</td></tr><tr><td>ansible_shell_type</td><td>目标系统的 shell 类型，默认情况下，命令的执行使用 &#39;sh&#39; 语法,可设置为 &#39;csh&#39; 或 &#39;fish&#39;</td></tr></tbody></table><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span># vim /etc/ansible/hosts ( 默认主机清单文件 )</span></span>
<span class="line"><span></span></span>
<span class="line"><span>172.16.10.101       # 被管理主机名或 IP 地址</span></span>
<span class="line"><span>[webservers]        # 将被管理主机分类</span></span>
<span class="line"><span>172.16.10.102:122   # 目标主机使用了非默认的 SSH 端口</span></span>
<span class="line"><span>bar.example.com</span></span>
<span class="line"><span>www[1:100].example.com</span></span>
<span class="line"><span>10.0.0.[1:100]</span></span>
<span class="line"><span>qkx1 ansible_ssh_port=5555 ansible_ssh_host=192.168.1.50</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[dbservers]</span></span>
<span class="line"><span>172.16.10.103    # 仅填写主机 IP 地址也可以</span></span>
<span class="line"><span>two.example.com</span></span>
<span class="line"><span>three.example.com</span></span>
<span class="line"><span>db[1:3].magedu.com    # 可以使用列表的方式标识主机</span></span>
<span class="line"><span>db-[a:f].example.com</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>[targets]</span></span>
<span class="line"><span>localhost              ansible_connection=local</span></span>
<span class="line"><span>other1.example.com     ansible_connection=ssh        ansible_ssh_user=mpdehaan</span></span>
<span class="line"><span>other2.example.com     ansible_connection=ssh        ansible_ssh_user=mdehaan</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 定义 testsrvs 组包括两个其它分组, &quot;实现组嵌套&quot;</span></span>
<span class="line"><span>[testsrvs:children] </span></span>
<span class="line"><span>webservers</span></span>
<span class="line"><span>dbservers</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[local]</span></span>
<span class="line"><span>10.0.0.8 ansible_connection=local    # 指定本地连接, 无需 ssh 配置</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>[websrvs]    # 也可以在被控主机行添加如下信息 ( 不推荐, 会暴露主机安全 )</span></span>
<span class="line"><span>web01 ansible_ssh_host=10.0.0.101  # 执行 ansible 命令时显示别名, 如 web01</span></span>
<span class="line"><span>10.0.0.7 ansible_connection=ssh ansible_ssh_port=2222 ansible_ssh_user=wang ansible_ssh_password=magedu</span></span>
<span class="line"><span>10.0.0.6 ansible_connection=ssh ansible_ssh_user=root ansible_ssh_password=123456</span></span></code></pre></div><h3 id="主机变量" tabindex="-1"><a class="header-anchor" href="#主机变量"><span>主机变量</span></a></h3><p>这些变量定义后可在 playbooks 中使用：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>[test]</span></span>
<span class="line"><span>host1 http_port=80 maxRequestsPerChild=808</span></span>
<span class="line"><span>host2 http_port=303 maxRequestsPerChild=909</span></span></code></pre></div><h3 id="组的变量" tabindex="-1"><a class="header-anchor" href="#组的变量"><span>组的变量</span></a></h3><p>也可以定义属于整个组的变量：</p><div class="language-" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span>[test]</span></span>
<span class="line"><span>host1</span></span>
<span class="line"><span>host2</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[test:vars]</span></span>
<span class="line"><span>ntp_server=ntp.example.com</span></span>
<span class="line"><span>proxy=proxy.example.com</span></span></code></pre></div><h2 id="ansible-相关工具" tabindex="-1"><a class="header-anchor" href="#ansible-相关工具"><span>Ansible 相关工具</span></a></h2><table><thead><tr><th>工具</th><th>说明</th></tr></thead><tbody><tr><td>/usr/bin/ansible</td><td>AD-Hoc 临时命令执行工具</td></tr><tr><td>/usr/bin/ansible-doc</td><td>查看配置文档，模块功能查看工具，相当于 man</td></tr><tr><td>/usr/bin/ansible-galaxy</td><td>下载/上传优秀代码或 Roles 模块的官网平台</td></tr><tr><td>/usr/bin/ansible-playbook</td><td>定制自动化任务，编排剧本工具，相当于脚本</td></tr><tr><td>/usr/bin/ansible-pull</td><td>远程执行命令的工具，拉取配置而非推送配置</td></tr><tr><td>/usr/bin/ansible-vault</td><td>文件加密工具</td></tr><tr><td>/usr/bin/ansible-console</td><td>基于 Console 界面与用户交互的执行工具</td></tr></tbody></table><p>利用 Ansible 实现管理的主要方式：</p><ul><li>Ansible Ad-Hoc：即利用<code>ansible</code>命令，主要用于临时命令使用场景</li><li>Ansible PlayBook：主要用于长期规划好的，大型项目的场景，需要有前期的规划过程</li></ul><h3 id="ansible-使用前准备工作-建议" tabindex="-1"><a class="header-anchor" href="#ansible-使用前准备工作-建议"><span>Ansible 使用前准备工作（建议）：</span></a></h3><p>Ansible 相关工具大多数是通过 SSH 协议，实现对远程主机的配置管理、应用部署、任务执行等功能。因此，使用此工具前，先配置 Ansible 主控端能基于密钥认证的方式联系各个被管理节点。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 解决: 远程被控端主机时, 自动回复 yes 选项</span></span>
<span class="line"><span style="color:#BDC4CC;"># 第一次远程连接某个主机时, 对方主机会默认询问你是否 xxx, 输入 yes 后, 默认会将远程主机公钥写入本机 known_hosts</span></span>
<span class="line"><span style="color:#FFB757;">1</span><span style="color:#F0F3F6;">) 修改 SSH 客户端配置文件</span></span>
<span class="line"><span style="color:#FFB757;">vim</span><span style="color:#ADDCFF;"> /etc/ssh/ssh_config</span></span>
<span class="line"><span style="color:#FFB757;">StrictHostKeyChecking</span><span style="color:#ADDCFF;"> no</span><span style="color:#ADDCFF;">   //</span><span style="color:#ADDCFF;"> &quot;自动回复 yes 选项&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 验证 known_hosts 文件</span></span>
<span class="line"><span style="color:#FFB757;">cat</span><span style="color:#ADDCFF;"> ~/.ssh/known_hosts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">2</span><span style="color:#F0F3F6;">) 或者, 修改 Ansible 配置文件</span></span>
<span class="line"><span style="color:#FFB757;">vim</span><span style="color:#ADDCFF;"> /etc/ansible/ansible.cfg</span></span>
<span class="line"><span style="color:#FFB757;">host_key_checking</span><span style="color:#ADDCFF;"> =</span><span style="color:#ADDCFF;"> False</span><span style="color:#ADDCFF;">   //</span><span style="color:#ADDCFF;"> &quot;建议取消该行注释&quot;</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 基于密码认证</span><span style="color:#F0F3F6;"> ( </span><span style="color:#ADDCFF;">&quot;不常用&quot;</span><span style="color:#F0F3F6;"> )</span></span>
<span class="line"><span style="color:#BDC4CC;"># 注意: websrvs 组的所有主机密码 必须都是 123456</span></span>
<span class="line"><span style="color:#BDC4CC;"># 如果 websrvs 组的某个主机密码不是 123456, 则无法连接成功</span></span>
<span class="line"><span style="color:#BDC4CC;"># 因此推荐使用 Key 认证 !!!</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span><span style="color:#91CBFF;"> -k</span></span>
<span class="line"><span style="color:#FFB757;">SSH</span><span style="color:#ADDCFF;"> password:</span><span style="color:#91CBFF;"> 123456</span></span></code></pre></div><p>利用<code>sshpass</code>批量实现基于<code>key</code>验证脚本 1</p><p>这个脚本的作用是批量向指定的 IP 地址列表传送 SSH 公钥，并且在执行过程中忽略对远程主机主机密钥的严格检查。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">//</span><span style="color:#ADDCFF;"> 修改下面一行</span><span style="color:#F0F3F6;"> ( </span><span style="color:#ADDCFF;">允许连接新的主机时,不需要手动确认密钥</span><span style="color:#F0F3F6;"> )</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] vim /etc/ssh/ssh_config</span></span>
<span class="line"><span style="color:#FFB757;">StrictHostKeyChecking</span><span style="color:#ADDCFF;"> no</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] vim push_ssh_key.sh</span></span>
<span class="line"><span style="color:#BDC4CC;">#!/bin/bash</span></span>
<span class="line"><span style="color:#F0F3F6;">IPLIST</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">&quot;</span></span>
<span class="line"><span style="color:#ADDCFF;">192.168.80.8</span></span>
<span class="line"><span style="color:#ADDCFF;">192.168.80.18</span></span>
<span class="line"><span style="color:#ADDCFF;">192.168.80.28&quot;</span></span>
<span class="line"><span style="color:#FFB757;">rpm</span><span style="color:#91CBFF;"> -q</span><span style="color:#ADDCFF;"> sshpass</span><span style="color:#F0F3F6;"> &amp;</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> /dev/null </span><span style="color:#FF9492;">||</span><span style="color:#FFB757;"> yum</span><span style="color:#91CBFF;"> -y</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> sshpass</span><span style="color:#F0F3F6;">  </span></span>
<span class="line"><span style="color:#F0F3F6;">[ </span><span style="color:#FF9492;">-f</span><span style="color:#F0F3F6;"> /root/.ssh/id_rsa ] </span><span style="color:#FF9492;">||</span><span style="color:#FFB757;"> ssh-keygen</span><span style="color:#91CBFF;"> -f</span><span style="color:#ADDCFF;"> /root/.ssh/id_rsa</span><span style="color:#91CBFF;">  -P</span><span style="color:#ADDCFF;"> &#39;&#39;</span><span style="color:#ADDCFF;"> export</span><span style="color:#ADDCFF;"> SSHPASS=</span><span style="color:#91CBFF;">123456</span><span style="color:#BDC4CC;">  # 主机密码</span></span>
<span class="line"><span style="color:#FF9492;">for</span><span style="color:#F0F3F6;"> IP </span><span style="color:#FF9492;">in</span><span style="color:#F0F3F6;"> $IPLIST;</span><span style="color:#FF9492;">do</span></span>
<span class="line"><span style="color:#F0F3F6;">    {</span></span>
<span class="line"><span style="color:#FFB757;">    sshpass</span><span style="color:#91CBFF;"> -e</span><span style="color:#ADDCFF;"> ssh-copy-id</span><span style="color:#91CBFF;"> -o</span><span style="color:#ADDCFF;"> StrictHostKeyChecking=no</span><span style="color:#F0F3F6;"> $IP </span></span>
<span class="line"><span style="color:#F0F3F6;">    }&amp;</span></span>
<span class="line"><span style="color:#FF9492;">done</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#91CBFF;">wait</span></span></code></pre></div><p>实现基于 key 验证的脚本 2</p><p>这段脚本主要用于在局域网中扫描活动的主机，然后通过 SSH 在这些主机之间传递 SSH 密钥以便后续相互访问时不需要手动确认密钥。</p><p>该脚本会实现主机之间相互免密认证。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;">#!/bin/bash</span></span>
<span class="line"><span style="color:#F0F3F6;">PASS</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">redhat</span><span style="color:#BDC4CC;">        # 主机密码</span></span>
<span class="line"><span style="color:#BDC4CC;"># 设置网段最后的地址, 4-255 之间, 越小扫描越快</span></span>
<span class="line"><span style="color:#F0F3F6;">END</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">254</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">IP</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;">ip</span><span style="color:#ADDCFF;"> a s eth0 </span><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> awk</span><span style="color:#91CBFF;"> -F</span><span style="color:#ADDCFF;">&#39;[ /]+&#39; &#39;NR==3{print $3}&#39;\`</span><span style="color:#BDC4CC;">    # 注意网卡名称</span></span>
<span class="line"><span style="color:#F0F3F6;">NET</span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;">\${IP</span><span style="color:#FF9492;">%</span><span style="color:#F0F3F6;">.</span><span style="color:#FF9492;">*</span><span style="color:#F0F3F6;">}</span><span style="color:#ADDCFF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">rm</span><span style="color:#91CBFF;"> -f</span><span style="color:#ADDCFF;"> /root/.ssh/id_rsa</span></span>
<span class="line"><span style="color:#F0F3F6;">[ </span><span style="color:#FF9492;">-e</span><span style="color:#F0F3F6;"> ./SCANIP.log ] &amp;&amp; </span><span style="color:#FFB757;">rm</span><span style="color:#91CBFF;"> -f</span><span style="color:#ADDCFF;"> SCANIP.log</span></span>
<span class="line"><span style="color:#FF9492;">for</span><span style="color:#F0F3F6;">((i</span><span style="color:#FF9492;">=</span><span style="color:#91CBFF;">3</span><span style="color:#F0F3F6;">;i</span><span style="color:#FF9492;">&lt;=</span><span style="color:#ADDCFF;">&quot;</span><span style="color:#F0F3F6;">$END</span><span style="color:#ADDCFF;">&quot;</span><span style="color:#F0F3F6;">;i</span><span style="color:#FF9492;">++</span><span style="color:#F0F3F6;">));</span><span style="color:#FF9492;">do</span></span>
<span class="line"><span style="color:#FFB757;">ping</span><span style="color:#91CBFF;"> -c</span><span style="color:#91CBFF;"> 1</span><span style="color:#91CBFF;"> -w</span><span style="color:#91CBFF;"> 1</span><span style="color:#F0F3F6;">  \${NET}$i &amp;</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> /dev/null  &amp;&amp; </span><span style="color:#91CBFF;">echo</span><span style="color:#ADDCFF;"> &quot;\${</span><span style="color:#F0F3F6;">NET</span><span style="color:#ADDCFF;">}</span><span style="color:#F0F3F6;">$i</span><span style="color:#ADDCFF;">&quot;</span><span style="color:#FF9492;"> &gt;&gt;</span><span style="color:#ADDCFF;"> SCANIP.log</span><span style="color:#F0F3F6;"> &amp;</span></span>
<span class="line"><span style="color:#FF9492;">done</span></span>
<span class="line"><span style="color:#91CBFF;">wait</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">ssh-keygen</span><span style="color:#91CBFF;"> -P</span><span style="color:#ADDCFF;"> &quot;&quot;</span><span style="color:#91CBFF;"> -f</span><span style="color:#ADDCFF;"> /root/.ssh/id_rsa</span></span>
<span class="line"><span style="color:#FFB757;">rpm</span><span style="color:#91CBFF;"> -q</span><span style="color:#ADDCFF;"> sshpass</span><span style="color:#FF9492;"> ||</span><span style="color:#FFB757;"> yum</span><span style="color:#91CBFF;"> -y</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> sshpass</span></span>
<span class="line"><span style="color:#FFB757;">sshpass</span><span style="color:#91CBFF;"> -p</span><span style="color:#F0F3F6;"> $PASS </span><span style="color:#ADDCFF;">ssh-copy-id</span><span style="color:#91CBFF;"> -o</span><span style="color:#ADDCFF;"> StrictHostKeyChecking=no</span><span style="color:#F0F3F6;"> $IP </span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">AliveIP</span><span style="color:#FF9492;">=</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">\`</span><span style="color:#FFB757;">cat</span><span style="color:#ADDCFF;"> SCANIP.log\`</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">for</span><span style="color:#F0F3F6;"> n </span><span style="color:#FF9492;">in</span><span style="color:#F0F3F6;"> \${AliveIP[</span><span style="color:#FF9492;">*</span><span style="color:#F0F3F6;">]};</span><span style="color:#FF9492;">do</span></span>
<span class="line"><span style="color:#FFB757;">sshpass</span><span style="color:#91CBFF;"> -p</span><span style="color:#F0F3F6;"> $PASS </span><span style="color:#ADDCFF;">scp</span><span style="color:#91CBFF;"> -o</span><span style="color:#ADDCFF;"> StrictHostKeyChecking=no</span><span style="color:#91CBFF;"> -r</span><span style="color:#ADDCFF;"> /root/.ssh</span><span style="color:#ADDCFF;"> root@</span><span style="color:#F0F3F6;">\${n}</span><span style="color:#ADDCFF;">:</span></span>
<span class="line"><span style="color:#FF9492;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 把 .ssh/known_hosts 拷贝到所有主机, 使它们第一次互相访问时不需要输入回车</span></span>
<span class="line"><span style="color:#FF9492;">for</span><span style="color:#F0F3F6;"> n </span><span style="color:#FF9492;">in</span><span style="color:#F0F3F6;"> \${AliveIP[</span><span style="color:#FF9492;">*</span><span style="color:#F0F3F6;">]};</span><span style="color:#FF9492;">do</span></span>
<span class="line"><span style="color:#FFB757;">scp</span><span style="color:#ADDCFF;"> /root/.ssh/known_hosts</span><span style="color:#F0F3F6;"> \${n}</span><span style="color:#ADDCFF;">:.ssh/</span></span>
<span class="line"><span style="color:#FF9492;">done</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos7 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] bash push_ssh_key.sh</span></span></code></pre></div><h3 id="ansible-ad-hoc" tabindex="-1"><a class="header-anchor" href="#ansible-ad-hoc"><span>ansible Ad-Hoc</span></a></h3><p>Ansible 的执行方式的主要工具就是<code>ansible</code>（专业名词：Ad-Hoc）。用于执行一次性的任务，临时任务。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 格式</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#FF9492;"> &lt;</span><span style="color:#ADDCFF;">host-patter</span><span style="color:#F0F3F6;">n</span><span style="color:#FF9492;">&gt;</span><span style="color:#F0F3F6;"> [-m </span><span style="color:#ADDCFF;">module_name]</span><span style="color:#F0F3F6;"> [-a </span><span style="color:#ADDCFF;">args]</span></span></code></pre></div><p>也可以通过<code>ansible -h</code>来查看帮助，比较常用的选项：</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>-a MODULE_ARGS</td><td>模块的参数</td></tr><tr><td>-k，--ask-pass</td><td>提示输入 ssh 连接密码, 默认 Key 验证</td></tr><tr><td>-K, --ask-become-pass</td><td>提示输入 sudo 时的口令</td></tr><tr><td>--ask-vault-pass</td><td>假设我们设定了加密的密码，则用该选项进行访问</td></tr><tr><td>-C, --check</td><td>模拟运行环境并进行预运行，可以进行查错测试</td></tr><tr><td>-f FORKS, --forks FORKS</td><td>指定并发同时执行 ansible 任务的主机数，默认为5</td></tr><tr><td>-i INVENTORY</td><td>指定主机清单的路径，默认为/etc/ansible/hosts</td></tr><tr><td>--list-hosts</td><td>显示主机列表, 可简写 --list</td></tr><tr><td>-m MODULE_NAME</td><td>执行模块的名字，默认使用 command 模块，所以如果是只执行单一命令可以不用 -m 参数</td></tr><tr><td>-o</td><td>压缩输出，尝试将所有结果在一行输出，一般针对收集工具使用</td></tr><tr><td>-S</td><td>用 su 命令</td></tr><tr><td>-R SU_USER</td><td>指定 su 的用户，默认为 root 用户</td></tr><tr><td>-s</td><td>用 sudo 命令</td></tr><tr><td>-U SUDO_USER</td><td>指定 sudo 到哪个用户，默认为 root 用户</td></tr><tr><td>-T, --timeout=TIMEOUT</td><td>指定 ssh 默认超时时间，默认为10s，也可在配置文件中修改</td></tr><tr><td>-u, --user=REMOTE_USER</td><td>远程用户，默认为 root 用户</td></tr><tr><td>-v, -vv, -vvv</td><td>查看详细信息</td></tr><tr><td>-b, --become</td><td>代替旧版的 sudo 切换</td></tr><tr><td>--become-user=USERNAME</td><td>指定 sudo 的 runas 用户, 默认为 root</td></tr></tbody></table><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 特殊案例 ( localhost: 代表本机)</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> localhost</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"><span style="color:#BDC4CC;"># 列出 Ansible 可控制的所有主机</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> --list-hosts</span></span>
<span class="line"><span style="color:#BDC4CC;"># 列出 Ansible 可控制的 websrvs 组主机</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> websrvs</span><span style="color:#91CBFF;"> --list-hosts</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 先在被控制端 授权普通用户 sudo 权限</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] useradd wangj</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] echo 123456 </span><span style="color:#FF9492;">|</span><span style="color:#FFB757;"> passwd</span><span style="color:#91CBFF;"> --stdin</span><span style="color:#ADDCFF;"> wangj</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] vim /etc/sudoers</span></span>
<span class="line"><span style="color:#FFB757;">wangj</span><span style="color:#ADDCFF;">    ALL=</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">ALL</span><span style="color:#F0F3F6;">) </span><span style="color:#ADDCFF;">NOPASSWD:</span><span style="color:#ADDCFF;"> ALL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 以 wangj 普通用户身份连接主机, 并利用 sudo 授权 root 权限执行 whoami 命令</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible 192.168.80.8 -m shell -a </span><span style="color:#ADDCFF;">&#39;whoami&#39;</span><span style="color:#F0F3F6;"> -u wangj -k -b --become-user</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">root</span></span>
<span class="line"><span style="color:#FFB757;">SSH</span><span style="color:#ADDCFF;"> password:</span><span style="color:#ADDCFF;">        //</span><span style="color:#ADDCFF;"> 输入远程主机</span><span style="color:#ADDCFF;"> wangj</span><span style="color:#ADDCFF;"> 用户</span><span style="color:#ADDCFF;"> ssh</span><span style="color:#ADDCFF;"> 连接密码</span></span>
<span class="line"><span style="color:#FFB757;">10.0.0.8</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> CHANGED</span><span style="color:#FF9492;"> |</span><span style="color:#F0F3F6;"> rc</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">0</span><span style="color:#F0F3F6;"> &gt;&gt;</span></span>
<span class="line"><span style="color:#FFB757;">root</span></span></code></pre></div><h4 id="host-pattern" tabindex="-1"><a class="header-anchor" href="#host-pattern"><span>host-pattern</span></a></h4><p>用于匹配被控制的主机列表。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># all：表示所有 Inventory 中的所有主机</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> all</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"><span style="color:#BDC4CC;"># *：通配符</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &quot;*&quot;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> 192.168.1.</span><span style="color:#91CBFF;">*</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 或 关系</span></span>
<span class="line"><span style="color:#BDC4CC;"># websrvs 或 dbsrvs 主机</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &quot;websrvs:dbsrvs&quot;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"><span style="color:#BDC4CC;"># 192.168.80.18 或 192.168.80.28 主机</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &quot;192.168.80.18:192.168.80.28&quot;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 逻辑 与</span></span>
<span class="line"><span style="color:#BDC4CC;"># 在 websrvs 组并且在 dbsrvs 组中的主机</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &quot;websrvs:&amp;dbsrvs&quot;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 逻辑 非</span></span>
<span class="line"><span style="color:#BDC4CC;"># 在 websrvs 组, 但不在 dbsrvs 组中的主机</span></span>
<span class="line"><span style="color:#BDC4CC;"># 注意: 此处为单引号</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &#39;websrvs:!dbsrvs&#39;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 综合 逻辑</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &#39;websrvs:dbsrvs:&amp;appsrvs:!ftpsrvs&#39;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 正则 表达式</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &quot;websrvs:dbsrvs&quot;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"><span style="color:#FFB757;">ansible</span><span style="color:#ADDCFF;"> &quot;~(web|db).*\\.magedu\\.com&quot;</span><span style="color:#91CBFF;"> -m</span><span style="color:#ADDCFF;"> ping</span></span></code></pre></div><h4 id="ansible-命令执行过程" tabindex="-1"><a class="header-anchor" href="#ansible-命令执行过程"><span>ansible 命令执行过程</span></a></h4><ol><li>加载默认配置文件<code>/etc/ansible/ansible.cfg</code></li><li>查找对应的主机配置文件，找到要执行的主机或者组；</li><li>加载相应的模块，如<code>command</code></li><li>Ansible 生成临时 Python 文件，并传输到远程服务器的<code>$HOME/.ansible/tmp/ansible-tmp-数字/XXX.PY</code></li><li>为文件添加执行权限</li><li>执行并返回结果</li><li>删除临时<code>py</code>文件并退出</li></ol><figure><img src="`+o+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="ansible-的执行状态" tabindex="-1"><a class="header-anchor" href="#ansible-的执行状态"><span>Ansible 的执行状态</span></a></h4><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@centos8 </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] grep -A 14 </span><span style="color:#ADDCFF;">&#39;\\[colors\\]&#39;</span><span style="color:#F0F3F6;"> /etc/ansible/ansible.cfg</span></span>
<span class="line"><span style="color:#F0F3F6;">[colors]</span></span>
<span class="line"><span style="color:#BDC4CC;"># highlight = white</span></span>
<span class="line"><span style="color:#BDC4CC;"># verbose = blue</span></span>
<span class="line"><span style="color:#BDC4CC;"># warn = bright purple</span></span>
<span class="line"><span style="color:#BDC4CC;"># error = red</span></span>
<span class="line"><span style="color:#BDC4CC;"># debug = dark gray</span></span>
<span class="line"><span style="color:#BDC4CC;"># deprecate = purple</span></span>
<span class="line"><span style="color:#BDC4CC;"># skip = cyan</span></span>
<span class="line"><span style="color:#BDC4CC;"># unreachable = red</span></span>
<span class="line"><span style="color:#BDC4CC;"># ok = green</span></span>
<span class="line"><span style="color:#BDC4CC;"># changed = yellow</span></span>
<span class="line"><span style="color:#BDC4CC;"># diff_add = green</span></span>
<span class="line"><span style="color:#BDC4CC;"># diff_remove = red</span></span>
<span class="line"><span style="color:#BDC4CC;"># diff_lines = cyan</span></span></code></pre></div><p>Ansible 执行返回 -&gt; 颜色信息说明：</p><ul><li>绿色：成功执行，没有发生状态改变</li><li>黄色：成功执行，有发生状态改变</li><li>红色：执行失败</li></ul><h3 id="ansible-doc" tabindex="-1"><a class="header-anchor" href="#ansible-doc"><span>ansible-doc</span></a></h3><p><code>ansible-doc</code>命令用于获取模块信息及其使用帮助，相当于<code>man</code>。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#91CBFF;"> -l</span><span style="color:#BDC4CC;">				#获取全部模块的信息</span></span>
<span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#91CBFF;"> -s</span><span style="color:#ADDCFF;"> MOD_NAME</span><span style="color:#BDC4CC;">		#获取指定模块的使用帮助</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 列出所有模块</span></span>
<span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#91CBFF;"> -l</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 查看指定模块帮助用法 ( 详细说明 )</span></span>
<span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 查看指定模块帮助用法 ( 简单说明 )</span></span>
<span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#91CBFF;"> -s</span><span style="color:#ADDCFF;"> ping</span></span>
<span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#91CBFF;"> -l</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> grep</span><span style="color:#ADDCFF;"> ^ping</span></span>
<span class="line"><span style="color:#BDC4CC;"># &quot;重要&quot;</span></span>
<span class="line"><span style="color:#BDC4CC;"># 查看模块的 &quot;使用案例&quot;</span></span>
<span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#ADDCFF;"> ping</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> grep</span><span style="color:#91CBFF;"> -A</span><span style="color:#91CBFF;"> 100</span><span style="color:#ADDCFF;"> EXA</span></span>
<span class="line"><span style="color:#FFB757;">ansible-doc</span><span style="color:#ADDCFF;"> file</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> grep</span><span style="color:#91CBFF;"> -A</span><span style="color:#91CBFF;"> 100</span><span style="color:#ADDCFF;"> EXA</span></span></code></pre></div><h3 id="ansible-console" tabindex="-1"><a class="header-anchor" href="#ansible-console"><span>ansible-console</span></a></h3><p>此工具可交互执行命令，支持<code>tab</code>。</p><p>提示符格式：<code>执行用户@当前操作的主机组 (当前组的主机数量)[f:并发数]$</code></p><p>常用子命令：</p><ul><li>设置并发数：<code>forks n</code>，例如：<code>forks 10</code></li><li>切换组：<code>cd</code>主机组，例如：<code>cd web</code></li><li>列出当前组主机列表：<code>list</code></li><li>列出所有的内置命令：<code>?</code>或<code>help</code></li></ul><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[01:13:41 root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">]# ansible-console</span></span>
<span class="line"><span style="color:#FFB757;">Welcome</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> the</span><span style="color:#ADDCFF;"> ansible</span><span style="color:#ADDCFF;"> console.</span></span>
<span class="line"><span style="color:#FFB757;">Type</span><span style="color:#ADDCFF;"> help</span><span style="color:#ADDCFF;"> or</span><span style="color:#ADDCFF;"> ?</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> list</span><span style="color:#ADDCFF;"> commands.</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">root@all</span><span style="color:#F0F3F6;"> (3)[f:5]$ list</span></span>
<span class="line"><span style="color:#FFB757;">192.168.80.8</span></span>
<span class="line"><span style="color:#FFB757;">192.168.80.18</span></span>
<span class="line"><span style="color:#FFB757;">192.168.80.28</span></span>
<span class="line"><span style="color:#FFB757;">root@all</span><span style="color:#F0F3F6;"> (3)[f:5]$ cd websrvs</span></span>
<span class="line"><span style="color:#FFB757;">root@websrvs</span><span style="color:#F0F3F6;"> (2)[f:5]$ list</span></span>
<span class="line"><span style="color:#FFB757;">192.168.80.18</span></span>
<span class="line"><span style="color:#FFB757;">192.168.80.28</span></span>
<span class="line"><span style="color:#FFB757;">root@websrvs</span><span style="color:#F0F3F6;"> (2)[f:5]$ forks 1</span></span>
<span class="line"><span style="color:#FFB757;">root@websrvs</span><span style="color:#F0F3F6;"> (2)[f:1]$ ping</span></span>
<span class="line"><span style="color:#FFB757;">192.168.80.18</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> SUCCESS</span><span style="color:#F0F3F6;"> =</span><span style="color:#FF9492;">&gt;</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;ansible_facts&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;discovered_interpreter_python&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;/usr/libexec/platform-python&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }, </span></span>
<span class="line"><span style="color:#FFB757;">    &quot;changed&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">    &quot;ping&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;pong&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"><span style="color:#FFB757;">192.168.80.28</span><span style="color:#FF9492;"> |</span><span style="color:#FFB757;"> SUCCESS</span><span style="color:#F0F3F6;"> =</span><span style="color:#FF9492;">&gt;</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">    &quot;ansible_facts&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> {</span></span>
<span class="line"><span style="color:#FFB757;">        &quot;discovered_interpreter_python&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;/usr/libexec/platform-python&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">    }, </span></span>
<span class="line"><span style="color:#FFB757;">    &quot;changed&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#91CBFF;"> false</span><span style="color:#ADDCFF;">,</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">    &quot;ping&quot;</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> &quot;pong&quot;</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span>
<span class="line"><span style="color:#FFB757;">root@appsrvs</span><span style="color:#F0F3F6;"> (2)[f:5]$ yum name</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">httpd</span><span style="color:#F0F3F6;"> state</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">present</span></span>
<span class="line"><span style="color:#FFB757;">root@appsrvs</span><span style="color:#F0F3F6;"> (2)[f:5]$ service name</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">httpd</span><span style="color:#F0F3F6;"> state</span><span style="color:#FF9492;">=</span><span style="color:#ADDCFF;">started</span></span></code></pre></div><h3 id="ansible-playbook" tabindex="-1"><a class="header-anchor" href="#ansible-playbook"><span>ansible-playbook</span></a></h3><p>此工具用于执行编写好的 PlayBook 任务。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] vim hello.yml</span></span>
<span class="line"><span style="color:#FFB757;">---</span></span>
<span class="line"><span style="color:#BDC4CC;"># hello world yml file</span></span>
<span class="line"><span style="color:#FFB757;">-</span><span style="color:#ADDCFF;"> hosts:</span><span style="color:#ADDCFF;"> websrvs</span></span>
<span class="line"><span style="color:#FFB757;">  remote_user:</span><span style="color:#ADDCFF;"> root</span></span>
<span class="line"><span style="color:#FFB757;">  gather_facts:</span><span style="color:#ADDCFF;"> no</span></span>
<span class="line"><span style="color:#F0F3F6;">  </span></span>
<span class="line"><span style="color:#FFB757;">  tasks:</span></span>
<span class="line"><span style="color:#FFB757;">    -</span><span style="color:#ADDCFF;"> name:</span><span style="color:#ADDCFF;"> hello</span><span style="color:#ADDCFF;"> world</span></span>
<span class="line"><span style="color:#91CBFF;">      command</span><span style="color:#ADDCFF;">:</span><span style="color:#ADDCFF;"> /usr/bin/wall</span><span style="color:#ADDCFF;"> hello</span><span style="color:#ADDCFF;"> world</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible-playbook hello.yml</span></span></code></pre></div><h3 id="ansible-vault" tabindex="-1"><a class="header-anchor" href="#ansible-vault"><span>ansible-vault</span></a></h3><p>此工具可以用于加密解密<code>yml</code>文件。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">ansible-vault</span><span style="color:#F0F3F6;"> [create</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">decrypt</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">edit</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">encrypt</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">rekey</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">view]</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">ansible-vault</span><span style="color:#ADDCFF;"> encrypt</span><span style="color:#ADDCFF;"> hello.yml</span><span style="color:#BDC4CC;">     # 加密</span></span>
<span class="line"><span style="color:#FFB757;">ansible-vault</span><span style="color:#ADDCFF;"> decrypt</span><span style="color:#ADDCFF;"> hello.yml</span><span style="color:#BDC4CC;">     # 解密</span></span>
<span class="line"><span style="color:#FFB757;">ansible-vault</span><span style="color:#ADDCFF;"> view</span><span style="color:#ADDCFF;"> hello.yml</span><span style="color:#BDC4CC;">        # 查看</span></span>
<span class="line"><span style="color:#FFB757;">ansible-vault</span><span style="color:#ADDCFF;"> edit</span><span style="color:#ADDCFF;"> hello.yml</span><span style="color:#BDC4CC;">        # 编辑加密文件</span></span>
<span class="line"><span style="color:#FFB757;">ansible-vault</span><span style="color:#ADDCFF;"> rekey</span><span style="color:#ADDCFF;"> hello.yml</span><span style="color:#BDC4CC;">       # 修改口令</span></span>
<span class="line"><span style="color:#FFB757;">ansible-vault</span><span style="color:#ADDCFF;"> create</span><span style="color:#ADDCFF;"> new.yml</span><span style="color:#BDC4CC;">        # 创建新文件</span></span></code></pre></div><h3 id="ansible-galaxy" tabindex="-1"><a class="header-anchor" href="#ansible-galaxy"><span>ansible-galaxy</span></a></h3><p>Galaxy 是一个免费网站，类似于 GitHub 网站，网站上发布了很多的共享的<code>Roles</code>角色。</p><p>Ansible 提供了<code>ansible-galaxy</code>命令行工具连接<code>https://galaxy.ansible.com</code>网站下载相应的<code>Roles</code>，进行<code>init</code>(初始化)、<code>search</code>(查询)、<code>install</code>(安装)、<code>remove</code>(移除)等操作。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 搜索项目</span></span>
<span class="line"><span style="color:#F0F3F6;">[root@ansible </span><span style="color:#FF9492;">~</span><span style="color:#F0F3F6;">] ansible-galaxy search lamp</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 列出所有已安装的 galaxy</span></span>
<span class="line"><span style="color:#FFB757;">ansible-galaxy</span><span style="color:#ADDCFF;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 安装 galaxy, 默认下载到 ~/.ansible/roles 下</span></span>
<span class="line"><span style="color:#FFB757;">ansible-galaxy</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> geerlingguy.mysql</span></span>
<span class="line"><span style="color:#FFB757;">ansible-galaxy</span><span style="color:#ADDCFF;"> install</span><span style="color:#ADDCFF;"> geerlingguy.redis</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 删除 galaxy</span></span>
<span class="line"><span style="color:#FFB757;">ansible-galaxy</span><span style="color:#ADDCFF;"> remove</span><span style="color:#ADDCFF;"> geerlingguy.redis</span></span></code></pre></div>`,97)]))}const y=a(t,[["render",c],["__file","ansible.html.vue"]]),d=JSON.parse('{"path":"/linux/tools/ansible.html","title":"ansible","lang":"zh-CN","frontmatter":{"title":"ansible","date":"2024-06-15T00:00:00.000Z","tags":"Bash","categories":"Linux","order":27,"description":"Ansible 2.9.x。 ansible 简介 Ansible 是一种自动化运维工具，基于 Paramiko 开发的，并且基于模块化工作，Ansible 是一种集成 IT 系统的配置管理、应用部署、执行特定任务的开源平台，它是基于 Python 语言，由 Paramiko 和 PyYAML 两个关键模块构建。集合了众多运维工具的优点，实现了批量系统...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/linux/tools/ansible.html"}],["meta",{"property":"og:title","content":"ansible"}],["meta",{"property":"og:description","content":"Ansible 2.9.x。 ansible 简介 Ansible 是一种自动化运维工具，基于 Paramiko 开发的，并且基于模块化工作，Ansible 是一种集成 IT 系统的配置管理、应用部署、执行特定任务的开源平台，它是基于 Python 语言，由 Paramiko 和 PyYAML 两个关键模块构建。集合了众多运维工具的优点，实现了批量系统..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T09:49:11.000Z"}],["meta",{"property":"article:published_time","content":"2024-06-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T09:49:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ansible\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-15T00:00:00.000Z\\",\\"dateModified\\":\\"2025-04-23T09:49:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"ansible 简介","slug":"ansible-简介","link":"#ansible-简介","children":[{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"ansible 架构","slug":"ansible-架构","link":"#ansible-架构","children":[]}]},{"level":2,"title":"安装","slug":"安装","link":"#安装","children":[{"level":3,"title":"使用pip安装","slug":"使用pip安装","link":"#使用pip安装","children":[]},{"level":3,"title":"使用yum安装","slug":"使用yum安装","link":"#使用yum安装","children":[]}]},{"level":2,"title":"相关文件","slug":"相关文件","link":"#相关文件","children":[]},{"level":2,"title":"主配置文件","slug":"主配置文件","link":"#主配置文件","children":[]},{"level":2,"title":"主机清单","slug":"主机清单","link":"#主机清单","children":[{"level":3,"title":"主机清单文件格式","slug":"主机清单文件格式","link":"#主机清单文件格式","children":[]},{"level":3,"title":"主机清单参数","slug":"主机清单参数","link":"#主机清单参数","children":[]},{"level":3,"title":"主机变量","slug":"主机变量","link":"#主机变量","children":[]},{"level":3,"title":"组的变量","slug":"组的变量","link":"#组的变量","children":[]}]},{"level":2,"title":"Ansible 相关工具","slug":"ansible-相关工具","link":"#ansible-相关工具","children":[{"level":3,"title":"Ansible 使用前准备工作（建议）：","slug":"ansible-使用前准备工作-建议","link":"#ansible-使用前准备工作-建议","children":[]},{"level":3,"title":"ansible Ad-Hoc","slug":"ansible-ad-hoc","link":"#ansible-ad-hoc","children":[]},{"level":3,"title":"ansible-doc","slug":"ansible-doc","link":"#ansible-doc","children":[]},{"level":3,"title":"ansible-console","slug":"ansible-console","link":"#ansible-console","children":[]},{"level":3,"title":"ansible-playbook","slug":"ansible-playbook","link":"#ansible-playbook","children":[]},{"level":3,"title":"ansible-vault","slug":"ansible-vault","link":"#ansible-vault","children":[]},{"level":3,"title":"ansible-galaxy","slug":"ansible-galaxy","link":"#ansible-galaxy","children":[]}]}],"git":{"createdTime":1745401751000,"updatedTime":1745401751000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":13.7,"words":4111},"filePathRelative":"linux/tools/ansible.md","localizedDate":"2024年6月15日","autoDesc":true}');export{y as comp,d as data};
