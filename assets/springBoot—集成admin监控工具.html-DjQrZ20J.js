import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as l,o as p}from"./app-ByvFWdWZ.js";const o={};function e(t,s){return p(),a("div",null,s[0]||(s[0]=[l(`<p>Spring Boot Admin 能够将 Actuator 中的信息进行界面化的展示，也可以监控所有 Spring Boot 应用的健康状况，提供实时警报功能。</p><p>Spring Boot Admin 提供的主要功能：</p><ul><li>显示健康状况</li><li>显示详细信息，例如 JVM 和内存指标、<code>micrometer.io</code>指标、数据源指标、缓存指标</li><li>显示构建信息编号</li><li>关注并下载日志文件</li><li>查看 jvm 系统和环境属性</li><li>查看 Spring Boot 配置属性</li><li>支持 Spring Cloud 的 postable/env-和/refresh-endpoint</li><li>轻松的日志级管理</li><li>与 JMX-beans 交互</li><li>查看线程转储</li><li>查看 http 跟踪</li><li>查看 auditevents</li><li>查看 http-endpoints</li><li>查看计划任务</li><li>查看和删除活动会话（使用 spring-session）</li><li>查看F lyway/Liquibase 数据库迁移</li><li>下载 heapdump</li><li>状态变更通知（通过电子邮件，Slack，Hipchat，…）</li><li>状态更改的事件日志（非持久性）</li></ul><h2 id="spring-boot-admin不是spring团队提供的模块" tabindex="-1"><a class="header-anchor" href="#spring-boot-admin不是spring团队提供的模块"><span>Spring Boot Admin不是Spring团队提供的模块？</span></a></h2><p>它是由 Codecentric 公司创建的，代码在<a href="https://github.com/codecentric/spring-boot-admin" target="_blank" rel="noopener noreferrer">Github： spring-boot-admin</a>上。</p><h2 id="spring-boot-admin和actuator是什么关系" tabindex="-1"><a class="header-anchor" href="#spring-boot-admin和actuator是什么关系"><span>Spring Boot Admin和actuator是什么关系？</span></a></h2><p>Spring Boot Admin 本质上集成了 actuator，此外添加一些实时警报功能等。</p><h2 id="springboot-admin的client和server" tabindex="-1"><a class="header-anchor" href="#springboot-admin的client和server"><span>SpringBoot Admin的Client和Server</span></a></h2><p>Spring Boot Admin（简称SBA）由两部分组成：SBA Server和SBA Client。</p><p>SBA Server：包括Admin用户界面并独立运行于被监控应用<br> SBA Client：提供一种方式将被监控应用注册到 SBA Server</p><h3 id="为什么spring-boot-admin设计上会分为server和client两个部分" tabindex="-1"><a class="header-anchor" href="#为什么spring-boot-admin设计上会分为server和client两个部分"><span>为什么Spring Boot Admin设计上会分为Server和Client两个部分？</span></a></h3><ul><li>首先，Spring Boot Admin 做的是集中化的监控（比如应用的集群，多个服务或者微服务等），而不是每个应用都需要有一个 UI。</li><li>其次，被监控的应用应该是和监控平台是分离的，比如 Client 应用会挂掉，这时候 Server 监控依然正常运行并发现和报警 Client 的异常状态。</li><li>再者，还要考虑和其它语言应用，其它平台等的集成等。</li></ul><h3 id="只能通过-sba-client-注册到-sba-server-吗" tabindex="-1"><a class="header-anchor" href="#只能通过-sba-client-注册到-sba-server-吗"><span>只能通过 SBA Client 注册到 SBA Server 吗？</span></a></h3><p>并不是，除了 SBA Client，SBA 还支持：</p><ul><li>Spring Cloud Discovery：为了支持一些微服务框架如 SpringCloud 等（因为微服务框架中已经包含了服务发现和注册模块）</li><li>Python Applications Using Pyctuator：为了支持其它语言开发的应用，比如 Python</li></ul><h2 id="简单示例" tabindex="-1"><a class="header-anchor" href="#简单示例"><span>简单示例</span></a></h2><p>本例子主要展示SBA Server + SBA Client注册的方式。</p><h3 id="启用sba-server" tabindex="-1"><a class="header-anchor" href="#启用sba-server"><span>启用SBA Server</span></a></h3><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;de.codecentric&lt;/</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;spring-boot-admin-starter-server&lt;/</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">		&lt;!--	版本号与springboot版本号保持一致	--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">version</span><span style="color:#F0F3F6;">&gt;3.4.0&lt;/</span><span style="color:#72F088;">version</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>通过<code>@EnableAdminServer</code>注解启用 SBA Server</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">EnableAdminServer</span></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">SpringBootApplication</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> SpringBootHelloWorldApplication</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;">    /**</span></span>
<span class="line"><span style="color:#BDC4CC;">     * main interface.</span></span>
<span class="line"><span style="color:#BDC4CC;">     *</span></span>
<span class="line"><span style="color:#BDC4CC;">     * </span><span style="color:#FF9492;">@param</span><span style="color:#FFB757;"> args</span><span style="color:#BDC4CC;"> args</span></span>
<span class="line"><span style="color:#BDC4CC;">     */</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> main</span><span style="color:#F0F3F6;">(</span><span style="color:#FF9492;">String</span><span style="color:#F0F3F6;">[] </span><span style="color:#FFB757;">args</span><span style="color:#F0F3F6;">) {</span></span>
<span class="line"><span style="color:#F0F3F6;">        SpringApplication.</span><span style="color:#DBB7FF;">run</span><span style="color:#F0F3F6;">(SpringBootHelloWorldApplication.class, args);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>这样就可以打开<code>http://localhost:8080/applications</code>查看 Server UI，目前没有客户端注册上来。</p><h3 id="注册client" tabindex="-1"><a class="header-anchor" href="#注册client"><span>注册Client</span></a></h3><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;de.codecentric&lt;/</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;spring-boot-admin-starter-client&lt;/</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">version</span><span style="color:#F0F3F6;">&gt;3.4.0&lt;/</span><span style="color:#72F088;">version</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;org.springframework.boot&lt;/</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;spring-boot-starter-actuator&lt;/</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#72F088;">server</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">  port</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">9000</span></span>
<span class="line"><span style="color:#72F088;">spring</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">  boot</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">    admin</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">      client</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">        url</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">&#39;http://localhost:9000&#39;</span></span>
<span class="line"><span style="color:#72F088;">management</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">  endpoints</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">    enabled-by-default</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">true</span></span>
<span class="line"><span style="color:#72F088;">    web</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">      base-path</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">/actuator</span></span>
<span class="line"><span style="color:#72F088;">      exposure</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">        include</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">&#39;*&#39;</span></span></code></pre></div><h2 id="如何继承spring-security" tabindex="-1"><a class="header-anchor" href="#如何继承spring-security"><span>如何继承Spring Security</span></a></h2><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;org.springframework.boot&lt;/</span><span style="color:#72F088;">groupId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;spring-boot-starter-security&lt;/</span><span style="color:#72F088;">artifactId</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">dependency</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>添加<code>HttpSecurity</code>配置</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Configuration</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> SecurityPermitAllConfig</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> WebSecurityConfigurerAdapter</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> configure</span><span style="color:#F0F3F6;">(HttpSecurity </span><span style="color:#FFB757;">http</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> Exception {</span></span>
<span class="line"><span style="color:#F0F3F6;">        http.</span><span style="color:#DBB7FF;">authorizeRequests</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">anyRequest</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">permitAll</span><span style="color:#F0F3F6;">()  </span></span>
<span class="line"><span style="color:#F0F3F6;">            .</span><span style="color:#DBB7FF;">and</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">csrf</span><span style="color:#F0F3F6;">().</span><span style="color:#DBB7FF;">disable</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="如何显示日志内容" tabindex="-1"><a class="header-anchor" href="#如何显示日志内容"><span>如何显示日志内容？</span></a></h2><p>默认下没有显示 Log File 的内容，如果需要显示SpringBoot应用日志需要进行如下配置（配置<code>logging.file.path</code>或者<code>logging.file.name</code>）。</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#72F088;">logging</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">  file</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">    name</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">&#39;spring-boot-application.log&#39;</span></span>
<span class="line"><span style="color:#72F088;">  pattern</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#72F088;">    file</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">&#39;%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(\${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx&#39;</span></span></code></pre></div><p>刷新SBA UI就可以看到增加了日志文件相关的链接。</p>`,33)]))}const c=n(o,[["render",e],["__file","springBoot—集成admin监控工具.html.vue"]]),F=JSON.parse('{"path":"/java/springBoot/springBoot%E2%80%94%E9%9B%86%E6%88%90admin%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7.html","title":"","lang":"zh-CN","frontmatter":{"description":"Spring Boot Admin 能够将 Actuator 中的信息进行界面化的展示，也可以监控所有 Spring Boot 应用的健康状况，提供实时警报功能。 Spring Boot Admin 提供的主要功能： 显示健康状况 显示详细信息，例如 JVM 和内存指标、micrometer.io指标、数据源指标、缓存指标 显示构建信息编号 关注并下载...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/java/springBoot/springBoot%E2%80%94%E9%9B%86%E6%88%90admin%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7.html"}],["meta",{"property":"og:description","content":"Spring Boot Admin 能够将 Actuator 中的信息进行界面化的展示，也可以监控所有 Spring Boot 应用的健康状况，提供实时警报功能。 Spring Boot Admin 提供的主要功能： 显示健康状况 显示详细信息，例如 JVM 和内存指标、micrometer.io指标、数据源指标、缓存指标 显示构建信息编号 关注并下载..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-23T09:49:11.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-23T09:49:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-23T09:49:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"Spring Boot Admin不是Spring团队提供的模块？","slug":"spring-boot-admin不是spring团队提供的模块","link":"#spring-boot-admin不是spring团队提供的模块","children":[]},{"level":2,"title":"Spring Boot Admin和actuator是什么关系？","slug":"spring-boot-admin和actuator是什么关系","link":"#spring-boot-admin和actuator是什么关系","children":[]},{"level":2,"title":"SpringBoot Admin的Client和Server","slug":"springboot-admin的client和server","link":"#springboot-admin的client和server","children":[{"level":3,"title":"为什么Spring Boot Admin设计上会分为Server和Client两个部分？","slug":"为什么spring-boot-admin设计上会分为server和client两个部分","link":"#为什么spring-boot-admin设计上会分为server和client两个部分","children":[]},{"level":3,"title":"只能通过 SBA Client 注册到 SBA Server 吗？","slug":"只能通过-sba-client-注册到-sba-server-吗","link":"#只能通过-sba-client-注册到-sba-server-吗","children":[]}]},{"level":2,"title":"简单示例","slug":"简单示例","link":"#简单示例","children":[{"level":3,"title":"启用SBA Server","slug":"启用sba-server","link":"#启用sba-server","children":[]},{"level":3,"title":"注册Client","slug":"注册client","link":"#注册client","children":[]}]},{"level":2,"title":"如何继承Spring Security","slug":"如何继承spring-security","link":"#如何继承spring-security","children":[]},{"level":2,"title":"如何显示日志内容？","slug":"如何显示日志内容","link":"#如何显示日志内容","children":[]}],"git":{"createdTime":1745401751000,"updatedTime":1745401751000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":2.92,"words":877},"filePathRelative":"java/springBoot/springBoot—集成admin监控工具.md","localizedDate":"2025年4月23日","autoDesc":true}');export{c as comp,F as data};
