import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as l,o}from"./app-ByvFWdWZ.js";const p="/wsq-blog/assets/1-CsQgIhJx.png",t="/wsq-blog/assets/4-CEIQxJAf.png",c="/wsq-blog/assets/5-pDDuz3Wc.png",r="/wsq-blog/assets/6-DIONkk1W.png",i="/wsq-blog/assets/7-DnGryMsV.png",F="/wsq-blog/assets/8-cGId3X7Y.png",d="/wsq-blog/assets/9-DbKwa63m.png",y="/wsq-blog/assets/10-D97ZauBj.png",A="/wsq-blog/assets/11-DJzQZPZ2.png",g="/wsq-blog/assets/12-DSEf4s3B.png",D="/wsq-blog/assets/13-CQXNuGAp.png",h="/wsq-blog/assets/14-DqwiIxHj.png",T="/wsq-blog/assets/15-C3O5Kkjo.png",C="/wsq-blog/assets/16-C8DQXH9K.png",f="/wsq-blog/assets/17-Di2vszF1.png",u="/wsq-blog/assets/18-DgalmjDW.png",N="/wsq-blog/assets/19-BjXXc670.png",b="/wsq-blog/assets/20-1Hz6ThrE.png",P="/wsq-blog/assets/43-Byo-knrU.png",m="/wsq-blog/assets/44-DmFPhvpB.png",B="/wsq-blog/assets/45-CArk_-6d.png",I="/wsq-blog/assets/46-CRLnUMTD.png",_="/wsq-blog/assets/47-BontxwXM.png",v="/wsq-blog/assets/48-0_RFg_H_.png",x="/wsq-blog/assets/21-C9UrUWNq.png",R="/wsq-blog/assets/22-_InIMms9.png",E="/wsq-blog/assets/23-hVV77Q5b.png",k="/wsq-blog/assets/24-CMOFKtGH.png",w="/wsq-blog/assets/25-B23bEeca.png",q="/wsq-blog/assets/26-Bc8Y_s9j.png",S="/wsq-blog/assets/27-DYJzNTaN.png",G="/wsq-blog/assets/29-9sVLPl6k.png",z="/wsq-blog/assets/33-BkiqyjMh.png",L="/wsq-blog/assets/34-R6DkDNK-.png",W="/wsq-blog/assets/35-MrnGSdQu.png",a="/wsq-blog/assets/36-BDFw9yBt.png",U="/wsq-blog/assets/39-DJ00pfk0.png",Q="/wsq-blog/assets/40-BSHtaWz6.png",M="/wsq-blog/assets/41-Sxzwrvjq.png",V="/wsq-blog/assets/42-7uNZwOd3.png",O={};function Z(j,s){return o(),e("div",null,s[0]||(s[0]=[l('<p>随着互联网用户的快速增长，全球的公网 IPv4 地址已耗尽。在 IPv4 地址耗尽前，使用 NAT（<code>Network Address Translation</code>）技术解决 IPv4 地址不够用的问题，并持续至今。</p><p>NAT 技术就是将私有地址转换成公网地址，使私有网络中的主机可以通过少量公网地址访问互联网。</p><p>但 NAT只是一种过渡技术，从根本上解决问题，是采用支持更大地址空间的下一代 IP 技术，即 IPv6 协议，它提供了几乎用不完的地址空间。</p><figure><img src="'+p+'" alt="NAT技术" tabindex="0" loading="lazy"><figcaption>NAT技术</figcaption></figure><h2 id="nat-技术" tabindex="-1"><a class="header-anchor" href="#nat-技术"><span>NAT 技术</span></a></h2><p>IP 地址中预留了 3 个私有地址网段，在私有网络内，可以任意使用。</p><table style="width:400px;"><tr><th align="center" colspan="2">私有地址范围</th></tr><tr><td align="center">A类地址</td><td>10.0.0.0 ~ 10.255.255.255</td></tr><tr><td align="center">B类地址</td><td>172.16.0.0 ~ 172.31.255.255</td></tr><tr><td align="center">C类地址</td><td>192.168.0.0 ~ 192.168.255.255</td></tr></table><p>其余的 IP 地址可以在互联网上使用，由 IANA 统一管理，称为公网地址。</p><p>典型的 NAT 组网模型，网络通常是被划分为私网和公网两部分，各自使用独立的地址空间。私网使用私有地址，而公网使用公网地址。为了让主机 A 和 B 访问互联网上的服务器<code>Server</code>，需要在网络边界部署一台 NAT 设备用于执行地址转换。NAT 设备通常是路由器或防火墙。</p><figure><img src="'+t+'" alt="典型NAT组网" tabindex="0" loading="lazy"><figcaption>典型NAT组网</figcaption></figure><h2 id="基本-nat" tabindex="-1"><a class="header-anchor" href="#基本-nat"><span>基本 NAT</span></a></h2><p>基本 NAT 是最简单的一种地址转换方式，它只对数据包的 IP 层参数进行转换，它可分为静态 NAT 和动态 NAT。</p><p>静态 NAT 是公网 IP 地址和私有 IP 地址有一对一的关系，一个公网 IP 地址对应一个私有 IP 地址，建立和维护一张静态地址映射表。</p><p>动态 NAT 是公网 IP 地址和私有 IP 地址有一对多的关系，同一个公网 IP 地址分配给不同的私网用户使用，使用时间必须错开。它包含一个公有 IP 地址池和一张动态地址映射表。</p><h3 id="动态-nat" tabindex="-1"><a class="header-anchor" href="#动态-nat"><span>动态 NAT</span></a></h3><p>私网主机 A（<code>10.0.0.1</code>）需要访问公网的服务器 Server（<code>61.144.249.229</code>），在路由器 RT 上配置 NAT，地址池为<code>219.134.180.11 ~ 219.134.180.20</code>，地址转换过程如下：</p><figure><img src="'+c+'" alt="基本NAT" tabindex="0" loading="lazy"><figcaption>基本NAT</figcaption></figure><ol><li>A 向 Server 发送报文，网关是<code>10.0.0.254</code>，源地址是<code>10.0.0.1</code>，目的地址是<code>61.144.249.229</code>。</li></ol><figure><img src="'+r+'" alt="A发包" tabindex="0" loading="lazy"><figcaption>A发包</figcaption></figure><ol start="2"><li>RT 收到 IP 报文后，查找路由表，将 IP 报文转发至出接口，由于出接口上配置了 NAT，因此 RT 需要将源地址<code>10.0.0.1</code>转换为公网地址。</li></ol><figure><img src="'+i+'" alt="RT收包" tabindex="0" loading="lazy"><figcaption>RT收包</figcaption></figure><ol start="3"><li>RT 从地址池中查找第一个可用的公网地址<code>219.134.180.11</code>，用这个地址替换数据包的源地址，转换后的数据包源地址为<code>219.134.180.11</code>，目的地址不变。这叫 SNAT（<code>Source Network Address Translation</code>，源地址转换）。同时 RT 在自己的 NAT 表中添加一个表项，记录私有地址<code>10.0.0.1</code>到公网地址<code>219.134.180.11</code>的映射。RT 再将报文转发给目的地址<code>61.144.249.229</code>。</li></ol><figure><img src="'+F+'" alt="NAT转换" tabindex="0" loading="lazy"><figcaption>NAT转换</figcaption></figure><ol start="4"><li><p>Server 收到报文后做相应处理。</p></li><li><p>Server 发送回应报文，报文的源地址是<code>61.144.249.229</code>，目的地址是<code>219.134.180.11</code>。</p></li></ol><figure><img src="'+d+'" alt="Server发回应包" tabindex="0" loading="lazy"><figcaption>Server发回应包</figcaption></figure><ol start="6"><li>RT 收到报文，发现报文的目的地址<code>219.134.180.11</code>在 NAT 地址池内，于是检查 NAT 表，找到对应表项后，使用私有地址<code>10.0.0.1</code>替换公网地址<code>219.134.180.11</code>，转换后的报文源地址不变，目的地址为<code>10.0.0.1</code>。RT 在将报文转发给 A。这也叫 DNAT（<code>Destination Network Address Translation</code>，目的地址转换）。</li></ol><figure><img src="'+y+'" alt="NAT转换" tabindex="0" loading="lazy"><figcaption>NAT转换</figcaption></figure><ol start="7"><li>A 收到报文，地址转换过程结束。</li></ol><figure><img src="'+A+'" alt="A收包" tabindex="0" loading="lazy"><figcaption>A收包</figcaption></figure><p>如果 B 也要访问 Server，则 RT 会从地址池中分配另一个可用公网地址<code>219.134.180.12</code>，并在 NAT 表中添加一个相应的表项，记录 B 的私有地址<code>10.0.0.2</code>到公网地址<code>219.134.180.12</code>的映射关系。</p><figure><img src="'+g+'" alt="B的NAT转换" tabindex="0" loading="lazy"><figcaption>B的NAT转换</figcaption></figure><p>整个过程下来，NAT 悄悄的改了 IP 数据包的发送和接收端 IP 地址，但对真正的发送方和接收方来说，他们却对这件事情，一无所知。</p><p>这就是基本 NAT 的工作原理。</p><p>当 NAT 路由器具有<code>n</code>个全球 IP 地址时，专用网内最多可以同时有<code>n</code>台主机接入到互联网。这样就可以使专用网内较多数量的主机，轮流使用 NAT 路由器有限数量的全球 IP 地址。</p><p>通过 NAT 路由器的通信必须由专用网内的主机发起。专用网内部的主机不能充当服务器用，因为互联网上的客户无法请求专用网内的服务器提供服务。</p><p>为了更加有效地利用 NAT 路由器上的全球 IP 地址，现在常用的 NAT 转换表把运输层的端口号也利用上。这样，就可以使多个拥有本地地址的主机，共用一个 NAT 路由器上的全球 IP 地址，因而可以同时和互联网上的不同主机进行通信。</p><p>使用端口号的 NAT 叫做网络地址与端口号转换 NAPT(<code>Network Address and Port Translation</code>，网络地址端口转换)，而不使用端口号的 NAT 就叫做基本的 NAT。</p><h2 id="napt" tabindex="-1"><a class="header-anchor" href="#napt"><span>NAPT</span></a></h2><p>在基础 NAT 中，私有地址和公网地址存在一对一地址转换的对应关系，即一个公网地址同时只能分配给一个私有地址。它只解决了公网和私网的通信问题，并没有解决公网地址不足的问题。</p><p>NAPT 对数据包的 IP 地址、协议类型、传输层端口号同时进行转换，可以明显提高公网 IP 地址的利用率。</p><figure><img src="'+D+'" alt="NAPT的NAT表" tabindex="0" loading="lazy"><figcaption>NAPT的NAT表</figcaption></figure><h3 id="举个栗子" tabindex="-1"><a class="header-anchor" href="#举个栗子"><span>举个栗子</span></a></h3><p>私网主机 A（<code>10.0.0.1</code>）需要访问公网的服务器 Server 的 WWW 服务（<code>61.144.249.229</code>），在路由器 RT 上配置 NAPT，地址池为<code>219.134.180.11~219.134.180.20</code>，地址转换过程如下：</p><ol><li>A 向 Server 发送报文，网关是 RT（<code>10.0.0.254</code>），源地址和端口是<code>10.0.0.1:1024</code>，目的地址和端口是<code>61.144.249.229:80</code>。</li></ol><figure><img src="'+h+'" alt="A发包" tabindex="0" loading="lazy"><figcaption>A发包</figcaption></figure><ol start="2"><li><p>RT 收到 IP 报文后，查找路由表，将 IP 报文转发至出接口，由于出接口上配置了 NAPT，因此 RT 需要将源地址<code>10.0.0.1:1024</code>转换为公网地址和端口。</p></li><li><p>RT 从地址池中查找第一个可用的公网地址<code>219.134.180.11</code>，用这个地址替换数据包的源地址，并查找这个公网地址的一个可用端口，例如 2001，用这个端口替换源端口。转换后的数据包源地址为<code>219.134.180.11:2001</code>，目的地址和端口不变。同时 RT 在自己的 NAT 表中添加一个表项，记录私有地址<code>10.0.0.1:1024</code>到公网地址<code>219.134.180.11:2001</code>的映射。RT 再将报文转发给目的地址<code>61.144.249.229</code>。</p></li></ol><figure><img src="'+T+'" alt="NAPT转换" tabindex="0" loading="lazy"><figcaption>NAPT转换</figcaption></figure><ol start="4"><li><p>Server 收到报文后做相应处理。</p></li><li><p>Server 发送回应报文，报文的源地址是<code>61.144.249.229:80</code>，目的地址是<code>219.134.180.11:2001</code>。</p></li></ol><figure><img src="'+C+'" alt="Server发回应包" tabindex="0" loading="lazy"><figcaption>Server发回应包</figcaption></figure><ol start="6"><li>RT 收到报文，发现报文的目的地址在 NAT 地址池内，于是检查 NAT 表，找到对应表项后，使用私有地址和端口<code>10.0.0.1:1024</code>替换公网地址<code>219.134.180.11:2001</code>，转换后的报文源地址和端口不变，目的地址和端口为<code>10.0.0.1:1024</code>。RT 再将报文转发给 A。</li></ol><figure><img src="'+f+'" alt="NAPT转换" tabindex="0" loading="lazy"><figcaption>NAPT转换</figcaption></figure><ol start="7"><li>A 收到报文，地址转换过程结束。</li></ol><p>如果 B 也要访问 Server，则 RT 会从地址池中分配同一个公网地址<code>219.134.180.11</code>，但分配另一个端口 3001，并在 NAT 表中添加一个相应的表项，记录 B 的私有地址<code>10.0.0.2:1024</code>到公网地址<code>219.134.180.12:3001</code>的映射关系。</p><figure><img src="'+u+'" alt="B的NAPT转换" tabindex="0" loading="lazy"><figcaption>B的NAPT转换</figcaption></figure><p>如果局域网内有多个设备，他们就会映射到不同的公网端口上，毕竟端口最大可达 65535，完全够用。这样大家都可以相安无事。</p><p>像这种同时转换 IP 和端口的技术，就是 NAPT（<code>Network Address Port Transfer</code>, 网络地址端口转换）。</p><p>那这么说只有用到端口的网络协议才能被 NAT 识别出来并转发？</p><p>但这怎么解释<code>ping</code>命令？<code>ping</code>基于 ICMP 协议，而 ICMP 协议报文里并不带端口信息。我依然可以正常的<code>ping</code>通公网机器并收到回包。</p><figure><img src="'+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>事实上针对 ICMP 协议，NAT 路由器做了特殊处理。<code>ping</code>报文头里有个<code>Identifier</code>的信息，它其实指的是放出<code>ping</code>命令的进程<code>id</code>。</p><p>对 NAT 路由器来说，这个<code>Identifier</code>的作用就跟端口一样。</p><p>另外，当我们去抓包的时候，就会发现有两个<code>Identifier</code>，一个后面带个BE（<code>Big Endian</code>），另一个带个LE（<code>Little Endian</code>）。</p><p>其实他们都是同一个数值，只不过大小端不同，读出来的值不一样。就好像同样的数字 345，反着读就成了 543。这是为了兼容不同操作系统下大小端不同的情况。</p><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="easy-ip" tabindex="-1"><a class="header-anchor" href="#easy-ip"><span>Easy IP</span></a></h2><p>在标准的 NAPT 配置中需要创建公网地址池，也就是必须先知道公网 IP 地址的范围。而在拨号接入的上网方式中，公网 IP 地址是由运营商动态分配的，无法事先确定，标准的 NAPT 无法做地址转换。要解决这个问题，就要使用 Easy IP。</p><p>Easy IP 又称为基于接口的地址转换。在地址转换时，Easy IP 的工作原理与 NAPT 相同，对数据包的 IP 地址、协议类型、传输层端口号同时进行转换。但 Easy IP 直接使用公网接口的 IP 地址作为转换后的源地址。Easy IP 适用于拨号接入互联网，动态获取公网 IP 地址的场合。</p><figure><img src="'+P+'" alt="Easy IP" tabindex="0" loading="lazy"><figcaption>Easy IP</figcaption></figure><p>Easy IP 无需配置地址池，只需要配置一个 ACL（访问控制列表），用来指定需要进行 NAT 转换的私有 IP 地址范围。</p><h2 id="nat-server" tabindex="-1"><a class="header-anchor" href="#nat-server"><span>NAT Server</span></a></h2><p>从基本 NAT 和 NAPT 的工作原理可知，NAT 表项由私网主机主动向公网主机发起访问而生成，公网主机无法主动向私网主机发起连接。因此 NAT 隐藏了内部网络结构，具有屏蔽主机的作用。但是在实际应用中，内网网络可能需要对外提供服务，例如 Web 服务，常规的 NAT 就无法满足需求了。</p><p>为了满足公网用户访问私网内部服务器的需求，需要使用 NAT Server 功能，将私网地址和端口静态映射成公网地址和端口，供公网用户访问。</p><figure><img src="'+m+'" alt="NAT Server" tabindex="0" loading="lazy"><figcaption>NAT Server</figcaption></figure><h3 id="举个栗子-1" tabindex="-1"><a class="header-anchor" href="#举个栗子-1"><span>举个栗子</span></a></h3><p>A 的私网地址为<code>10.0.0.1</code>，端口 8080 提供 Web 服务，在对公网提供 Web 服务时，要求端口号为 80。在 NAT 设备上启动 NAT Server 功能，将私网 IP 地址和端口<code>10.0.0.1:8080</code>映射成公网 IP 地址和端口<code>219.134.180.11:80</code>，这样公网主机 C 就可以通过<code>219.134.180.11:80</code>访问 A 的 Web 服务。</p><h2 id="nat-alg" tabindex="-1"><a class="header-anchor" href="#nat-alg"><span>NAT ALG</span></a></h2><p>基本 NAT 和 NAPT 只能识别并修改 IP 报文中的 IP 地址和端口号信息，无法修改报文内携带的信息，因此对于一些 IP 报文内携带网络信息的协议，例如 FTP、DNS、SIP、H.323 等，是无法正确转换的。</p><p>ALG 能够识别应用层协议内的网络信息，在转换 IP 地址和端口号时，也会对应用层数据中的网络信息进行正确的转换。</p><h3 id="举个栗子-alg-处理-ftp-的-active-模式" tabindex="-1"><a class="header-anchor" href="#举个栗子-alg-处理-ftp-的-active-模式"><span>举个栗子：ALG 处理 FTP 的 Active 模式</span></a></h3><p>FTP 是一种基于 TCP 的协议，用于在客户端和服务器间传输文件。FTP 协议工作时建立 2 个通道：<code>Control</code>通道和<code>Data</code>通道。<code>Control</code>用于传输 FTP 控制信息，<code>Data</code>通道用于传输文件数据。</p><p>私网 A（<code>10.0.0.1</code>）访问公网 Server（<code>61.144.249.229</code>）的 FTP 服务，在 RT 上配置 NAPT，地址池为<code>219.134.180.11~219.134.180.20</code>，地址转换过程如下：</p><figure><img src="'+B+'" alt="NAT ALG" tabindex="0" loading="lazy"><figcaption>NAT ALG</figcaption></figure><ol><li>A 发送到 Server 的 FTP <code>Control</code>通道建立请求，报文源地址和端口为<code>10.0.0.1:1024</code>，目的地址和端口为<code>61.144.249.229:21</code>，携带数据是 <code>IP=10.0.0.1 port=5001</code>，即告诉 Server 自己使用 TCP 端口 5001 传输<code>Data</code>。</li></ol><figure><img src="'+I+'" alt="A发包" tabindex="0" loading="lazy"><figcaption>A发包</figcaption></figure><ol start="2"><li>RT 收到报文，建立<code>10.0.0.1:1024</code>到<code>219.134.180.11:2001</code>的映射关系，转换源 IP 地址和 TCP 端口。根据目的端口 21，RT 识别出这是一个 FTP 报文，因此还要检查应用层数据，发现原始数据为<code>IP=10.0.0.1 port=5001</code>，于是为<code>Data</code>通道<code>10.0.0.1:5001</code>建立第二个映射关系：<code>10.0.0.1:5001</code>到<code>219.134.180.11:2002</code>，转换后的报文源地址和端口为<code>219.134.180.11:2001</code>，目的地址和端口不变，携带数据为<code>IP=219.134.180.11 port=2002</code>。</li></ol><figure><img src="'+_+'" alt="NAT ALG转换" tabindex="0" loading="lazy"><figcaption>NAT ALG转换</figcaption></figure><ol start="3"><li><p>Server 收到报文，向 A 回应<code>command okay</code>报文，FTP <code>Control</code>通道建立成功。同时 Server 根据应用层数据确定 A 的<code>Data</code>通道网络参数为 <code>219.134.180.11:2002</code>。</p></li><li><p>A 需要从 FTP 服务器下载文件，于是发起文件请求报文。Server 收到请求后，发起<code>Data</code>通道建立请求，IP 报文的源地址和端口为<code>61.144.249.229:20</code>，目的地址和端口为<code>219.134.180.11:2002</code>，并携带 FTP 数据。</p></li></ol><figure><img src="'+v+'" alt="Data通道" tabindex="0" loading="lazy"><figcaption>Data通道</figcaption></figure><h2 id="nat其它常见问题" tabindex="-1"><a class="header-anchor" href="#nat其它常见问题"><span>NAT其它常见问题</span></a></h2><h3 id="nat-缺点" tabindex="-1"><a class="header-anchor" href="#nat-缺点"><span>NAT 缺点</span></a></h3><p>由于 NAT/NAPT 都依赖于自己的转换表，因此会有以下的问题：</p><ul><li>外部无法主动与 NAT 内部服务器建立连接，因为 NAPT 转换表没有转换记录。</li><li>转换表的生成与转换操作都会产生性能开销。</li><li>通信过程中，如果 NAT 路由器重启了，所有的 TCP 连接都将被重置。</li></ul><h3 id="内网穿透" tabindex="-1"><a class="header-anchor" href="#内网穿透"><span>内网穿透</span></a></h3><p>使用了 NAT 上网的话，前提得内网机器主动请求公网 IP，这样 NAT 才能将内网的 IP 端口转成外网 IP 端口。</p><p>反过来公网的机器想主动请求内网机器，就会被拦在 NAT 路由器上，此时由于 NAT 路由器并没有任何相关的 IP 端口的映射记录，因此也就不会转发数据给内网里的任何一台机器。</p><p>举个现实中的场景就是，你在你家里的电脑上启动了一个 HTTP 服务，地址是<code>192.168.30.5:5000</code>，此时你在公司办公室里想通过手机去访问一下，却发现访问不了。</p><p>说到底，因为 NAT 的存在，我们只能从内网主动发起连接，否则 NAT 设备不会记录相应的映射关系，没有映射关系也就不能转发数据。</p><p>所以我们就在公网上加一台服务器 x，并暴露一个访问域名，再让内网的服务主动连接服务器 x，这样 NAT 路由器上就有对应的映射关系。接着，所有人都去访问服务器 x，服务器 x 将数据转发给内网机器，再原路返回响应，这样数据就都通了。这就是所谓的内网穿透。</p><p>像上面提到的服务器 x，你也不需要自己去搭，已经有很多现成的方案，比如花某壳。</p><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="为什么我在公司里访问不了家里的电脑" tabindex="-1"><a class="header-anchor" href="#为什么我在公司里访问不了家里的电脑"><span>为什么我在公司里访问不了家里的电脑？</span></a></h3><p>那是因为家里的电脑在局域网内，局域网和广域网之间有个 NAT 路由器。由于 NAT 路由器的存在，外网服务无法主动连通局域网内的电脑。</p><h3 id="两个内网的聊天软件如何建立通讯" tabindex="-1"><a class="header-anchor" href="#两个内网的聊天软件如何建立通讯"><span>两个内网的聊天软件如何建立通讯</span></a></h3><p>我家机子是在我们小区的局域网里，班花家的机子也是在她们小区的局域网里。都在局域网里，且 NAT 只能从内网连到外网，那我电脑上登录的QQ是怎么和班花电脑里的QQ连上的呢？</p><figure><img src="'+R+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上面这个问法其实是存在个误解，误以为两个qq客户端应用是直接建立连接的。</p><p>然而实际上并不是，两个qq客户端之间还隔了一个服务器。</p><figure><img src="'+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>也就是说，两个在内网的客户端登录qq时都会主动向公网的聊天服务器建立连接，这时两方的 NAT 路由器中都会记录有相应的映射关系。当在其中一个qq上发送消息时，数据会先到服务器，再通过服务器转发到另外一个客户端上。反过来也一样，通过这个方式让两台内网的机子进行数据传输。</p><h3 id="两个内网的应用如何直接建立连接" tabindex="-1"><a class="header-anchor" href="#两个内网的应用如何直接建立连接"><span>两个内网的应用如何直接建立连接</span></a></h3><p>上面的情况，是两个客户端通过第三方服务器进行通讯，但有些场景就是要抛开第三端，直接进行两端通信，比如P2P下载，这种该怎么办呢？</p><p>这种情况下，其实也还是离不开第三方服务器的帮助。</p><p>假设还是 A 和 B 两个局域网内的机子，A 内网对应的 NAT 设备叫<code>NAT_A</code>，B 内网里的 NAT 设备叫<code>NAT_B</code>，和一个第三方服务器<code>server</code>。</p><p>流程如下。</p><p>step1 和 2: A 主动去连<code>server</code>，此时A对应的<code>NAT_A</code>就会留下 A 的内网地址和外网地址的映射关系，<code>server</code>也拿到了 A 对应的外网 IP 地址和端口。</p><p>step3 和 4: B 的操作和 A 一样，主动连第三方<code>server</code>，<code>NAT_B</code>内留下 B 的内网地址和外网地址的映射关系，然后<code>server</code>也拿到了 B 对应的外网 IP 地址和端口。</p><p>step5 和 step6 以及 step7: 重点来了。此时<code>server</code>发消息给 A，让 A 主动发 UDP 消息到 B 的外网 IP 地址和端口。此时<code>NAT_B</code>收到这个 A 的 UDP 数据包时，这时候根据<code>NAT_B</code>的设置不同，导致这时候有可能<code>NAT_B</code>能直接转发数据到 B，那此时 A 和 B 就通了。但也有可能不通，直接丢包，不过丢包没关系，这个操作的目的是给<code>NAT_A</code>上留下有关 B 的映射关系。</p><p>step8 和 step9 以及 step10: 跟 step5 一样熟悉的配方，此时<code>server</code>再发消息给 B，让 B 主动发 UDP 消息到 A 的外网 IP 地址和端口。<code>NAT_B</code>上也留下了关于 A 到映射关系，这时候由于之前<code>NAT_A</code>上有过关于 B 的映射关系，此时<code>NAT_A</code>就能正常接受 B 的数据包，并将其转发给 A。到这里 A 和 B 就能正常进行数据通信了。这就是所谓的 NAT 打洞。</p><p>step11: 注意，之前我们都是用的 UDP 数据包，目的只是为了在两个局域网的 NAT 上打个洞出来，实际上大部分应用用的都是 TCP 连接，所以，这时候我们还需要在 A 主动向 B 发起 TCP 连接。到此，我们就完成了两端之间的通信。</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里估计大家会有疑惑。</p><p>端口已经被 UDP 用过了，TCP 再用，那岂不是端口重复占用（<code>address already in use</code>）？</p><p>其实并不会，端口重复占用的报错常见于两个 TCP 连接在不使用<code>SO_REUSEADDR</code>的情况下，重复使用了某个 IP 端口。而 UDP 和 TCP 之间却不会报这个错。之所以会有这个错，主要是因为在一个linux内核中，内核收到网络数据时，会通过五元组（传输协议，源 IP，目的 IP，源端口，目的端口）去唯一确定数据接受者。当五元组都一模一样的时候，内核就不知道该把数据发给谁。而 UDP 和 TCP 之间&quot;传输协议&quot;不同，因此五元组也不同，所以也就不会有上面的问题。</p><figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>NAPT 还分为好多种类型，上面的 NAT 打洞方案，都能成功吗？</p><p>关于 NAPT，确实还细分为好几种类型。我们现在常见的都是锥形 NAT。上面的打洞方案适用于大部分场景，这其中包括限制最多的端口受限锥形 NAT。</p><figure><img src="'+q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="实战" tabindex="-1"><a class="header-anchor" href="#实战"><span>实战</span></a></h2><h3 id="基本-nat-实验" tabindex="-1"><a class="header-anchor" href="#基本-nat-实验"><span>基本 NAT 实验</span></a></h3><h4 id="实验拓扑图" tabindex="-1"><a class="header-anchor" href="#实验拓扑图"><span>实验拓扑图</span></a></h4><figure><img src="'+S+'" alt="拓扑图" tabindex="0" loading="lazy"><figcaption>拓扑图</figcaption></figure><h4 id="实验要求" tabindex="-1"><a class="header-anchor" href="#实验要求"><span>实验要求</span></a></h4><p>PC 通过公网地址访问互联网</p><h4 id="实验步骤" tabindex="-1"><a class="header-anchor" href="#实验步骤"><span>实验步骤</span></a></h4><p>根据接口 IP 地址表，配置各个设备的接口地址。</p><table><thead><tr><th>设备</th><th>子接口</th><th>IP地址</th><th>网关</th></tr></thead><tbody><tr><td>PC</td><td>Ethernet 0/0/1</td><td>10.0.0.1/24</td><td>10.0.0.254</td></tr><tr><td>RT</td><td>GE 0/0/0</td><td>10.0.0.254/24</td><td></td></tr><tr><td>RT</td><td>GE 0/0/1</td><td>202.0.0.1/24</td><td></td></tr><tr><td>ISP</td><td>GE 0/0/1</td><td>202.0.0.2/24</td><td></td></tr></tbody></table><figure><img src="'+G+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># RT配置</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]interface GigabitEthernet 0/0/0</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/0]ip address 10.0.0.254 24</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/0]quit</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]interface GigabitEthernet 0/0/1</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/1]ip address 202.0.0.1 24</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/1]quit</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]display ip interface brief </span></span>
<span class="line"><span style="color:#FF9492;">*</span><span style="color:#F0F3F6;">down: administratively down</span></span>
<span class="line"><span style="color:#FFB757;">^down:</span><span style="color:#ADDCFF;"> standby</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">l</span><span style="color:#F0F3F6;">)</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> loopback</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">s</span><span style="color:#F0F3F6;">)</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> spoofing</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> UP</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Physical</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 3</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> DOWN</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Physical</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> UP</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Protocol</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 3</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> DOWN</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Protocol</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Interface</span><span style="color:#ADDCFF;">                         IP</span><span style="color:#ADDCFF;"> Address/Mask</span><span style="color:#ADDCFF;">      Physical</span><span style="color:#ADDCFF;">   Protocol</span><span style="color:#F0F3F6;">  </span></span>
<span class="line"><span style="color:#FFB757;">GigabitEthernet0/0/0</span><span style="color:#ADDCFF;">              10.0.0.254/24</span><span style="color:#ADDCFF;">        up</span><span style="color:#ADDCFF;">         up</span><span style="color:#F0F3F6;">        </span></span>
<span class="line"><span style="color:#FFB757;">GigabitEthernet0/0/1</span><span style="color:#ADDCFF;">              202.0.0.1/24</span><span style="color:#ADDCFF;">         up</span><span style="color:#ADDCFF;">         up</span><span style="color:#F0F3F6;">        </span></span>
<span class="line"><span style="color:#FFB757;">GigabitEthernet0/0/2</span><span style="color:#ADDCFF;">              unassigned</span><span style="color:#ADDCFF;">           down</span><span style="color:#ADDCFF;">       down</span><span style="color:#F0F3F6;">      </span></span>
<span class="line"><span style="color:#FFB757;">NULL0</span><span style="color:#ADDCFF;">                             unassigned</span><span style="color:#ADDCFF;">           up</span><span style="color:#ADDCFF;">         up</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">s</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># ISP配置</span></span>
<span class="line"><span style="color:#F0F3F6;">[ISP]interface GigabitEthernet 0/0/1</span></span>
<span class="line"><span style="color:#F0F3F6;">[ISP-GigabitEthernet0/0/1]ip address 202.0.0.2 24</span></span>
<span class="line"><span style="color:#F0F3F6;">[ISP-GigabitEthernet0/0/1]quit</span></span>
<span class="line"><span style="color:#F0F3F6;">[ISP]display ip interface brief</span></span>
<span class="line"><span style="color:#FF9492;">*</span><span style="color:#F0F3F6;">down: administratively down</span></span>
<span class="line"><span style="color:#FFB757;">^down:</span><span style="color:#ADDCFF;"> standby</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">l</span><span style="color:#F0F3F6;">)</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> loopback</span></span>
<span class="line"><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">s</span><span style="color:#F0F3F6;">)</span><span style="color:#91CBFF;">:</span><span style="color:#ADDCFF;"> spoofing</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> UP</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Physical</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 2</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> DOWN</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Physical</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 2</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> UP</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Protocol</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 2</span></span>
<span class="line"><span style="color:#FFB757;">The</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> interface</span><span style="color:#ADDCFF;"> that</span><span style="color:#ADDCFF;"> is</span><span style="color:#ADDCFF;"> DOWN</span><span style="color:#ADDCFF;"> in</span><span style="color:#ADDCFF;"> Protocol</span><span style="color:#ADDCFF;"> is</span><span style="color:#91CBFF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">Interface</span><span style="color:#ADDCFF;">                         IP</span><span style="color:#ADDCFF;"> Address/Mask</span><span style="color:#ADDCFF;">      Physical</span><span style="color:#ADDCFF;">   Protocol</span><span style="color:#F0F3F6;">  </span></span>
<span class="line"><span style="color:#FFB757;">GigabitEthernet0/0/0</span><span style="color:#ADDCFF;">              unassigned</span><span style="color:#ADDCFF;">           down</span><span style="color:#ADDCFF;">       down</span><span style="color:#F0F3F6;">      </span></span>
<span class="line"><span style="color:#FFB757;">GigabitEthernet0/0/1</span><span style="color:#ADDCFF;">              202.0.0.2/24</span><span style="color:#ADDCFF;">         up</span><span style="color:#ADDCFF;">         up</span><span style="color:#F0F3F6;">        </span></span>
<span class="line"><span style="color:#FFB757;">GigabitEthernet0/0/2</span><span style="color:#ADDCFF;">              unassigned</span><span style="color:#ADDCFF;">           down</span><span style="color:#ADDCFF;">       down</span><span style="color:#F0F3F6;">      </span></span>
<span class="line"><span style="color:#FFB757;">NULL0</span><span style="color:#ADDCFF;">                             unassigned</span><span style="color:#ADDCFF;">           up</span><span style="color:#ADDCFF;">         up</span><span style="color:#F0F3F6;">(</span><span style="color:#FFB757;">s</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>在 RT 上配置 NAT 配置。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[RT]nat </span><span style="color:#FF9492;">?</span></span>
<span class="line"><span style="color:#FFB757;">  address-group</span><span style="color:#ADDCFF;">    IP</span><span style="color:#ADDCFF;"> address-group</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> NAT</span></span>
<span class="line"><span style="color:#FFB757;">  alg</span><span style="color:#ADDCFF;">              Application</span><span style="color:#ADDCFF;"> level</span><span style="color:#ADDCFF;"> gateway</span></span>
<span class="line"><span style="color:#FFB757;">  dns-map</span><span style="color:#ADDCFF;">          DNS</span><span style="color:#ADDCFF;"> mapping</span></span>
<span class="line"><span style="color:#FFB757;">  filter-mode</span><span style="color:#ADDCFF;">      NAT</span><span style="color:#ADDCFF;"> filter</span><span style="color:#ADDCFF;"> mode</span></span>
<span class="line"><span style="color:#FFB757;">  link-down</span><span style="color:#ADDCFF;">        Link</span><span style="color:#ADDCFF;"> down</span><span style="color:#ADDCFF;"> reset</span><span style="color:#ADDCFF;"> session</span><span style="color:#ADDCFF;"> function</span></span>
<span class="line"><span style="color:#FFB757;">  mapping-mode</span><span style="color:#ADDCFF;">     NAT</span><span style="color:#ADDCFF;"> mapping</span><span style="color:#ADDCFF;"> mode</span></span>
<span class="line"><span style="color:#FFB757;">  overlap-address</span><span style="color:#ADDCFF;">  Overlap</span><span style="color:#ADDCFF;"> address</span><span style="color:#ADDCFF;"> pool</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> temp</span><span style="color:#ADDCFF;"> address</span><span style="color:#ADDCFF;"> pool</span><span style="color:#ADDCFF;"> map</span></span>
<span class="line"><span style="color:#FFB757;">  static</span><span style="color:#ADDCFF;">           Specify</span><span style="color:#ADDCFF;"> static</span><span style="color:#ADDCFF;"> NAT</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]interface GigabitEthernet 0/0/1</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/1]nat </span><span style="color:#FF9492;">?</span></span>
<span class="line"><span style="color:#FFB757;">  outbound</span><span style="color:#ADDCFF;">  Specify</span><span style="color:#ADDCFF;"> net</span><span style="color:#ADDCFF;"> address</span><span style="color:#ADDCFF;"> translation</span></span>
<span class="line"><span style="color:#FFB757;">  server</span><span style="color:#ADDCFF;">    Specify</span><span style="color:#ADDCFF;"> NAT</span><span style="color:#ADDCFF;"> server</span></span>
<span class="line"><span style="color:#FFB757;">  static</span><span style="color:#ADDCFF;">    Specify</span><span style="color:#ADDCFF;"> static</span><span style="color:#ADDCFF;"> NAT</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/1]nat static </span><span style="color:#FF9492;">?</span></span>
<span class="line"><span style="color:#FFB757;">  enable</span><span style="color:#ADDCFF;">    Enable</span><span style="color:#ADDCFF;"> function</span></span>
<span class="line"><span style="color:#FFB757;">  global</span><span style="color:#ADDCFF;">    Specify</span><span style="color:#ADDCFF;"> global</span><span style="color:#ADDCFF;"> information</span><span style="color:#ADDCFF;"> of</span><span style="color:#ADDCFF;"> NAT</span></span>
<span class="line"><span style="color:#FFB757;">  protocol</span><span style="color:#ADDCFF;">  Specify</span><span style="color:#ADDCFF;"> protocol</span></span>
<span class="line"><span style="color:#BDC4CC;"># 接口视图下配置静态NAT</span></span>
<span class="line"><span style="color:#BDC4CC;"># nat static global{ global-address} inside {host-address }</span></span>
<span class="line"><span style="color:#BDC4CC;"># global参数用于配置外部公有地址，inside参数用于配置内部私有地址</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/1]nat static global 202.0.0.3 inside 10.0.0.1</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/1]quit</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]ip route-static 0.0.0.0 0 202.0.0.2</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]display nat static</span></span>
<span class="line"><span style="color:#FFB757;">  Static</span><span style="color:#ADDCFF;"> Nat</span><span style="color:#ADDCFF;"> Information:</span></span>
<span class="line"><span style="color:#FFB757;">  Interface</span><span style="color:#ADDCFF;">  :</span><span style="color:#ADDCFF;"> GigabitEthernet0/0/1</span></span>
<span class="line"><span style="color:#FFB757;">    Global</span><span style="color:#ADDCFF;"> IP/Port</span><span style="color:#ADDCFF;">     :</span><span style="color:#ADDCFF;"> 202.0.0.3/----</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">    Inside</span><span style="color:#ADDCFF;"> IP/Port</span><span style="color:#ADDCFF;">     :</span><span style="color:#ADDCFF;"> 10.0.0.1/----</span></span>
<span class="line"><span style="color:#FFB757;">    Protocol</span><span style="color:#ADDCFF;"> :</span><span style="color:#91CBFF;"> ----</span><span style="color:#F0F3F6;">     </span></span>
<span class="line"><span style="color:#FFB757;">    VPN</span><span style="color:#ADDCFF;"> instance-name</span><span style="color:#ADDCFF;">  :</span><span style="color:#91CBFF;"> ----</span><span style="color:#F0F3F6;">                            </span></span>
<span class="line"><span style="color:#FFB757;">    Acl</span><span style="color:#ADDCFF;"> number</span><span style="color:#ADDCFF;">         :</span><span style="color:#91CBFF;"> ----</span></span>
<span class="line"><span style="color:#FFB757;">    Netmask</span><span style="color:#ADDCFF;">  :</span><span style="color:#91CBFF;"> 255.255.255.255</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#FFB757;">    Description</span><span style="color:#ADDCFF;"> :</span><span style="color:#91CBFF;"> ----</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">  Total</span><span style="color:#ADDCFF;"> :</span><span style="color:#91CBFF;">    1</span></span></code></pre></div><p>配置基本 NAT 只需要一条命令：把私有 IP 地址转换成公网 IP 地址，在接口视图下配置<code>nat static global global-address inside host-address</code>命令。默认路由是网关路由器上的常见配置。使用<code>display nat static</code>命令查看 RT 上的静态 NAT 配置。</p><p>在 PC 上验证联网功能。</p><figure><img src="`+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>抓包查看 NAT 转换效果。分别抓包 RT 的内网口<code>G0/0/0</code>和外网口<code>G0/0/1</code>的报文，看出发送的<code>Echo Request</code>报文和接收的<code>Echo Reply</code>报文都有进行 NAT 转换。</p><figure><img src="'+L+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+W+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="napt-实验" tabindex="-1"><a class="header-anchor" href="#napt-实验"><span>NAPT 实验</span></a></h3><h4 id="实验拓扑图-1" tabindex="-1"><a class="header-anchor" href="#实验拓扑图-1"><span>实验拓扑图</span></a></h4><figure><img src="'+a+`" alt="拓扑图" tabindex="0" loading="lazy"><figcaption>拓扑图</figcaption></figure><h4 id="实验要求-1" tabindex="-1"><a class="header-anchor" href="#实验要求-1"><span>实验要求</span></a></h4><ul><li>RT 使用 NAPT 功能</li><li>ISP 分配 4 个可用的公网地址：<code>202.0.0.3~202.0.0.6</code></li><li>VLAN 10 的用户使用两个公网地址</li><li>VLAN 20 的用户使用另外两个公网地址</li></ul><h4 id="实验步骤-1" tabindex="-1"><a class="header-anchor" href="#实验步骤-1"><span>实验步骤</span></a></h4><p>根据接口 IP 地址表，配置各个设备的接口地址。配置命令可参考上一个实验步骤 1。</p><table><thead><tr><th>设备</th><th>子接口</th><th>IP地址</th><th>网关</th></tr></thead><tbody><tr><td>PC10</td><td>Ethernet 0/0/1</td><td>10.0.10.10/24</td><td>10.0.10.1</td></tr><tr><td>PC20</td><td>Ethernet 0/0/1</td><td>10.0.20.20/24</td><td>10.0.20.1</td></tr><tr><td>RT</td><td>GE 0/0/0</td><td>202.0.0.1/24</td><td></td></tr><tr><td>RT</td><td>GE 0/0/1</td><td>10.0.10.1/24</td><td></td></tr><tr><td>RT</td><td>GE 0/0/2</td><td>10.0.20.1/24</td><td></td></tr><tr><td>ISP</td><td>GE 0/0/0</td><td>202.0.0.2/24</td><td></td></tr></tbody></table><p>在 RT 上配置 NAPT 配置。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[RT]acl 2010</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-acl-basic-2010]rule permit source 10.0.10.0 0.0.0.255</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-acl-basic-2010]quit</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]acl 2020</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-acl-basic-2020]rule permit source 10.0.20.0 0.0.0.255</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-acl-basic-2020]quit</span></span>
<span class="line"><span style="color:#BDC4CC;"># 创建地址池</span></span>
<span class="line"><span style="color:#BDC4CC;"># nat address-group group-index start-address end-address</span></span>
<span class="line"><span style="color:#BDC4CC;"># 配置公有地址范围，其中group-index为地址池编号，start-address、end-address分别为地址池起始地址、结束地址</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]nat address-group 1 202.0.0.3 202.0.0.4</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]nat address-group 2 202.0.0.5 202.0.0.6</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]interface GigabitEthernet 0/0/0</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/0]nat outbound </span><span style="color:#FF9492;">?</span></span>
<span class="line"><span style="color:#FFB757;">  INTEGER</span><span style="color:#F0F3F6;">&lt;2000-3999&gt;  </span><span style="color:#ADDCFF;">Apply</span><span style="color:#ADDCFF;"> basic</span><span style="color:#ADDCFF;"> or</span><span style="color:#ADDCFF;"> advanced</span><span style="color:#ADDCFF;"> ACL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/0]nat outbound 2010 address-group 1 </span><span style="color:#FF9492;">?</span></span>
<span class="line"><span style="color:#FFB757;">  no-pat</span><span style="color:#ADDCFF;">  Not</span><span style="color:#ADDCFF;"> use</span><span style="color:#ADDCFF;"> PAT</span></span>
<span class="line"><span style="color:#FF9492;">  &lt;</span><span style="color:#FFB757;">cr</span><span style="color:#F0F3F6;">&gt;    </span><span style="color:#ADDCFF;">Please</span><span style="color:#ADDCFF;"> press</span><span style="color:#ADDCFF;"> ENTER</span><span style="color:#ADDCFF;"> to</span><span style="color:#ADDCFF;"> execute</span><span style="color:#ADDCFF;"> command</span><span style="color:#F0F3F6;"> </span></span>
<span class="line"><span style="color:#BDC4CC;"># 接口下关联ACL与地址池进行动态地址转换，no-pat参数指定不进行端口转换</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/0]nat outbound 2010 address-group 1</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/0]nat outbound 2020 address-group 2</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/0]quit </span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]ip route-static 0.0.0.0 0 202.0.0.2</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]display nat address-group </span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;"> NAT</span><span style="color:#ADDCFF;"> Address-Group</span><span style="color:#ADDCFF;"> Information:</span></span>
<span class="line"><span style="color:#FFB757;"> --------------------------------------</span></span>
<span class="line"><span style="color:#FFB757;"> Index</span><span style="color:#ADDCFF;">   Start-address</span><span style="color:#ADDCFF;">      End-address</span></span>
<span class="line"><span style="color:#FFB757;"> --------------------------------------</span></span>
<span class="line"><span style="color:#FFB757;"> 1</span><span style="color:#91CBFF;">           202.0.0.3</span><span style="color:#91CBFF;">        202.0.0.4</span></span>
<span class="line"><span style="color:#FFB757;"> 2</span><span style="color:#91CBFF;">           202.0.0.5</span><span style="color:#91CBFF;">        202.0.0.6</span></span>
<span class="line"><span style="color:#FFB757;"> --------------------------------------</span></span>
<span class="line"><span style="color:#FFB757;">  Total</span><span style="color:#ADDCFF;"> :</span><span style="color:#91CBFF;"> 2</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]display nat outbound </span></span>
<span class="line"><span style="color:#FFB757;"> NAT</span><span style="color:#ADDCFF;"> Outbound</span><span style="color:#ADDCFF;"> Information:</span></span>
<span class="line"><span style="color:#FFB757;"> --------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#FFB757;"> Interface</span><span style="color:#ADDCFF;">                     Acl</span><span style="color:#ADDCFF;">     Address-group/IP/Interface</span><span style="color:#ADDCFF;">      Type</span></span>
<span class="line"><span style="color:#FFB757;"> --------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#FFB757;"> GigabitEthernet0/0/0</span><span style="color:#91CBFF;">         2010</span><span style="color:#91CBFF;">                              1</span><span style="color:#ADDCFF;">       pat</span></span>
<span class="line"><span style="color:#FFB757;"> GigabitEthernet0/0/0</span><span style="color:#91CBFF;">         2020</span><span style="color:#91CBFF;">                              2</span><span style="color:#ADDCFF;">       pat</span></span>
<span class="line"><span style="color:#FFB757;"> --------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#FFB757;">  Total</span><span style="color:#ADDCFF;"> :</span><span style="color:#91CBFF;"> 2</span></span></code></pre></div><p>在 NAPT 的配置中，使用基本 ACL 来指定私有 IP 地址范围。ACL 2010 指定 VLAN 10 的 IP 地址空间，ACL 2020 指定 VLAN 20 的 IP 地址空间。使用<code>nat address-group group-index start-address end-address</code>命令指定公网 IP 地址范围，分别指定了两个 NAT 地址组，编号分别选择了 1 和 2。在外网接口上，使用<code>nat outbound acl-number address-group group-index</code>，绑定 NAT 转换关系。</p><p>使用<code>display nat address-group</code>命令查看 RT 上的 NAT 地址组配置。命令<code>display nat outbound</code>查看出方向 NAT 的转换关系。</p><p>分别在 PC10 和 PC20 上验证上网功能。</p><figure><img src="`+U+'" alt="PC10验证结果" tabindex="0" loading="lazy"><figcaption>PC10验证结果</figcaption></figure><figure><img src="'+Q+'" alt="PC20验证结果" tabindex="0" loading="lazy"><figcaption>PC20验证结果</figcaption></figure><p>抓包查看 NAT 转换效果。分别抓包 RT 的内网口<code>G0/0/1</code>和外网口<code>G0/0/0</code>的报文，查看 VLAN 10 的用户出发送的<code>Echo Request</code>报文和接收的<code>Echo Reply</code>报文都有进行 NAT 转换。</p><figure><img src="'+M+'" alt="RT内网口VLAN10抓包" tabindex="0" loading="lazy"><figcaption>RT内网口VLAN10抓包</figcaption></figure><figure><img src="'+V+'" alt="RT外网口抓包" tabindex="0" loading="lazy"><figcaption>RT外网口抓包</figcaption></figure><h3 id="easyip-实验" tabindex="-1"><a class="header-anchor" href="#easyip-实验"><span>EasyIP 实验</span></a></h3><h4 id="实验拓扑图-2" tabindex="-1"><a class="header-anchor" href="#实验拓扑图-2"><span>实验拓扑图</span></a></h4><figure><img src="'+a+`" alt="拓扑图" tabindex="0" loading="lazy"><figcaption>拓扑图</figcaption></figure><h4 id="实验要求-2" tabindex="-1"><a class="header-anchor" href="#实验要求-2"><span>实验要求</span></a></h4><ul><li>RT 使用 Easy IP 功能，让内网所有地址通过<code>202.0.0.1</code>访问公网</li></ul><h4 id="实验步骤-2" tabindex="-1"><a class="header-anchor" href="#实验步骤-2"><span>实验步骤</span></a></h4><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">[RT]acl 2010</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-acl-basic-2010]rule permit source 10.0.0.0 0.0.255.255</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-acl-basic-2010]quit</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT]interface GigabitEthernet 0/0/1</span></span>
<span class="line"><span style="color:#F0F3F6;">[RT-GigabitEthernet0/0/1]nat outbound 2010</span></span></code></pre></div><h3 id="其它常用-nat-命令" tabindex="-1"><a class="header-anchor" href="#其它常用-nat-命令"><span>其它常用 NAT 命令</span></a></h3><p>NAT Server 是在接口视图下配置，命令格式为：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">nat</span><span style="color:#ADDCFF;"> server</span><span style="color:#ADDCFF;"> protocol</span><span style="color:#ADDCFF;"> {</span><span style="color:#ADDCFF;"> tcp</span><span style="color:#FF9492;">|</span><span style="color:#FFB757;">udp</span><span style="color:#ADDCFF;"> }</span><span style="color:#ADDCFF;"> global</span><span style="color:#ADDCFF;"> global-address</span><span style="color:#ADDCFF;"> global-port</span><span style="color:#ADDCFF;"> inside</span><span style="color:#ADDCFF;"> host-address</span><span style="color:#ADDCFF;"> host-port</span></span></code></pre></div><p>检查 NAT Server 配置信息命令：<code>display nat server</code>。</p><p>检查 NAT 会话命令：<code>display nat session all</code>。</p><p>启动 NAT ALG 功能命令：<code>nat alg all enable</code>。</p><p>查看 NAT ALG 功能命令：<code>display nat alg</code>。</p>`,179)]))}const K=n(O,[["render",Z],["__file","NAT详解.html.vue"]]),X=JSON.parse('{"path":"/network/NAT%E8%AF%A6%E8%A7%A3.html","title":"NAT详解","lang":"zh-CN","frontmatter":{"title":"NAT详解","date":"2025-03-01T00:00:00.000Z","tags":"network","categories":"计算机网络","order":13,"description":"随着互联网用户的快速增长，全球的公网 IPv4 地址已耗尽。在 IPv4 地址耗尽前，使用 NAT（Network Address Translation）技术解决 IPv4 地址不够用的问题，并持续至今。 NAT 技术就是将私有地址转换成公网地址，使私有网络中的主机可以通过少量公网地址访问互联网。 但 NAT只是一种过渡技术，从根本上解决问题，是采用...","head":[["meta",{"property":"og:url","content":"https://0oWSQo0.github.io/wsq-blog/network/NAT%E8%AF%A6%E8%A7%A3.html"}],["meta",{"property":"og:title","content":"NAT详解"}],["meta",{"property":"og:description","content":"随着互联网用户的快速增长，全球的公网 IPv4 地址已耗尽。在 IPv4 地址耗尽前，使用 NAT（Network Address Translation）技术解决 IPv4 地址不够用的问题，并持续至今。 NAT 技术就是将私有地址转换成公网地址，使私有网络中的主机可以通过少量公网地址访问互联网。 但 NAT只是一种过渡技术，从根本上解决问题，是采用..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-05-14T10:35:45.000Z"}],["meta",{"property":"article:published_time","content":"2025-03-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-05-14T10:35:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"NAT详解\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-05-14T10:35:45.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://0oWSQo0.github.com\\"}]}"]]},"headers":[{"level":2,"title":"NAT 技术","slug":"nat-技术","link":"#nat-技术","children":[]},{"level":2,"title":"基本 NAT","slug":"基本-nat","link":"#基本-nat","children":[{"level":3,"title":"动态 NAT","slug":"动态-nat","link":"#动态-nat","children":[]}]},{"level":2,"title":"NAPT","slug":"napt","link":"#napt","children":[{"level":3,"title":"举个栗子","slug":"举个栗子","link":"#举个栗子","children":[]}]},{"level":2,"title":"Easy IP","slug":"easy-ip","link":"#easy-ip","children":[]},{"level":2,"title":"NAT Server","slug":"nat-server","link":"#nat-server","children":[{"level":3,"title":"举个栗子","slug":"举个栗子-1","link":"#举个栗子-1","children":[]}]},{"level":2,"title":"NAT ALG","slug":"nat-alg","link":"#nat-alg","children":[{"level":3,"title":"举个栗子：ALG 处理 FTP 的 Active 模式","slug":"举个栗子-alg-处理-ftp-的-active-模式","link":"#举个栗子-alg-处理-ftp-的-active-模式","children":[]}]},{"level":2,"title":"NAT其它常见问题","slug":"nat其它常见问题","link":"#nat其它常见问题","children":[{"level":3,"title":"NAT 缺点","slug":"nat-缺点","link":"#nat-缺点","children":[]},{"level":3,"title":"内网穿透","slug":"内网穿透","link":"#内网穿透","children":[]},{"level":3,"title":"为什么我在公司里访问不了家里的电脑？","slug":"为什么我在公司里访问不了家里的电脑","link":"#为什么我在公司里访问不了家里的电脑","children":[]},{"level":3,"title":"两个内网的聊天软件如何建立通讯","slug":"两个内网的聊天软件如何建立通讯","link":"#两个内网的聊天软件如何建立通讯","children":[]},{"level":3,"title":"两个内网的应用如何直接建立连接","slug":"两个内网的应用如何直接建立连接","link":"#两个内网的应用如何直接建立连接","children":[]}]},{"level":2,"title":"实战","slug":"实战","link":"#实战","children":[{"level":3,"title":"基本 NAT 实验","slug":"基本-nat-实验","link":"#基本-nat-实验","children":[]},{"level":3,"title":"NAPT 实验","slug":"napt-实验","link":"#napt-实验","children":[]},{"level":3,"title":"EasyIP 实验","slug":"easyip-实验","link":"#easyip-实验","children":[]},{"level":3,"title":"其它常用 NAT 命令","slug":"其它常用-nat-命令","link":"#其它常用-nat-命令","children":[]}]}],"git":{"createdTime":1730426129000,"updatedTime":1747218945000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":3},{"name":"WSQ-LK","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":21.9,"words":6569},"filePathRelative":"network/NAT详解.md","localizedDate":"2025年3月1日","autoDesc":true}');export{K as comp,X as data};
