import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,d as l,o as e}from"./app-Coac0FJ0.js";const o={};function p(t,s){return e(),n("div",null,s[0]||(s[0]=[l(`<h2 id="harbor" tabindex="-1"><a class="header-anchor" href="#harbor"><span>harbor</span></a></h2><p>下载地址：<a href="https://github.com/goharbor/harbor/releases" target="_blank" rel="noopener noreferrer">github</a>。</p><h3 id="下载安装包" tabindex="-1"><a class="header-anchor" href="#下载安装包"><span>下载安装包</span></a></h3><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#91CBFF;">cd</span><span style="color:#ADDCFF;"> /usr/local</span></span>
<span class="line"><span style="color:#FFB757;">wget</span><span style="color:#ADDCFF;"> https://github.com/goharbor/harbor/releases/download/v2.10.3/harbor-offline-installer-v2.10.3.tgz</span></span>
<span class="line"><span style="color:#FFB757;">tar</span><span style="color:#91CBFF;"> -zxvf</span><span style="color:#ADDCFF;"> harbor-offline-installer-v2.10.3.tgz</span></span></code></pre></div><h3 id="编辑配置文件" tabindex="-1"><a class="header-anchor" href="#编辑配置文件"><span>编辑配置文件</span></a></h3><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#91CBFF;">cd</span><span style="color:#ADDCFF;"> harbor</span></span>
<span class="line"><span style="color:#FFB757;">cp</span><span style="color:#ADDCFF;"> harbor.yml.tmp</span><span style="color:#ADDCFF;"> harbor.yml</span></span>
<span class="line"><span style="color:#FFB757;">vim</span><span style="color:#ADDCFF;"> harbor.yml</span></span></code></pre></div><p>首先要修改<code>hostname</code>为机器地址，使用的是<code>http</code>，所以<code>https</code>部分需要注掉，端口自定义。</p><div class="language-yaml" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#72F088;">hostname</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">101.42.8.4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># http related config</span></span>
<span class="line"><span style="color:#72F088;">http</span><span style="color:#F0F3F6;">:</span></span>
<span class="line"><span style="color:#BDC4CC;">  # port for http, default is 80. If https enabled, this port will redirect to https port</span></span>
<span class="line"><span style="color:#72F088;">  port</span><span style="color:#F0F3F6;">: </span><span style="color:#91CBFF;">5001</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># https related config</span></span>
<span class="line"><span style="color:#BDC4CC;"># https:</span></span>
<span class="line"><span style="color:#BDC4CC;">  # https port for harbor, default is 443</span></span>
<span class="line"><span style="color:#BDC4CC;">  # port: 443</span></span>
<span class="line"><span style="color:#BDC4CC;">  # The path of cert and key files for nginx</span></span>
<span class="line"><span style="color:#BDC4CC;">  # certificate: /your/certificate/path</span></span>
<span class="line"><span style="color:#BDC4CC;">  # private_key: /your/private/key/path</span></span>
<span class="line"><span style="color:#BDC4CC;">  # enable strong ssl ciphers (default: false)</span></span>
<span class="line"><span style="color:#BDC4CC;">  # strong_ssl_ciphers: false</span></span>
<span class="line"><span style="color:#BDC4CC;">  # # Uncomment following will enable tls communication between all harbor components</span></span>
<span class="line"><span style="color:#BDC4CC;"># internal_tls:</span></span>
<span class="line"><span style="color:#BDC4CC;">#   # set enabled to true means internal tls is enabled</span></span>
<span class="line"><span style="color:#BDC4CC;">#   enabled: true</span></span>
<span class="line"><span style="color:#BDC4CC;">#   # put your cert and key files on dir</span></span>
<span class="line"><span style="color:#BDC4CC;">#   dir: /etc/harbor/tls/internal</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># Uncomment external_url if you want to enable external proxy</span></span>
<span class="line"><span style="color:#BDC4CC;"># And when it enabled the hostname will no longer used</span></span>
<span class="line"><span style="color:#BDC4CC;"># external_url: https://reg.mydomain.com:8433</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># The initial password of Harbor admin</span></span>
<span class="line"><span style="color:#BDC4CC;"># It only works in first time to install harbor</span></span>
<span class="line"><span style="color:#BDC4CC;"># Remember Change the admin password from UI after launching Harbor.</span></span>
<span class="line"><span style="color:#BDC4CC;"># 可以修改登录密码</span></span>
<span class="line"><span style="color:#72F088;">harbor_admin_password</span><span style="color:#F0F3F6;">: </span><span style="color:#ADDCFF;">Harbor12345</span></span>
<span class="line"></span>
<span class="line"><span style="color:#91CBFF;">...</span></span></code></pre></div><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装"><span>安装</span></a></h3><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># Harbor安装环境预处理</span></span>
<span class="line"><span style="color:#FFB757;">./prepare</span></span>
<span class="line"><span style="color:#BDC4CC;"># 安装并启动Harbor</span></span>
<span class="line"><span style="color:#FFB757;">./install.sh</span></span>
<span class="line"><span style="color:#BDC4CC;"># 检查是否安装成功（应该是启动9个容器）要在harbor目录下操作，否则docker-compose会又问题；</span></span>
<span class="line"><span style="color:#FFB757;">docker-compose</span><span style="color:#ADDCFF;"> ps</span></span></code></pre></div><p>访问<code>http://101.42.8.4:5001</code>。默认用户名和密码(admin Harbor12345)，也可以从<code>harbor.yml</code>中找到。</p><h3 id="修改-docker-配置" tabindex="-1"><a class="header-anchor" href="#修改-docker-配置"><span>修改 Docker 配置</span></a></h3><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">vim</span><span style="color:#ADDCFF;"> /etc/docker/daemon.json</span></span></code></pre></div><div class="language-json" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">{</span></span>
<span class="line"><span style="color:#72F088;">  &quot;insecure-registries&quot;</span><span style="color:#F0F3F6;">: [</span><span style="color:#ADDCFF;">&quot;101.42.8.4:5001&quot;</span><span style="color:#F0F3F6;">],</span></span>
<span class="line"><span style="color:#72F088;">  &quot;registry-mirrors&quot;</span><span style="color:#F0F3F6;">: [</span><span style="color:#ADDCFF;">&quot;https://mirror.css.tencentyun.com&quot;</span><span style="color:#F0F3F6;">]</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>重启 Docker 服务</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">systemctl</span><span style="color:#ADDCFF;"> restart</span><span style="color:#ADDCFF;"> docker</span></span>
<span class="line"><span style="color:#91CBFF;">cd</span><span style="color:#ADDCFF;"> /usr/local/harbor</span></span>
<span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> compose</span><span style="color:#ADDCFF;"> up</span><span style="color:#91CBFF;"> -d</span></span></code></pre></div><p>登录 harbor 服务：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> login</span><span style="color:#91CBFF;"> -u</span><span style="color:#ADDCFF;"> admin</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> Harbor12345</span><span style="color:#ADDCFF;"> 101.42.8.4:5001</span></span></code></pre></div><h3 id="上传镜像" tabindex="-1"><a class="header-anchor" href="#上传镜像"><span>上传镜像</span></a></h3><p>找到你要上传的镜像，给要上传的镜像打个标签，然后推送。</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># wsq 是在 harbor 管理界面中新建的项目名</span></span>
<span class="line"><span style="color:#BDC4CC;"># docker tag SOURCE_IMAGE[:TAG] 101.42.8.4:5001/wsq/REPOSITORY[:TAG]</span></span>
<span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> tag</span><span style="color:#ADDCFF;"> nginx:latest</span><span style="color:#ADDCFF;"> 101.42.8.4:5001/wsq/nginx:latest</span></span>
<span class="line"><span style="color:#BDC4CC;"># docker push 101.42.8.4:5001/wsq/REPOSITORY[:TAG]</span></span>
<span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> push</span><span style="color:#ADDCFF;"> 101.42.8.4:5001/wsq/nginx:latest</span></span></code></pre></div><p>推送成功后可在harbor界面上看到我们推送的镜像。</p><h3 id="拉取镜像" tabindex="-1"><a class="header-anchor" href="#拉取镜像"><span>拉取镜像</span></a></h3><p>方法一：在 harbor 管理界面上可以查看拉取命令。</p><p>方法二：</p><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#BDC4CC;"># 镜像名your-ip:端口/项目名称/新的镜像名:版本</span></span>
<span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> pull</span><span style="color:#ADDCFF;"> 101.42.8.4:5001/wsq/nginx:latest</span></span></code></pre></div><h3 id="删除镜像" tabindex="-1"><a class="header-anchor" href="#删除镜像"><span>删除镜像</span></a></h3><p>可以在 harbor 管理界面上删除仓库镜像。</p><h2 id="jenkins" tabindex="-1"><a class="header-anchor" href="#jenkins"><span>Jenkins</span></a></h2><div class="language-shell" data-highlighter="shiki" data-ext="shell" data-title="shell" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> pull</span><span style="color:#ADDCFF;"> jenkins/jenkins</span></span>
<span class="line"><span style="color:#FFB757;">mkdir</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> /data/jenkins/jenkins_home</span></span>
<span class="line"><span style="color:#FFB757;">chmod</span><span style="color:#91CBFF;">  777</span><span style="color:#91CBFF;"> -R</span><span style="color:#ADDCFF;">  /data/jenkins/jenkins_home</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFB757;">docker</span><span style="color:#ADDCFF;"> run</span><span style="color:#91CBFF;"> -d</span><span style="color:#91CBFF;"> --name</span><span style="color:#ADDCFF;"> jenkins</span><span style="color:#FF9492;"> \\</span></span>
<span class="line"><span style="color:#91CBFF;">  -p</span><span style="color:#ADDCFF;"> 5001:8080</span><span style="color:#91CBFF;"> -p</span><span style="color:#ADDCFF;"> 5002:50000</span><span style="color:#FF9492;"> \\</span></span>
<span class="line"><span style="color:#91CBFF;">  -e</span><span style="color:#ADDCFF;"> JAVA_OPTS=-Duser.timezone=Asia/Shanghai</span><span style="color:#FF9492;"> \\</span></span>
<span class="line"><span style="color:#91CBFF;">  -v</span><span style="color:#ADDCFF;"> /data/jenkins/jenkins_home:/var/jenkins_home</span><span style="color:#FF9492;"> \\</span></span>
<span class="line"><span style="color:#91CBFF;">  --privileged=true</span><span style="color:#FF9492;"> \\</span></span>
<span class="line"><span style="color:#ADDCFF;">  jenkins/jenkins</span></span>
<span class="line"><span style="color:#BDC4CC;">#注意这里挂载目录的 /var/jenkins是docker启动的目录  rpm为 /var/lib/jenkins</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BDC4CC;"># 查看管理员登录密码</span></span>
<span class="line"><span style="color:#FFB757;">cat</span><span style="color:#ADDCFF;"> /data/jenkins/jenkins_home/secrets/initialAdminPassword</span></span></code></pre></div>`,30)]))}const i=a(o,[["render",p],["__file","热门镜像安装.html.vue"]]),h=JSON.parse('{"path":"/linux/docker/%E7%83%AD%E9%97%A8%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85.html","title":"","lang":"zh-CN","frontmatter":{"index":false,"description":"harbor 下载地址：github。 下载安装包 编辑配置文件 首先要修改hostname为机器地址，使用的是http，所以https部分需要注掉，端口自定义。 安装 访问http://101.42.8.4:5001。默认用户名和密码(admin Harbor12345)，也可以从harbor.yml中找到。 修改 Docker 配置 重启 Dock...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/linux/docker/%E7%83%AD%E9%97%A8%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85.html"}],["meta",{"property":"og:description","content":"harbor 下载地址：github。 下载安装包 编辑配置文件 首先要修改hostname为机器地址，使用的是http，所以https部分需要注掉，端口自定义。 安装 访问http://101.42.8.4:5001。默认用户名和密码(admin Harbor12345)，也可以从harbor.yml中找到。 修改 Docker 配置 重启 Dock..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-14T07:08:17.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-14T07:08:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-14T07:08:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"harbor","slug":"harbor","link":"#harbor","children":[{"level":3,"title":"下载安装包","slug":"下载安装包","link":"#下载安装包","children":[]},{"level":3,"title":"编辑配置文件","slug":"编辑配置文件","link":"#编辑配置文件","children":[]},{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"修改 Docker 配置","slug":"修改-docker-配置","link":"#修改-docker-配置","children":[]},{"level":3,"title":"上传镜像","slug":"上传镜像","link":"#上传镜像","children":[]},{"level":3,"title":"拉取镜像","slug":"拉取镜像","link":"#拉取镜像","children":[]},{"level":3,"title":"删除镜像","slug":"删除镜像","link":"#删除镜像","children":[]}]},{"level":2,"title":"Jenkins","slug":"jenkins","link":"#jenkins","children":[]}],"git":{"createdTime":1723619297000,"updatedTime":1723619297000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":1}]},"readingTime":{"minutes":1.9,"words":570},"filePathRelative":"linux/docker/热门镜像安装.md","localizedDate":"2024年8月14日","autoDesc":true}');export{i as comp,h as data};
