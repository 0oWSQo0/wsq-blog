import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as e}from"./app-Coac0FJ0.js";const p="/wsq-blog/assets/6-DGuUczLW.png",o={};function t(F,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="webservlet注解" tabindex="-1"><a class="header-anchor" href="#webservlet注解"><span>@WebServlet注解</span></a></h2><p><code>web.xml</code>可以将所有的 Servlet 的配置集中进行管理，但是若项目中 Servelt 数量较多时，<code>web.xml</code>的配置会变得十分的冗长。这种情况下，注解就是一种更好的选择。</p><p>与 XML 不同，注解不需要依赖于配置文件，它可以直接在类中使用，其配置只对当前类有效，这样就避免了集中管理造成的配置冗长问题。</p><p>Servlet3.0 中增加了注解支持，例如：<code>@WebServlet、@WebInitParm、@WebFilter</code>和<code>@WebLitener</code>等，这使得<code>web.xml</code>从<code>Servlet3.0</code>开始不再是必选项了。</p><h3 id="webservlet-注解的属性" tabindex="-1"><a class="header-anchor" href="#webservlet-注解的属性"><span>@WebServlet 注解的属性</span></a></h3><p><code>@WebServlet</code>用于将一个类声明为 Servlet，该注解会在部署时被容器处理，容器根据其具体的属性配置将相应的类部署为 Servlet。该注解的一些常用属性：</p><table><thead><tr><th>属性名</th><th>类型</th><th>标签</th><th>描述</th><th>是否必须</th></tr></thead><tbody><tr><td>name</td><td>String</td><td><code>&lt;servlet-name&gt;</code></td><td>指定 Servlet 的 name 属性</td><td>否</td></tr><tr><td>value</td><td>String[]</td><td><code>&lt;url-pattern&gt;</code></td><td>等价于 urlPatterns 属性，两者不能同时指定</td><td>是</td></tr><tr><td>urlPatterns</td><td>String[]</td><td><code>&lt;url-pattern&gt;</code></td><td>指定一组 Servlet 的 URL 匹配模式</td><td>是</td></tr><tr><td>loadOnStartup</td><td>int</td><td><code>&lt;load-on-startup&gt;</code></td><td>指定 Servlet 的加载顺序</td><td>否</td></tr><tr><td>initParams</td><td>WebInitParam[ ]</td><td><code>&lt;init-param&gt;</code></td><td>指定一组 Servlet 初始化参数</td><td>否</td></tr><tr><td>asyncSupported</td><td>boolean</td><td><code>&lt;async-supported&gt;</code></td><td>声明 Servlet 是否支持异步操作模式</td><td>否</td></tr><tr><td>description</td><td>String</td><td><code>&lt;description&gt;</code></td><td>指定该 Servlet 的描述信息</td><td>否</td></tr><tr><td>displayName</td><td>String</td><td><code>&lt;display-name&gt;</code></td><td>指定该 Servlet 的显示名</td><td>否</td></tr></tbody></table><h3 id="webservlet-注解的使用" tabindex="-1"><a class="header-anchor" href="#webservlet-注解的使用"><span>@WebServlet 注解的使用</span></a></h3><h3 id="_1-启用注解支持" tabindex="-1"><a class="header-anchor" href="#_1-启用注解支持"><span>1. 启用注解支持</span></a></h3><p><code>web.xml</code>的顶层标签<code>&lt;web-app&gt;</code>中有一个属性：<code>metadata-complete</code>，该属性用于指定当前<code>web.xml</code>是否是完全的。若该属性设置为<code>true</code>，则容器在部署时将只依赖<code>web.xml</code>，忽略所有的注解。若不配置该属性，或者将其设置为<code>false</code>，则表示启用注解支持。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">web-app</span><span style="color:#91CBFF;"> xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;WebApp_ID&quot;</span><span style="color:#91CBFF;"> metadata-complete</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;false&quot;</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;4.0&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- metadata-complete取值为true，表示关闭注解支持 --&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- metadata-complete取值为false，表示启用注解支持 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">web-app</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>由于<code>metadata-complete</code>属性的默认值是<code>false</code>，即默认启用 Servlet 注解支持，所以默认情况下，使用该注解时，不必创建<code>web.xml</code>文件。</p><h4 id="_2-使用-webservlet-注解" tabindex="-1"><a class="header-anchor" href="#_2-使用-webservlet-注解"><span>2. 使用 @WebServlet 注解</span></a></h4><p><code>@WebServlet</code>属于类级别的注解，标注在继承了<code>HttpServlet</code>的类之上。常用的写法是将 Servlet 的相对请求路径（即<code>value</code>）直接写在注解内。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">Web</span><span style="color:#DBB7FF;"> Servlet</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/MyServlet&quot;</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>该写法省略了<code>urlPatterns</code>属性名，其完整的写法如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">WebServlet</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">urlPatterns</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;/MyServlet&quot;</span><span style="color:#F0F3F6;">)</span></span></code></pre></div><p>如果 <code>@WebServlet</code> 中需要设置多个属性，则属性之间必须使用逗号隔开。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">WebServlet</span><span style="color:#F0F3F6;">(</span></span>
<span class="line"><span style="color:#91CBFF;">		asyncSupported</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> true</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#91CBFF;">		name</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;myServlet&quot;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#91CBFF;">		description</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;name描述&quot;</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#91CBFF;">		loadOnStartup</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1</span><span style="color:#F0F3F6;">,</span></span>
<span class="line"><span style="color:#91CBFF;">		urlPatterns</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> { </span><span style="color:#ADDCFF;">&quot;/MyServlet&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;/*&quot;</span><span style="color:#F0F3F6;"> },</span></span>
<span class="line"><span style="color:#91CBFF;">    initParams</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">        @</span><span style="color:#FF9492;">WebInitParam</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">name</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;百度&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">value</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;www.baidu.com&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">description</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;init参数1&quot;</span><span style="color:#F0F3F6;">),</span></span>
<span class="line"><span style="color:#F0F3F6;">        @</span><span style="color:#FF9492;">WebInitParam</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">name</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;京东&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">value</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;www.jd.com&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#91CBFF;">description</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;init参数2&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#F0F3F6;">    })</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> MyServlet</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> HttpServlet</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> final</span><span style="color:#FF9492;"> long</span><span style="color:#F0F3F6;"> serialVersionUID</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1L</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doGet</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">request</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">response</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">            throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doPost</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">request</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">response</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">            throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>注意事项：</p><ul><li>通过实现<code>Serlvet</code>接口或继承<code>GenericServlet</code>创建的<code>Servlet</code>类无法使用<code>@WebServlet</code>注解。</li><li>使用<code>@WebServlet</code>注解配置的<code>Servlet</code>类，不要在<code>web.xml</code>文件中再次配置该<code>Servlet</code>相关属性。若同时使用<code>web.xml</code>与<code>@WebServlet</code>配置同一<code>Servlet</code>类，则<code>web.xml</code>中<code>&lt;servlet-name&gt;</code>的值与注解中<code>name</code>取值不能相同，否则容器会忽略注解中的配置。</li></ul><h3 id="webservlet-注解-和-web-xml-的优缺点" tabindex="-1"><a class="header-anchor" href="#webservlet-注解-和-web-xml-的优缺点"><span>@WebServlet 注解 和 web.xml 的优缺点</span></a></h3><p><code>@WebServlet</code>注解配置<code>Servlet</code></p><ul><li>优点：<code>@WebServlet</code>直接在<code>Servlet</code>类中使用，代码量少，配置简单。每个类只关注自身业务逻辑，与其他<code>Servlet</code>类互不干扰，适合多人同时开发。</li><li>缺点：<code>Servlet</code>较多时，每个<code>Servlet</code>的配置分布在各自的类中，不便于查找和修改。</li></ul><p><code>web.xml</code>配置文件配置<code>Servlet</code></p><ul><li>优点：集中管理<code>Servlet</code>的配置，便于查找和修改。</li><li>缺点：代码较繁琐，可读性不强，不易于理解。</li></ul><h2 id="servlet生命周期" tabindex="-1"><a class="header-anchor" href="#servlet生命周期"><span>Servlet生命周期</span></a></h2><p><code>Servlet</code>的生命周期就是<code>Servlet</code>从创建到销毁的过程。<code>Servlet</code>的生命周期由<code>Servlet</code>容器管理，主要分为以下 3 个阶段：</p><ul><li>初始化阶段</li><li>运行时阶段</li><li>销毁阶段</li></ul><p>在<code>javax.servlet.Servlet</code>接口中定义了 3 个方法：<code>init()、service()、destory()</code>，它们分别在<code>Servlet</code>生命周期的不同阶段被<code>Servlet</code>容器调用。</p><h3 id="初始化阶段" tabindex="-1"><a class="header-anchor" href="#初始化阶段"><span>初始化阶段</span></a></h3><p><code>Servlet</code>初始化是其生命周期的第一个阶段，也是其他阶段的基础。只有完成了初始化，<code>Servlet</code>才能处理来自客户端的请求。</p><p><code>Servlet</code>初始化阶段分为 2 步：</p><ul><li>加载和实例化<code>Servlet</code></li><li>调用<code>init()</code>方法进行初始化</li></ul><ol><li>加载和实例化<code>Servlet</code><br><code>Servlet</code>容器负责加载和实例化<code>Servlet</code>。当容器启动或首次请求某个<code>Servlet</code>时，容器会读取<code>web.xml</code>或<code>@WebServlet</code>中的配置信息，对指定的<code>Servlet</code>进行加载。加载成功后，容器会通过反射对<code>Servlet</code>进行实例化。<br> 因为<code>Servlet</code>容器是通过 Java 的反射 API 来创建<code>Servlet</code>实例的，需要调用<code>Servlet</code>的默认构造方法（即不带参数的构造方法），所以在编写<code>Servlet</code>类时，不能只提供一个带参数的构造方法。</li><li>调用<code>init()</code>方法进行初始化<br> 加载和实例化完成后，<code>Servlet</code>容器调用<code>init()</code>方法初始化<code>Servlet</code>实例。<br> 初始化的目的：让<code>Servlet</code>实例在处理请求之前完成一些初始化工作，例如建立数据库连接，获取配置信息等。<br> 在<code>Servlet</code>的整个生命周期内，<code>init()</code>方法只能被调用一次。<br> 初始化期间，<code>Servlet</code>实例可以通过<code>ServletConfig</code>对象获取在<code>web.xml</code>或者<code>@WebServlet</code>中配置的初始化参数。</li></ol><h3 id="运行时阶段" tabindex="-1"><a class="header-anchor" href="#运行时阶段"><span>运行时阶段</span></a></h3><p>运行时阶段是<code>Servlet</code>生命周期中最重要的阶段。<code>Servlet</code>容器接收到来自客户端请求时，容器会针对该请求分别创建一个<code>ServletRequst</code>对象和<code>ServletResponse</code>对象，将它们以参数的形式传入<code>service()</code>方法内，并调用该方法对请求进行处理。</p><p>这里需要注意的是，执行<code>service()</code>方法前，<code>init()</code>方法必须已成功执行。</p><p>在<code>service()</code>方法中，<code>Servlet</code>通过<code>ServletRequst</code>对象获取客户端的相关信息和请求信息。在请求处理完成后，通过<code>ServletResponse</code>对象将响应信息进行包装，返回给客户端。当<code>Servlet</code>容器将响应信息返回给客户端后，<code>ServletRequst</code>对象与<code>ServletResponse</code>对象就会被销毁。</p><p>在<code>Servlet</code>的整个生命周期内，对于<code>Servlet</code>的每一次请求，<code>Servlet</code>容器都会调用一次<code>service()</code>方法，并创建新的<code>ServletRequest</code>和<code>ServletResponse</code>对象。即<code>service()</code>方法在<code>Servlet</code>的整个生命周期中会被调用多次。</p><h3 id="销毁阶段" tabindex="-1"><a class="header-anchor" href="#销毁阶段"><span>销毁阶段</span></a></h3><p>当<code>Servlet</code>容器关闭、重启或移除<code>Servlet</code>实例时，容器就会调用<code>destory()</code>方法，释放该实例使用的资源，例如：关闭数据库连接，关闭文件的输入流和输出流等，随后该实例被 Java 的垃圾收集器所回收。</p><p>对于每个<code>Servlet</code>实例来说，<code>destory()</code>方法只能被调用一次。</p><h3 id="servlet-生命周期执行流程" tabindex="-1"><a class="header-anchor" href="#servlet-生命周期执行流程"><span>Servlet 生命周期执行流程</span></a></h3><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在<code>Servlet</code>的整个生命周期中，创建<code>Servlet</code>实例、<code>init()</code>方法和<code>destory()</code>方法都只执行一次。当初始化完成后，<code>Servlet</code>容器会将该实例保存在内存中，通过调用它的<code>service()</code>方法，为接收到的请求服务。</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例"><span>示例</span></a></h3><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">package</span><span style="color:#F0F3F6;"> net.biancheng.www;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> java.io.IOException;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> java.io.PrintWriter;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.ServletException;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.annotation.WebInitParam;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.annotation.WebServlet;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.http.HttpServlet;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.http.HttpServletRequest;</span></span>
<span class="line"><span style="color:#FF9492;">import</span><span style="color:#F0F3F6;"> javax.servlet.http.HttpServletResponse;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">WebServlet</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/MyServlet&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> MyServlet</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> HttpServlet</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> final</span><span style="color:#FF9492;"> long</span><span style="color:#F0F3F6;"> serialVersionUID</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1L</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> int</span><span style="color:#F0F3F6;"> initCount</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 0</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> int</span><span style="color:#F0F3F6;"> httpCount</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 0</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> int</span><span style="color:#F0F3F6;"> destoryCount</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 0</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> destroy</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#F0F3F6;">        destoryCount</span><span style="color:#FF9492;">++</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">        super</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">destroy</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 向控制台输出destory方法被调用次数</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;**********************************destroy方法：&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> destoryCount </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;*******************************&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> init</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException {</span></span>
<span class="line"><span style="color:#F0F3F6;">        initCount</span><span style="color:#FF9492;">++</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">        super</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">init</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 向控制台输出init方法被调用次数</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;init方法：&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> initCount);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doGet</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">        httpCount</span><span style="color:#FF9492;">++</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 控制台输出doGet方法次数</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;doGet方法：&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> httpCount);</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 设置返回页面格式与字符集</span></span>
<span class="line"><span style="color:#F0F3F6;">        resp.</span><span style="color:#DBB7FF;">setContentType</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;text/html;charset=UTF-8&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        PrintWriter</span><span style="color:#F0F3F6;"> writer</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> resp.</span><span style="color:#DBB7FF;">getWriter</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 向页面输出</span></span>
<span class="line"><span style="color:#F0F3F6;">        writer.</span><span style="color:#DBB7FF;">write</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;初始化次数:&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> initCount </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;&lt;br/&gt;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#ADDCFF;"> &quot;处理请求次数:&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> httpCount </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;&lt;br/&gt;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#ADDCFF;"> &quot;销毁次数:&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> destoryCount);</span></span>
<span class="line"><span style="color:#F0F3F6;">        writer.</span><span style="color:#DBB7FF;">close</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doPost</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">request</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">response</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">            throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="load-on-startup元素-控制servlet启动优先级" tabindex="-1"><a class="header-anchor" href="#load-on-startup元素-控制servlet启动优先级"><span>load-on-startup元素：控制Servlet启动优先级</span></a></h2><p><code>load-on-startup</code>是<code>web.xml</code>中的一个节点，是<code>servlet</code>元素的子元素，用来标记<code>Servlet</code>容器启动时是否初始化当前<code>Servlet</code>，以及当前<code>Servlet</code>的初始化顺序。</p><p><code>load-on-startup</code>元素取值规则如下：</p><ul><li>它的取值必须是一个整数</li><li>当值小于 0 或者没有指定时，则表示容器在该<code>Servlet</code>被首次请求时才会被加载</li><li>当值大于 0 或等于 0 时，表示容器在启动时就加载并初始化该<code>Servlet</code>，取值越小，优先级越高</li><li>当取值相同时，容器就会自行选择顺序进行加载</li></ul><p><code>@WebServlet</code>注解的<code>loadOnStartup</code>属性与<code>web.xml</code>中的<code>load-on-startup</code>元素相对应，取值的规则和含义相同。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> MyServlet1</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> HttpServlet</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doGet</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doPost</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#DBB7FF;">        doGet</span><span style="color:#F0F3F6;">(req, resp);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> destroy</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">this</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">getServletName</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;：销毁&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> init</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException {</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">this</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">getServletName</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;：初始化完成&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">web-app</span><span style="color:#91CBFF;"> xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;WebApp_ID&quot;</span><span style="color:#91CBFF;"> metadata-complete</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;false&quot;</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;4.0&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet1&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet1&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!-- load-on-startup 取值0 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;0&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet2&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet1&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!-- load-on-startup 取值1 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;1&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet3&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet1&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!-- load-on-startup 取值2 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;2&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet4&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet1&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">        &lt;!-- load-on-startup 取值-1--&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;-1&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!--不设置 load-on-startup ，去默认值 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet5&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet1&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet1&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/MyServlet1&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet2&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/MyServlet2&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet3&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/MyServlet3&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet4&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/MyServlet4&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet5&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/MyServlet5&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">web-app</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>由示例可知：</p><ul><li>由于<code>MyServlet1、MyServlet2</code>和<code>MyServlet3</code>的<code>load-on-startup</code>元素取值都大于等于 0，因此当 Tomcat 启动时，就对它们进行了初始化。</li><li>由于在<code>Servlet</code>的生命周期内，<code>init()</code>方法（初始化方法）只能被调用一次，因此当 Tomcat 启动完成后，第一次访问<code>MyServlet1、MyServlet2</code>和<code>MyServlet3</code>时，它们不会再次被初始化。</li><li>由于<code>MyServlet4</code>的<code>load-on-startup</code>元素取值为负数，因此只有当第一次请求它时，才会进行初始化。</li><li>由于<code>MyServlet5</code>没有指定<code>load-on-startup</code>元素取值，因此只有当第一次请求它时，才会进行初始化。</li></ul><h2 id="servlet虚拟路径映射" tabindex="-1"><a class="header-anchor" href="#servlet虚拟路径映射"><span>Servlet虚拟路径映射</span></a></h2><p>客户端通过 URL 地址来访问 Web 服务器中的资源，<code>Servlet</code>程序若想被外界访问，就必须被映射到一个 URL 地址上。很多时候，该 URL 地址和<code>Servlet</code>程序的物理路径（在硬盘上的存储位置）并不一致，因此它被称为虚拟路径。<code>Servlet</code>与虚拟路径的对应关系就叫做<code>Servlet</code>虚拟路径映射。</p><p><code>Servlet</code>虚拟路径映射可以被分为 2 类：</p><ul><li>单一映射</li><li>多重映射</li></ul><h3 id="单一映射" tabindex="-1"><a class="header-anchor" href="#单一映射"><span>单一映射</span></a></h3><p>单一映射是指一个<code>Servlet</code>只被映射到一个虚拟路径上。</p><p>单一映射的实现方式有 2 种：</p><ul><li>使用<code>web.xml</code>实现单一映射；</li><li>使用<code>@WebServlet</code>实现单一映射。</li></ul><h4 id="_1-web-xml-实现单一映射" tabindex="-1"><a class="header-anchor" href="#_1-web-xml-实现单一映射"><span>1. web.xml 实现单一映射</span></a></h4><p>在<code>web.xml</code>文件中，使用<code>&lt;servlet&gt;</code>和<code>&lt;servlet-mapping&gt;</code>元素实现<code>Servlet</code>单一映射。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">web-app</span><span style="color:#91CBFF;"> xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">         id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;WebApp_ID&quot;</span><span style="color:#91CBFF;"> metadata-complete</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;false&quot;</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;4.0&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/myServlet&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">web-app</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>说明：</p><ul><li><code>&lt;servlet&gt;</code>元素用于注册<code>Servlet</code>，即给<code>Servlet</code>起一个独一无二的名字。</li><li><code>&lt;servlet&gt;</code>包含两个主要的子元素<code>&lt;servlet-name&gt;</code>和<code>&lt;servlet-class&gt;</code>，分别用于指定<code>Servlet</code>的名称和<code>Servlet</code>的完整限定名（包名+类名）。</li><li><code>&lt;servlet-mapping&gt;</code>元素用于定义<code>Servlet</code>与虚拟路径之间的映射。</li><li><code>&lt;servlet-mapping&gt;</code>包含两个子元素<code>&lt;servlet-name&gt;</code>和<code>&lt;url-pattern&gt;</code>，分别用于指定<code>Servlet</code>的名称和虚拟路径。</li></ul><h4 id="_2-webservlet-实现单一映射" tabindex="-1"><a class="header-anchor" href="#_2-webservlet-实现单一映射"><span>2. @WebServlet 实现单一映射</span></a></h4><p>在<code>@WebServlet</code>注解中，一般使用<code>value</code>属性实现<code>Servlet</code>单一映射。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">WebServlet</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;/MyServlet&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> MyServlet</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> HttpServlet</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> final</span><span style="color:#FF9492;"> long</span><span style="color:#F0F3F6;"> serialVersionUID</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1L</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doGet</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doPost</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#DBB7FF;">        doGet</span><span style="color:#F0F3F6;">(req, resp);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p>也可以使用<code>urlPatterns</code>属性实现<code>Servlet</code>单一映射。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">WebServlet</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">urlPatterns</span><span style="color:#FF9492;"> =</span><span style="color:#ADDCFF;"> &quot;/myServlet&quot;</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> MyServlet</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> HttpServlet</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> final</span><span style="color:#FF9492;"> long</span><span style="color:#F0F3F6;"> serialVersionUID</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1L</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doGet</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doPost</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#DBB7FF;">        doGet</span><span style="color:#F0F3F6;">(req, resp);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h3 id="多重映射" tabindex="-1"><a class="header-anchor" href="#多重映射"><span>多重映射</span></a></h3><p>多重映射是指一个<code>Servlet</code>可以被映射到多个虚拟路径上。此时，客户端可以通过多个路径实现对同一个<code>Servlet</code>的访问。</p><p>多重映射的实现方式有 3 种：</p><ul><li>配置多个<code>&lt;servlet-mapping&gt;</code>元素</li><li>配置多个<code>&lt;url-pattern&gt;</code>子元素</li><li>在<code>@WebServlet</code>的<code>urlPatterns</code>属性中使用字符串数组</li></ul><h4 id="_1-配置多个-servlet-mapping-元素" tabindex="-1"><a class="header-anchor" href="#_1-配置多个-servlet-mapping-元素"><span>1. 配置多个 <code>&lt;servlet-mapping&gt;</code> 元素</span></a></h4><p>Servlet2.5 规范之前，<code>&lt;servlet-mapping&gt;</code>元素只允许包含一个 <code>&lt;url-pattern&gt;</code> 子元素，若要实现多重映射，只能通过配置多个<code>&lt;servlet-mapping&gt;</code>元素实现。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">web-app</span><span style="color:#91CBFF;"> xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;WebApp_ID&quot;</span><span style="color:#91CBFF;"> metadata-complete</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;false&quot;</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;4.0&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;1&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/myServlet&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/myServlet2&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">web-app</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><h4 id="_2-配置多个-url-pattern-子元素" tabindex="-1"><a class="header-anchor" href="#_2-配置多个-url-pattern-子元素"><span>2. 配置多个 <code>&lt;url-pattern&gt;</code> 子元素</span></a></h4><p>从 Servlet2.5 开始，<code>&lt;servlet-mapping&gt;</code>元素可以包含多个<code>&lt;url-pattern&gt;</code>子元素，每个<code>&lt;url-pattern&gt;</code>代表一个虚拟路径的映射规则。因此，通过在一个<code>&lt;servlet-mapping&gt;</code>元素中配置多个<code>&lt;url-pattern&gt;</code>子元素，也可以实现多重映射。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">web-app</span><span style="color:#91CBFF;"> xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;WebApp_ID&quot;</span><span style="color:#91CBFF;"> metadata-complete</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;false&quot;</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;4.0&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.MyServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;1&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/myServlet&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/myServlet3&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">web-app</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><h4 id="_3-webservlet-实现多重映射" tabindex="-1"><a class="header-anchor" href="#_3-webservlet-实现多重映射"><span>3. @WebServlet 实现多重映射</span></a></h4><p>Servlet3.0 增加了对<code>@WebServlet</code>注解的支持，我们可以在<code>urlPatterns</code>属性中，以字符串数组的形式指定一组映射规则来实现多重映射。</p><p>以 servletDemo 为例，在 <code>@WebServlet</code> 注解的 <code>urlPatterns</code> 属性中添加一组虚拟路径，代码如下。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">@</span><span style="color:#FF9492;">WebServlet</span><span style="color:#F0F3F6;">(</span><span style="color:#91CBFF;">urlPatterns</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> { </span><span style="color:#ADDCFF;">&quot;/myServlet&quot;</span><span style="color:#F0F3F6;">, </span><span style="color:#ADDCFF;">&quot;/myServlet4&quot;</span><span style="color:#F0F3F6;"> })</span></span>
<span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> MyServlet</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> HttpServlet</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> final</span><span style="color:#FF9492;"> long</span><span style="color:#F0F3F6;"> serialVersionUID</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1L</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> int</span><span style="color:#F0F3F6;"> initCount</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 0</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> int</span><span style="color:#F0F3F6;"> httpCount</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 0</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> int</span><span style="color:#F0F3F6;"> destoryCount</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 0</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> destroy</span><span style="color:#F0F3F6;">() {</span></span>
<span class="line"><span style="color:#F0F3F6;">        destoryCount</span><span style="color:#FF9492;">++</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">        super</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">destroy</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 向控制台输出destory方法被调用次数</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span></span>
<span class="line"><span style="color:#ADDCFF;">                &quot;**********************************destroy方法：&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> destoryCount </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;*******************************&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> init</span><span style="color:#F0F3F6;">() </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException {</span></span>
<span class="line"><span style="color:#F0F3F6;">        initCount</span><span style="color:#FF9492;">++</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#91CBFF;">        super</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">init</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 向控制台输出init方法被调用次数</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;init方法：&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> initCount);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    public</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doGet</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">        httpCount</span><span style="color:#FF9492;">++</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 控制台输出doGet方法次数</span></span>
<span class="line"><span style="color:#F0F3F6;">        System.out.</span><span style="color:#DBB7FF;">println</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;doGet方法：&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> httpCount);</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 设置返回页面格式与字符集</span></span>
<span class="line"><span style="color:#F0F3F6;">        resp.</span><span style="color:#DBB7FF;">setContentType</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;text/html;charset=UTF-8&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        PrintWriter</span><span style="color:#F0F3F6;"> writer</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> resp.</span><span style="color:#DBB7FF;">getWriter</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 向页面输出</span></span>
<span class="line"><span style="color:#F0F3F6;">        writer.</span><span style="color:#DBB7FF;">write</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;初始化次数:&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> initCount </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;&lt;br/&gt;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#ADDCFF;"> &quot;处理请求次数:&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> httpCount </span><span style="color:#FF9492;">+</span><span style="color:#ADDCFF;"> &quot;&lt;br/&gt;&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#ADDCFF;"> &quot;销毁次数:&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#F0F3F6;"> destoryCount);</span></span>
<span class="line"><span style="color:#F0F3F6;">        writer.</span><span style="color:#DBB7FF;">close</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doPost</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">request</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">response</span><span style="color:#F0F3F6;">)</span></span>
<span class="line"><span style="color:#FF9492;">            throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><h2 id="servlet虚拟路径匹配规则" tabindex="-1"><a class="header-anchor" href="#servlet虚拟路径匹配规则"><span>Servlet虚拟路径匹配规则</span></a></h2><p>当<code>Servlet</code>容器接收到请求后，容器会将请求的 URL 减去当前应用的上下文路径，使用剩余的字符串作为映射 URL 与<code>Servlet</code>虚拟路径进行匹配，匹配成功后将请求交给相应的<code>Servlet</code>进行处理。</p><p>若 URL 为<code>http://localhost:8080/servletDemo/myServlet</code>，其应用上下文是<code>servletDemo</code>，容器会将<code>http://localhost:8080/servletDemo</code>去掉，使用剩余的<code>/myServlet</code>与<code>Servlet</code>虚拟路径进行匹配。</p><h3 id="匹配规则" tabindex="-1"><a class="header-anchor" href="#匹配规则"><span>匹配规则</span></a></h3><p>虚拟路径匹配规则有以下 4 种：</p><ul><li>完全路径匹配</li><li>目录匹配</li><li>扩展名匹配</li><li>缺省匹配（默认匹配）</li></ul><table><thead><tr><th>匹配规则</th><th>使用规则</th><th>虚拟路径</th><th>可访问的url</th></tr></thead><tbody><tr><td>完全路径匹配(精确匹配)</td><td>以/开始，不能包含通配符*</td><td>/user/myServlet</td><td>http://localhost:8080/servletDemo/user/myServlet</td></tr><tr><td>目录匹配</td><td>以/字符开头，并以/*结尾的字符串</td><td>/user/*</td><td>http://localhost:8080/servletDemo/user/aaa</td></tr><tr><td>扩展名匹配</td><td>以通配符*.开头的字符串</td><td><em>.do、</em>.action、*.jsp</td><td>http://localhost:8080/servletDemo/user.do</td></tr><tr><td>缺省匹配（默认匹配）</td><td>映射路径为/</td><td>/</td><td>可以匹配任意请求 URL</td></tr></tbody></table><p>注意：目录匹配和扩展名匹配无法混合使用，即<code>/rest/*.do</code>这种写法是不正确的。</p><h3 id="匹配优先级" tabindex="-1"><a class="header-anchor" href="#匹配优先级"><span>匹配优先级</span></a></h3><p>虚拟路径的匹配优先级顺序为：全路径匹配（精确匹配）&gt; 目录匹配 &gt; 扩展名匹配 &gt; 缺省匹配（默认匹配）。</p><p><code>Servlet</code>容器会从优先级高的虚拟路径开始匹配，匹配成功后就会立刻将请求交给相应的<code>Servlet</code>进行处理，不会再关注其他虚拟路径是否匹配成功。</p><div class="language-java" data-highlighter="shiki" data-ext="java" data-title="java" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#FF9492;">public</span><span style="color:#FF9492;"> class</span><span style="color:#FFB757;"> VirtualPathServlet</span><span style="color:#FF9492;"> extends</span><span style="color:#91CBFF;"> HttpServlet</span><span style="color:#F0F3F6;"> {</span></span>
<span class="line"><span style="color:#FF9492;">    private</span><span style="color:#FF9492;"> static</span><span style="color:#FF9492;"> final</span><span style="color:#FF9492;"> long</span><span style="color:#F0F3F6;"> serialVersionUID</span><span style="color:#FF9492;"> =</span><span style="color:#91CBFF;"> 1L</span><span style="color:#F0F3F6;">;</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doGet</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#F0F3F6;">        resp.</span><span style="color:#DBB7FF;">setContentType</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;text/html;charset=UTF-8&quot;</span><span style="color:#F0F3F6;">);</span></span>
<span class="line"><span style="color:#F0F3F6;">        PrintWriter</span><span style="color:#F0F3F6;"> writer</span><span style="color:#FF9492;"> =</span><span style="color:#F0F3F6;"> resp.</span><span style="color:#DBB7FF;">getWriter</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#BDC4CC;">        // 向页面输出</span></span>
<span class="line"><span style="color:#F0F3F6;">        writer.</span><span style="color:#DBB7FF;">write</span><span style="color:#F0F3F6;">(</span><span style="color:#ADDCFF;">&quot;本次访问的Servlet是:&quot;</span><span style="color:#FF9492;"> +</span><span style="color:#91CBFF;"> this</span><span style="color:#F0F3F6;">.</span><span style="color:#DBB7FF;">getServletName</span><span style="color:#F0F3F6;">());</span></span>
<span class="line"><span style="color:#F0F3F6;">        writer.</span><span style="color:#DBB7FF;">close</span><span style="color:#F0F3F6;">();</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">    @</span><span style="color:#FF9492;">Override</span></span>
<span class="line"><span style="color:#FF9492;">    protected</span><span style="color:#FF9492;"> void</span><span style="color:#DBB7FF;"> doPost</span><span style="color:#F0F3F6;">(HttpServletRequest </span><span style="color:#FFB757;">req</span><span style="color:#F0F3F6;">, HttpServletResponse </span><span style="color:#FFB757;">resp</span><span style="color:#F0F3F6;">) </span><span style="color:#FF9492;">throws</span><span style="color:#F0F3F6;"> ServletException, IOException {</span></span>
<span class="line"><span style="color:#DBB7FF;">        doGet</span><span style="color:#F0F3F6;">(req, resp);</span></span>
<span class="line"><span style="color:#F0F3F6;">    }</span></span>
<span class="line"><span style="color:#F0F3F6;">}</span></span></code></pre></div><p><code>web.xml</code>的配置。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;?</span><span style="color:#72F088;">xml</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;1.0&quot;</span><span style="color:#91CBFF;"> encoding</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;UTF-8&quot;</span><span style="color:#F0F3F6;">?&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">web-app</span><span style="color:#91CBFF;"> xmlns:xsi</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xmlns</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    xsi:schemaLocation</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span>
<span class="line"><span style="color:#91CBFF;">    id</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;WebApp_ID&quot;</span><span style="color:#91CBFF;"> metadata-complete</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;false&quot;</span><span style="color:#91CBFF;"> version</span><span style="color:#F0F3F6;">=</span><span style="color:#ADDCFF;">&quot;4.0&quot;</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet1&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.VirtualPathServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet2&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.VirtualPathServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet3&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.VirtualPathServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet4&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.VirtualPathServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet5&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;net.biancheng.www.VirtualPathServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- 完全路径匹配 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet1&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/hello&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- 目录匹配 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet2&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/abc/my/*&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- 目录匹配 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet3&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/abc/*&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!-- 扩展名匹配 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet4&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;*.do&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#BDC4CC;">    &lt;!--缺省匹配 --&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;MyServlet5&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">        &lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">    &lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">web-app</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><h3 id="tomcat-中的缺省-servlet" tabindex="-1"><a class="header-anchor" href="#tomcat-中的缺省-servlet"><span>Tomcat 中的缺省 Servlet</span></a></h3><p>在 Tomcat 安装目录的<code>\\conf\\web.xml</code>文件中，注册了一个名称为<code>org.apache.catalina.servlets.DefaultServlet</code>的<code>Servlet</code>，并将它设置为缺省<code>Servlet</code>。</p><div class="language-xml" data-highlighter="shiki" data-ext="xml" data-title="xml" style="background-color:#0a0c10;color:#f0f3f6;"><pre class="shiki github-dark-high-contrast vp-code"><code><span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;default&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;org.apache.catalina.servlets.DefaultServlet&lt;/</span><span style="color:#72F088;">servlet-class</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">				&lt;</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;debug&lt;/</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">				&lt;</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;0&lt;/</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;/</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">				&lt;</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;listings&lt;/</span><span style="color:#72F088;">param-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">				&lt;</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;false&lt;/</span><span style="color:#72F088;">param-value</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;/</span><span style="color:#72F088;">init-param</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;1&lt;/</span><span style="color:#72F088;">load-on-startup</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">servlet</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;default&lt;/</span><span style="color:#72F088;">servlet-name</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">		&lt;</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;/&lt;/</span><span style="color:#72F088;">url-pattern</span><span style="color:#F0F3F6;">&gt;</span></span>
<span class="line"><span style="color:#F0F3F6;">&lt;/</span><span style="color:#72F088;">servlet-mapping</span><span style="color:#F0F3F6;">&gt;</span></span></code></pre></div><p>Tomcat 服务器中的 Web 应用没有缺省<code>Servlet</code>时，会将<code>DefaultServlet</code> 作为其缺省<code>Servlet</code>。当客户端访问 Tomcat 服务器中某个静态 HTML 文件或者图片时，<code>DefaultServlet</code>会判断该 HTML 或图片是否存在，若存在，则将数据以流的形式返回客户端，否则会报告 404 错误。</p>`,107)]))}const y=l(o,[["render",t],["__file","servlet2.html.vue"]]),i=JSON.parse('{"path":"/java/servlet/servlet2.html","title":"","lang":"zh-CN","frontmatter":{"description":"@WebServlet注解 web.xml可以将所有的 Servlet 的配置集中进行管理，但是若项目中 Servelt 数量较多时，web.xml的配置会变得十分的冗长。这种情况下，注解就是一种更好的选择。 与 XML 不同，注解不需要依赖于配置文件，它可以直接在类中使用，其配置只对当前类有效，这样就避免了集中管理造成的配置冗长问题。 Servlet...","head":[["meta",{"property":"og:url","content":"https://wsq01.github.io/wsq-blog/java/servlet/servlet2.html"}],["meta",{"property":"og:description","content":"@WebServlet注解 web.xml可以将所有的 Servlet 的配置集中进行管理，但是若项目中 Servelt 数量较多时，web.xml的配置会变得十分的冗长。这种情况下，注解就是一种更好的选择。 与 XML 不同，注解不需要依赖于配置文件，它可以直接在类中使用，其配置只对当前类有效，这样就避免了集中管理造成的配置冗长问题。 Servlet..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-27T02:39:10.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-27T02:39:10.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-27T02:39:10.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"WSQ\\",\\"url\\":\\"https://wsq01.github.com\\"}]}"]]},"headers":[{"level":2,"title":"@WebServlet注解","slug":"webservlet注解","link":"#webservlet注解","children":[{"level":3,"title":"@WebServlet 注解的属性","slug":"webservlet-注解的属性","link":"#webservlet-注解的属性","children":[]},{"level":3,"title":"@WebServlet 注解的使用","slug":"webservlet-注解的使用","link":"#webservlet-注解的使用","children":[]},{"level":3,"title":"1. 启用注解支持","slug":"_1-启用注解支持","link":"#_1-启用注解支持","children":[]},{"level":3,"title":"@WebServlet 注解 和 web.xml 的优缺点","slug":"webservlet-注解-和-web-xml-的优缺点","link":"#webservlet-注解-和-web-xml-的优缺点","children":[]}]},{"level":2,"title":"Servlet生命周期","slug":"servlet生命周期","link":"#servlet生命周期","children":[{"level":3,"title":"初始化阶段","slug":"初始化阶段","link":"#初始化阶段","children":[]},{"level":3,"title":"运行时阶段","slug":"运行时阶段","link":"#运行时阶段","children":[]},{"level":3,"title":"销毁阶段","slug":"销毁阶段","link":"#销毁阶段","children":[]},{"level":3,"title":"Servlet 生命周期执行流程","slug":"servlet-生命周期执行流程","link":"#servlet-生命周期执行流程","children":[]},{"level":3,"title":"示例","slug":"示例","link":"#示例","children":[]}]},{"level":2,"title":"load-on-startup元素：控制Servlet启动优先级","slug":"load-on-startup元素-控制servlet启动优先级","link":"#load-on-startup元素-控制servlet启动优先级","children":[]},{"level":2,"title":"Servlet虚拟路径映射","slug":"servlet虚拟路径映射","link":"#servlet虚拟路径映射","children":[{"level":3,"title":"单一映射","slug":"单一映射","link":"#单一映射","children":[]},{"level":3,"title":"多重映射","slug":"多重映射","link":"#多重映射","children":[]}]},{"level":2,"title":"Servlet虚拟路径匹配规则","slug":"servlet虚拟路径匹配规则","link":"#servlet虚拟路径匹配规则","children":[{"level":3,"title":"匹配规则","slug":"匹配规则","link":"#匹配规则","children":[]},{"level":3,"title":"匹配优先级","slug":"匹配优先级","link":"#匹配优先级","children":[]},{"level":3,"title":"Tomcat 中的缺省 Servlet","slug":"tomcat-中的缺省-servlet","link":"#tomcat-中的缺省-servlet","children":[]}]}],"git":{"createdTime":1730426129000,"updatedTime":1745721550000,"contributors":[{"name":"WSQ","email":"592786982@qq.com","commits":3}]},"readingTime":{"minutes":15.28,"words":4585},"filePathRelative":"java/servlet/servlet2.md","localizedDate":"2024年11月1日","autoDesc":true}');export{y as comp,i as data};
